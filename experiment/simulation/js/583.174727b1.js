"use strict";(self["webpackChunkexp_10"]=self["webpackChunkexp_10"]||[]).push([[583],{5583:function(t,n,e){e.r(n),e.d(n,{default:function(){return nn}});e(7658);var o=e(3396),r=e(7139),i=e(9242);const s={class:"app"},l={class:"buttons"},a=["disabled"],c=["disabled"],m=["disabled"],u={id:"buttons",class:"relative"};function p(t,n,e,p,d,h){return(0,o.wg)(),(0,o.iD)(o.HY,null,[(0,o._)("main",s,[(0,o._)("div",l,[(0,o._)("button",{onClick:n[0]||(n[0]=t=>d.componentSelect="OneInstructionsComponent"),style:(0,r.j5)("OneInstructionsComponent"===d.componentSelect?"background-color: #55acee":"")},"1. Instructions ",4),(0,o._)("button",{onClick:n[1]||(n[1]=t=>d.componentSelect="ThreeTestDriverComponent"),style:(0,r.j5)("ThreeTestDriverComponent"===d.componentSelect?"background-color: #55acee":"")},"2. Test Driver ",4),(0,o._)("button",{onClick:n[2]||(n[2]=t=>d.componentSelect="ThreePersonComponent"),disabled:!d.testDriveComplete,style:(0,r.j5)("ThreePersonComponent"===d.componentSelect?"background-color: #55acee":"")},"3. Person ",12,a),(0,o._)("button",{onClick:n[3]||(n[3]=t=>d.componentSelect="ThreeCustomerComponent"),disabled:!d.personComplete,style:(0,r.j5)("ThreeCustomerComponent"===d.componentSelect?"background-color: #55acee":"")},"4. Customer ",12,c),(0,o._)("button",{onClick:n[4]||(n[4]=t=>d.componentSelect="ThreeClerkComponent"),disabled:!d.customerComplete,style:(0,r.j5)("ThreeClerkComponent"===d.componentSelect?"background-color: #55acee":"")},"5. Clerk ",12,m),(0,o._)("button",{onClick:n[5]||(n[5]=t=>d.componentSelect="OneVehicleComponent"),style:(0,r.j5)("OneVehicleComponent"===d.componentSelect?"background-color: #55acee":"")},"6. Vehicle ",4),(0,o._)("button",{onClick:n[6]||(n[6]=t=>d.componentSelect="OneReservationComponent"),style:(0,r.j5)("OneReservationComponent"===d.componentSelect?"background-color: #55acee":"")},"7. Reservation ",4),(0,o._)("button",{onClick:n[7]||(n[7]=t=>d.componentSelect="OneRentalSystemComponent"),style:(0,r.j5)("OneRentalSystemComponent"===d.componentSelect?"background-color: #55acee":"")},"8. Rental System ",4),(0,o._)("button",{onClick:n[8]||(n[8]=t=>d.componentSelect="OneClassComponent"),style:(0,r.j5)("OneClassComponent"===d.componentSelect?"background-color: #55acee":"")},"9. Class Diagram ",4)]),((0,o.wg)(),(0,o.j4)(o.Ob,null,[((0,o.wg)(),(0,o.j4)((0,o.LL)(d.componentSelect),{onInstructionsRead:n[9]||(n[9]=t=>d.componentSelect="ThreeTestDriverComponent"),onTestDriverComplete:h.testDriveCompleteFunc,onPersonComplete:h.personCompleteFunc,onCustomerComplete:h.customerCompleteFunc,onClerkComplete:h.clerkCompleteFunc},null,40,["onTestDriverComplete","onPersonComplete","onCustomerComplete","onClerkComplete"]))],1024))]),(0,o.wy)((0,o._)("footer",null,[(0,o._)("div",u,[(0,o._)("button",{class:"navitem",onClick:n[10]||(n[10]=n=>t.$router.push("/congratulations"))},"Next")])],512),[[i.F8,d.testDriveComplete&&d.personComplete&&d.customerComplete&&d.clerkComplete]])],64)}const d=t=>((0,o.dD)("data-v-4e82fc4f"),t=t(),(0,o.Cn)(),t),h={class:"app"},b=d((()=>(0,o._)("div",{id:"snackbar"},"Some text some message..",-1))),y={class:"row"},C={class:"column"},g=d((()=>(0,o._)("h1",{style:{padding:"25px","padding-bottom":"0px"}},"Enter your code here .",-1))),j=d((()=>(0,o._)("p",{style:{padding:"25px","padding-top":"0px"}},"Follow instructions provided in the comments. Refer to the class diagram for better understanding.",-1))),S=d((()=>(0,o._)("pre",null,'import java.util.*;\nimport java.text.*;\n\npublic class Clerk extends Person{\n\tprivate final int empID;\n\tprivate static int employeeCount=0;\n\t\n\tpublic Clerk()\n\t{\n\t\tsuper();\n\t\temployeeCount++;\n\t\tthis.empID=employeeCount;\n\t}\n\t\n\tpublic Clerk(String name, String email) {\n\t\tsuper(name, email);\n\t\temployeeCount++;\n\t\tthis.empID=employeeCount;\n\t}\n\t\n\tpublic Clerk(String name, long phone) {\n\t\tsuper(name, phone);\n\t\temployeeCount++;\n\t\tthis.empID=employeeCount;\n\t}\n\t\n\tpublic Clerk(String name, String email, long phone) {\n\t\tsuper(name, email, phone);\n\t\temployeeCount++;\n\t\tthis.empID=employeeCount;\n\t}\n\t\n\tpublic int getEmpID() {\n\t\treturn empID;\n\t}\n\t\n\tpublic String requestVehicle(Reservation robj) throws ParseException\n\t{\n\t\tSimpleDateFormat sdformat = new SimpleDateFormat("yyyy-MM-dd");\n\t    Date d = sdformat.parse("2022-02-29");\n\t\tif(robj.getBookingDate().compareTo(d)==0)\n\t\t{\n\t\t\tif(robj.locateReservation().compareTo("Vehicle available")==0)\n\t\t\t\treturn "initiate contract";\n\t\t\telse\n\t\t\t\treturn "wait for vehicle";\n\t\t}\n\t\treturn "Booking date not matching";\n\t}\n\t\n\tpublic String signContract(Reservation robj)\n\t{\n\t\tSystem.out.println(robj.releaseContract());\n\t\trobj.getVehicleObj().updateKeyStatus();\n\t\treturn "Vehicle key handedover";\n\t}\n\t\n\tpublic String toString()\n\t{\n\t\treturn "[ID: "+ getEmpID()+ ", Name: "+getName()+\n\t\t\t\t", Email: "+getEmail()+", Phone: "+getPhone()+ ", City: "+getCity()+" ]";\n\t}\n\t\n            ',-1))),k=d((()=>(0,o._)("br",null,null,-1))),v=d((()=>(0,o._)("p",{id:"comment"},"//Override the addEmail method declared in Person",-1))),w=d((()=>(0,o._)("br",null,null,-1))),f=d((()=>(0,o._)("br",null,null,-1))),P=d((()=>(0,o._)("pre",null,'public class Customer extends Person{\n\t\n\tprivate final int customerID;\n\tprivate static int customerCount=0; \n\t\n\tpublic Customer()\n\t{\n\t\tsuper();\n\t\tcustomerCount++;\n\t\tthis.customerID=customerCount;\n\t}\n\t\n\tpublic Customer(String custName, String email) {\n\t\tsuper(custName, email);\n\t\tcustomerCount++;\n\t\tthis.customerID=customerCount;\n\t}\n\t\n\tpublic Customer(String custName, long phone) {\n\t\tsuper(custName, phone);\n\t\tcustomerCount++;\n\t\tthis.customerID=customerCount;\n\t}\n\t\n\tpublic Customer(String custName, String email, long phone) {\n\t\tsuper(custName, email, phone);\n\t\tcustomerCount++;\n\t\tthis.customerID=customerCount;\n\t}\n\t\n\tpublic int getcustomerID() {\n\t\treturn customerID;\n\t}\n\t\n\tpublic String toString()\n\t{\n\t\treturn "[ID: "+ getcustomerID()+ ", Name: "+getName()+\n\t\t\t\t", Email: "+getEmail()+", Phone: "+getPhone()+ ", City: "+getCity()+" ]";\n\t}\n\n    @Override\n\tpublic Clerk addEmail() {\n\t\n            ',-1))),L=d((()=>(0,o._)("p",{id:"comment"},[(0,o.Uk)("//Set the customer's email to Customer name + "),(0,o._)("b",null,'"@cust.gtravels.com"')],-1))),_=d((()=>(0,o._)("br",null,null,-1))),x=d((()=>(0,o._)("br",null,null,-1))),E=d((()=>(0,o._)("pre",null,'public class Customer extends Person{\n\t\n\tprivate final int customerID;\n\tprivate static int customerCount=0; \n\t\n\tpublic Customer()\n\t{\n\t\tsuper();\n\t\tcustomerCount++;\n\t\tthis.customerID=customerCount;\n\t}\n\t\n\tpublic Customer(String custName, String email) {\n\t\tsuper(custName, email);\n\t\tcustomerCount++;\n\t\tthis.customerID=customerCount;\n\t}\n\t\n\tpublic Customer(String custName, long phone) {\n\t\tsuper(custName, phone);\n\t\tcustomerCount++;\n\t\tthis.customerID=customerCount;\n\t}\n\t\n\tpublic Customer(String custName, String email, long phone) {\n\t\tsuper(custName, email, phone);\n\t\tcustomerCount++;\n\t\tthis.customerID=customerCount;\n\t}\n\t\n\tpublic int getcustomerID() {\n\t\treturn customerID;\n\t}\n\t\n\tpublic String toString()\n\t{\n\t\treturn "[ID: "+ getcustomerID()+ ", Name: "+getName()+\n\t\t\t\t", Email: "+getEmail()+", Phone: "+getPhone()+ ", City: "+getCity()+" ]";\n\t}\n\n    @Override\n\tpublic Clerk addEmail() {\n        Clerk cobj=new Clerk(this.getName(), this.getName()\n                +"@gtravels.com", this.getPhone());\n\t\tcobj.setCity(this.getCity());\n\t\treturn cobj;\n\t}\n}\n\t\n            ',-1))),D=[E];function T(t,n,e,s,l,a){return(0,o.wg)(),(0,o.iD)("main",h,[b,(0,o._)("div",y,[(0,o._)("div",C,[g,j,(0,o._)("div",{class:"codebox",id:"codebox",style:(0,r.j5)({display:l.display[0]})},[S,(0,o.Uk)("    @"),(0,o.wy)((0,o._)("input",{id:"one","onUpdate:modelValue":n[0]||(n[0]=n=>t.one=n),maxlength:"8",style:{width:"110px"},spellcheck:"false"},null,512),[[i.nr,t.one]]),k,(0,o.Uk)("   public Clerk addEmail() { "),v,w,(0,o.Uk)(" } "),f,(0,o._)("button",{class:"button-9",id:"btn1",onClick:n[1]||(n[1]=t=>a.validate_one())},(0,r.zw)(l.button_value),1)],4),(0,o._)("div",{class:"codebox",id:"codebox",style:(0,r.j5)({display:l.display[1]})},[P,(0,o.Uk)("    Clerk cobj = new Clerk(this.getName(), this."),(0,o.wy)((0,o._)("input",{spellcheck:"false",id:"one","onUpdate:modelValue":n[2]||(n[2]=n=>t.one=n),maxlength:"7",style:{width:"100px"}},null,512),[[i.nr,t.one]]),(0,o.Uk)('() + "'),(0,o.wy)((0,o._)("input",{spellcheck:"false",id:"two","onUpdate:modelValue":n[3]||(n[3]=n=>t.two=n),maxlength:"13",style:{width:"170px"}},null,512),[[i.nr,t.two]]),(0,o.Uk)('", this.getPhone()); '),L,_,(0,o.Uk)(" } "),x,(0,o._)("button",{class:"button-9",id:"btn1",onClick:n[4]||(n[4]=t=>a.validate_two())},(0,r.zw)(l.button_value),1)],4),(0,o._)("div",{class:"codebox",id:"codebox",style:(0,r.j5)({display:l.display[2]})},D,4)])])])}var A={methods:{correct1(){var t=document.getElementById("snackbar");t.innerHTML="Correct",t.style.backgroundColor="green",t.className="show",setTimeout((function(){t.className=t.className.replace("show","")}),3e3)},incorrect(){var t=document.getElementById("snackbar");t.innerHTML="Inorrect. Try again",t.style.backgroundColor="red",t.className="show",setTimeout((function(){t.className=t.className.replace("show","")}),3e3)},validate_one(){console.log(this.one,this.two),"Override"==this.one?(this.correct1(),this.display[0]="none",this.display[1]="block"):this.incorrect()},validate_two(){"getName"===this.two&&"@gtravels.com"==this.three?(this.correct1(),this.display[1]="none",this.display[2]="block"):this.incorrect()},validate_three(){"clerkobj"==this.five&&"Clerk"==this.six?(this.correct1(),this.display[2]="none",this.display[3]="block",this.$emit("clerkComplete",!0)):this.incorrect()}},data(){return{id:"container",class:"wrapper",button_value:"Next",button_text:"Incorrect. Try again",button_text_right:"Correct. Next",correct:!1,display:["block","none","none","none","none","none","none","none","none","none","none","none","none","none","none"]}}},N=e(89);const I=(0,N.Z)(A,[["render",T],["__scopeId","data-v-4e82fc4f"]]);var O=I,R=e(7494);const U=t=>((0,o.dD)("data-v-3101dad1"),t=t(),(0,o.Cn)(),t),F={class:"app"},V=U((()=>(0,o._)("div",{id:"snackbar"},"Some text some message..",-1))),W={class:"row"},B={class:"column"},H=U((()=>(0,o._)("h1",{style:{padding:"25px","padding-bottom":"0px"}},"Enter your code here .",-1))),z=U((()=>(0,o._)("p",{style:{padding:"25px","padding-top":"0px"}},"Follow instructions provided in the comments. Refer to the class diagram for better understanding.",-1))),M=U((()=>(0,o._)("pre",null,'public class Customer extends Person{\n\t\n\tprivate final int customerID;\n\tprivate static int customerCount=0; \n\t\n\tpublic Customer()\n\t{\n\t\tsuper();\n\t\tcustomerCount++;\n\t\tthis.customerID=customerCount;\n\t}\n\t\n\tpublic Customer(String custName, String email) {\n\t\tsuper(custName, email);\n\t\tcustomerCount++;\n\t\tthis.customerID=customerCount;\n\t}\n\t\n\tpublic Customer(String custName, long phone) {\n\t\tsuper(custName, phone);\n\t\tcustomerCount++;\n\t\tthis.customerID=customerCount;\n\t}\n\t\n\tpublic Customer(String custName, String email, long phone) {\n\t\tsuper(custName, email, phone);\n\t\tcustomerCount++;\n\t\tthis.customerID=customerCount;\n\t}\n\t\n\tpublic int getcustomerID() {\n\t\treturn customerID;\n\t}\n\t\n\tpublic String toString()\n\t{\n\t\treturn "[ID: "+ getcustomerID()+ ", Name: "+getName()+\n\t\t\t\t", Email: "+getEmail()+", Phone: "+getPhone()+ ", City: "+getCity()+" ]";\n\t}\n\t\n}\n            ',-1))),G=U((()=>(0,o._)("br",null,null,-1))),Z=U((()=>(0,o._)("p",{id:"comment"},"//Override the addEmail method declared in Person",-1))),q=U((()=>(0,o._)("br",null,null,-1))),$=U((()=>(0,o._)("br",null,null,-1))),K=U((()=>(0,o._)("pre",null,'public class Customer extends Person{\n\t\n\tprivate final int customerID;\n\tprivate static int customerCount=0; \n\t\n\tpublic Customer()\n\t{\n\t\tsuper();\n\t\tcustomerCount++;\n\t\tthis.customerID=customerCount;\n\t}\n\t\n\tpublic Customer(String custName, String email) {\n\t\tsuper(custName, email);\n\t\tcustomerCount++;\n\t\tthis.customerID=customerCount;\n\t}\n\t\n\tpublic Customer(String custName, long phone) {\n\t\tsuper(custName, phone);\n\t\tcustomerCount++;\n\t\tthis.customerID=customerCount;\n\t}\n\t\n\tpublic Customer(String custName, String email, long phone) {\n\t\tsuper(custName, email, phone);\n\t\tcustomerCount++;\n\t\tthis.customerID=customerCount;\n\t}\n\t\n\tpublic int getcustomerID() {\n\t\treturn customerID;\n\t}\n\t\n\tpublic String toString()\n\t{\n\t\treturn "[ID: "+ getcustomerID()+ ", Name: "+getName()+\n\t\t\t\t", Email: "+getEmail()+", Phone: "+getPhone()+ ", City: "+getCity()+" ]";\n\t}\n\n    @Override\n\tpublic Customer addEmail() {\n\t\n            ',-1))),Y=U((()=>(0,o._)("p",{id:"comment"},[(0,o.Uk)("//Set the customer's email to Customer name + "),(0,o._)("b",null,'"@cust.gtravels.com"')],-1))),J=U((()=>(0,o._)("br",null,null,-1))),Q=U((()=>(0,o._)("br",null,null,-1))),X=U((()=>(0,o._)("pre",null,'public class Customer extends Person{\n\t\n\tprivate final int customerID;\n\tprivate static int customerCount=0; \n\t\n\tpublic Customer()\n\t{\n\t\tsuper();\n\t\tcustomerCount++;\n\t\tthis.customerID=customerCount;\n\t}\n\t\n\tpublic Customer(String custName, String email) {\n\t\tsuper(custName, email);\n\t\tcustomerCount++;\n\t\tthis.customerID=customerCount;\n\t}\n\t\n\tpublic Customer(String custName, long phone) {\n\t\tsuper(custName, phone);\n\t\tcustomerCount++;\n\t\tthis.customerID=customerCount;\n\t}\n\t\n\tpublic Customer(String custName, String email, long phone) {\n\t\tsuper(custName, email, phone);\n\t\tcustomerCount++;\n\t\tthis.customerID=customerCount;\n\t}\n\t\n\tpublic int getcustomerID() {\n\t\treturn customerID;\n\t}\n\t\n\tpublic String toString()\n\t{\n\t\treturn "[ID: "+ getcustomerID()+ ", Name: "+getName()+\n\t\t\t\t", Email: "+getEmail()+", Phone: "+getPhone()+ ", City: "+getCity()+" ]";\n\t}\n\n    @Override\n\tpublic Customer addEmail() {\n        Customer cobj=new Customer(this.getName(), this.getName()\n                +"@cust.gtravels.com", this.getPhone());\n\t\tcobj.setCity(this.getCity());\n\t\treturn cobj;\n\t}\n}\n\t\n            ',-1))),tt=[X];function nt(t,n,e,s,l,a){return(0,o.wg)(),(0,o.iD)("main",F,[V,(0,o._)("div",W,[(0,o._)("div",B,[H,z,(0,o._)("div",{class:"codebox",id:"codebox",style:(0,r.j5)({display:l.display[0]})},[M,(0,o.Uk)("    @"),(0,o.wy)((0,o._)("input",{id:"one","onUpdate:modelValue":n[0]||(n[0]=n=>t.one=n),maxlength:"8",style:{width:"110px"},spellcheck:"false"},null,512),[[i.nr,t.one]]),G,(0,o.Uk)("   public Customer addEmail() { "),Z,q,(0,o.Uk)(" } "),$,(0,o._)("button",{class:"button-9",id:"btn1",onClick:n[1]||(n[1]=t=>a.validate_one())},(0,r.zw)(l.button_value),1)],4),(0,o._)("div",{class:"codebox",id:"codebox",style:(0,r.j5)({display:l.display[1]})},[K,(0,o.Uk)("    Customer cobj = new Customer(this.getName(), this."),(0,o.wy)((0,o._)("input",{spellcheck:"false",id:"one","onUpdate:modelValue":n[2]||(n[2]=n=>t.one=n),maxlength:"7",style:{width:"100px"}},null,512),[[i.nr,t.one]]),(0,o.Uk)('() + "'),(0,o.wy)((0,o._)("input",{spellcheck:"false",id:"two","onUpdate:modelValue":n[3]||(n[3]=n=>t.two=n),maxlength:"18",style:{width:"200px"}},null,512),[[i.nr,t.two]]),(0,o.Uk)('", this.getPhone()); '),Y,J,(0,o.Uk)(" } "),Q,(0,o._)("button",{class:"button-9",id:"btn1",onClick:n[4]||(n[4]=t=>a.validate_two())},(0,r.zw)(l.button_value),1)],4),(0,o._)("div",{class:"codebox",id:"codebox",style:(0,r.j5)({display:l.display[2]})},tt,4)])])])}var et={methods:{correct1(){var t=document.getElementById("snackbar");t.innerHTML="Correct",t.style.backgroundColor="green",t.className="show",setTimeout((function(){t.className=t.className.replace("show","")}),3e3)},incorrect(){var t=document.getElementById("snackbar");t.innerHTML="Inorrect. Try again",t.style.backgroundColor="red",t.className="show",setTimeout((function(){t.className=t.className.replace("show","")}),3e3)},validate_one(){console.log(this.one,this.two),"Override"==this.one?(this.correct1(),this.display[0]="none",this.display[1]="block"):this.incorrect()},validate_two(){"getName"===this.two&&"@cust.gtravels.com"==this.three?(this.correct1(),this.display[1]="none",this.display[2]="block"):this.incorrect()},validate_three(){"clerkobj"==this.five&&"Clerk"==this.six?(this.correct1(),this.display[2]="none",this.display[3]="block",this.$emit("customerComplete",!0)):this.incorrect()}},data(){return{id:"container",class:"wrapper",button_value:"Next",button_text:"Incorrect. Try again",button_text_right:"Correct. Next",correct:!1,display:["block","none","none","none","none","none","none","none","none","none","none","none","none","none","none"]}}};const ot=(0,N.Z)(et,[["render",nt],["__scopeId","data-v-3101dad1"]]);var rt=ot,it=e(5487);const st=t=>((0,o.dD)("data-v-f28e2a6a"),t=t(),(0,o.Cn)(),t),lt={class:"app"},at=st((()=>(0,o._)("div",{id:"snackbar"},"Some text some message..",-1))),ct={class:"row"},mt={class:"column"},ut=st((()=>(0,o._)("h1",{style:{padding:"25px","padding-bottom":"0px"}},"Enter your code here .",-1))),pt=st((()=>(0,o._)("p",{style:{padding:"25px","padding-top":"0px"}},"Follow instructions provided in the comments. Refer to the class diagram for better understanding.",-1))),dt=st((()=>(0,o._)("pre",null,"\nabstract public class Person {\n\tprivate String name;\n\tprivate String email;\n\tprivate long phone;\n\tprivate String city;\n\n\tpublic Person()\n\t{\n\t\t\n\t}\n\t\n\tpublic Person(String name, String email) {\n\t\tthis.name = name;\n\t\tthis.setEmail(email);\n\t}\n\t\n\tpublic Person(String name, long phone) {\n\t\tthis.name = name;\n\t\tthis.setPhone(phone);\n\t}\n\t\n\tpublic Person(String name, String email, long phone) {\n\t\tthis.name = name;\n\t\tthis.email =email;\n\t\tthis.setPhone(phone);\n\t}\n\n\tpublic String getName() {\n\t\treturn name;\n\t}\n\t\n\t\n\tpublic String getEmail() {\n\t\treturn email;\n\t}\n\n\tpublic void setEmail(String email) {\n\t\tthis.email = email;\n\t}\n\n\tpublic long getPhone() {\n\t\treturn phone;\n\t}\n\n\tpublic void setPhone(long phone) {\t\t\n\t\tif(phone >= 0000000000L && phone <= 9999999999L)\n\t\t\tthis.phone = phone;\n\t\telse\n\t\t\tthis.phone = 9999999999L;\n\t\t\n\t}\n\n\tpublic String getCity() {\n\t\treturn city;\n\t}\n\n\tpublic void setCity(String city) {\n\t\tthis.city = city;\n\t}\n            ",-1))),ht=st((()=>(0,o._)("p",{id:"comment"},"//Write a method 'addEmailList'. Return a generic that extends Person",-1))),bt=st((()=>(0,o._)("br",null,null,-1))),yt=st((()=>(0,o._)("br",null,null,-1))),Ct=st((()=>(0,o._)("pre",null,"\nabstract public class Person {\n\tprivate String name;\n\tprivate String email;\n\tprivate long phone;\n\tprivate String city;\n\n\tpublic Person()\n\t{\n\t\t\n\t}\n\t\n\tpublic Person(String name, String email) {\n\t\tthis.name = name;\n\t\tthis.setEmail(email);\n\t}\n\t\n\tpublic Person(String name, long phone) {\n\t\tthis.name = name;\n\t\tthis.setPhone(phone);\n\t}\n\t\n\tpublic Person(String name, String email, long phone) {\n\t\tthis.name = name;\n\t\tthis.email =email;\n\t\tthis.setPhone(phone);\n\t}\n\n\tpublic String getName() {\n\t\treturn name;\n\t}\n\t\n\t\n\tpublic String getEmail() {\n\t\treturn email;\n\t}\n\n\tpublic void setEmail(String email) {\n\t\tthis.email = email;\n\t}\n\n\tpublic long getPhone() {\n\t\treturn phone;\n\t}\n\n\tpublic void setPhone(long phone) {\t\t\n\t\tif(phone >= 0000000000L && phone <= 9999999999L)\n\t\t\tthis.phone = phone;\n\t\telse\n\t\t\tthis.phone = 9999999999L;\n\t\t\n\t}\n\n\tpublic String getCity() {\n\t\treturn city;\n\t}\n\n\tpublic void setCity(String city) {\n\t\tthis.city = city;\n\t}\n\n    public abstract <T extends Person> T addEmail();\n\n}\n            ",-1))),gt=[Ct];function jt(t,n,e,s,l,a){return(0,o.wg)(),(0,o.iD)("main",lt,[at,(0,o._)("div",ct,[(0,o._)("div",mt,[ut,pt,(0,o._)("div",{class:"codebox",id:"codebox",style:(0,r.j5)({display:l.display[0]})},[dt,(0,o.Uk)("    public "),(0,o.wy)((0,o._)("input",{id:"one","onUpdate:modelValue":n[0]||(n[0]=n=>t.one=n),maxlength:"8",style:{width:"100px"},spellcheck:"false"},null,512),[[i.nr,t.one]]),(0,o.Uk)(" <T extends Person> T "),(0,o.wy)((0,o._)("input",{id:"two","onUpdate:modelValue":n[1]||(n[1]=n=>t.two=n),maxlength:"8",style:{width:"100px"},spellcheck:"false"},null,512),[[i.nr,t.two]]),(0,o.Uk)("(); "),ht,bt,(0,o.Uk)(" } "),yt,(0,o._)("button",{class:"button-9",id:"btn1",onClick:n[2]||(n[2]=t=>a.validate_one())},(0,r.zw)(l.button_value),1)],4),(0,o._)("div",{class:"codebox",id:"codebox",style:(0,r.j5)({display:l.display[1]})},gt,4)])])])}var St={methods:{correct1(){var t=document.getElementById("snackbar");t.innerHTML="Correct",t.style.backgroundColor="green",t.className="show",setTimeout((function(){t.className=t.className.replace("show","")}),3e3)},incorrect(){var t=document.getElementById("snackbar");t.innerHTML="Inorrect. Try again",t.style.backgroundColor="red",t.className="show",setTimeout((function(){t.className=t.className.replace("show","")}),3e3)},validate_one(){console.log(this.one,this.two),"abstract"==this.one&&"addEmail"==this.two?(this.correct1(),this.display[0]="none",this.display[1]="block",this.$emit("personComplete",!0)):this.incorrect()}},data(){return{id:"container",class:"wrapper",button_value:"Next",button_text:"Incorrect. Try again",button_text_right:"Correct. Next",correct:!1,display:["block","none","none","none","none","none","none","none","none","none","none","none","none","none","none"]}}};const kt=(0,N.Z)(St,[["render",jt],["__scopeId","data-v-f28e2a6a"]]);var vt=kt,wt=e(6704),ft=e(7910),Pt=e(6231);const Lt=t=>((0,o.dD)("data-v-5464c083"),t=t(),(0,o.Cn)(),t),_t={class:"app"},xt=Lt((()=>(0,o._)("div",{id:"snackbar"},"Some text some message..",-1))),Et={class:"row"},Dt={class:"column"},Tt=Lt((()=>(0,o._)("h1",{style:{padding:"25px","padding-bottom":"0px"}},"Enter your code here .",-1))),At=Lt((()=>(0,o._)("p",{style:{padding:"25px","padding-top":"0px"}},"Follow instructions provided in the comments. Refer to the class diagram for better understanding.",-1))),Nt=Lt((()=>(0,o._)("pre",null,'import java.util.Scanner;\nimport java.util.ArrayList;\nimport java.text.ParseException;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\nimport java.lang.*;\n\npublic class TestDriver {\n\t\n\tpublic static void main(String[] args) throws ParseException {\n\t\t// TODO Auto-generated method stub\n\t\t\n\t\tRentalSystem rentalSystem = new RentalSystem();\n\t\t\n\t\t//step:1 create a person object and initialize with a customer and clerk object\n\t\tArrayList<Person> pobj= new ArrayList<>();\n\t\tpobj.add(new Clerk("EFG", "efg@gmail.com"));\n\t\tpobj.add(new Customer("ABC", "abc@gmail.com"));\n\t\tpobj.add(new Customer("DEF", 8654678976L));\n\t\tpobj.add(new Customer("GHI", "ghi@gmail.com", 1234567890L));\n\t\tSystem.out.println("list of Person: [");\n\t\tdisplayAll(pobj);\n\t\tSystem.out.println("]");\n\t\t\n\t\tArrayList<Customer> pobj1= new ArrayList<>();\n\t\tpobj1.add(new Customer("ABC", "abc@gmail.com"));\n\t\tpobj1.add(new Customer("DEF", 8654678976L));\n\t\tpobj1.add(new Customer("GHI", "ghi@gmail.com", 1234567890L));\n\t\tSystem.out.println("list of Customer: [");\n\t\tdisplayAll(pobj1);\n\t\tSystem.out.println("]");\n\t\t\n\t\tArrayList<Clerk> pobj2= new ArrayList<>();\n\t\tpobj2.add(new Clerk("ABC1", "abc1@gmail.com"));\n\t\tpobj2.add(new Clerk("DEF1", 8654678976L));\n\t\tpobj2.add(new Clerk("GHI1", "ghi1@gmail.com", 1234567890L));\n\t\tSystem.out.println("list of Clerk: [");\n\t\tdisplayAll(pobj2);\n\t\tSystem.out.println("]");\n\t\t\n\t\tSystem.out.println("Count of persons with Email : " +countPersonWithEmail(pobj));\n\t\tSystem.out.println("Count of persons with Phone : " +countPersonWithPhone(pobj));\n\t\tSystem.out.println("Count of Customer with Email : " +countPersonWithEmail(pobj1));\n\t\tSystem.out.println("Count of Customer with Phone : " +countPersonWithPhone(pobj1));\n\t\tSystem.out.println("Count of Clerk with Email : " +countPersonWithEmail(pobj2));\n\t\tSystem.out.println("Count of Clerk with Phone : " +countPersonWithPhone(pobj2));\n\t\t\n\t\tSystem.out.println("Count of Customers in the list : " +countCustomer(pobj));\n\t\tSystem.out.println("Count of Customers in the list : " +countCustomer(pobj1));\n\t\t//System.out.println("Count of Customers in the list : " +countCustomer(pobj2));//compiler error\n\t\t\n\t\tSystem.out.println("Count of Clerks in the list : " +countClerk(pobj));\n\t\t//System.out.println("Count of Clerks in the list : " +countClerk(pobj1)); //compiler error\n\t\tSystem.out.println("Count of Clerks in the list : " +countClerk(pobj2));\n\t\t\n\t\tArrayList<Person> a = addEmailList(pobj);\n\t\tArrayList<Customer> b = addEmailList(pobj1);\n\t\tArrayList<Clerk> c = addEmailList(pobj2);\n\t\t\n\t\tSystem.out.println("list of Person: [");\n\t\tdisplayAll(a);\n\t\tSystem.out.println("]");\n\t\tSystem.out.println("list of Customer: [");\n\t\tdisplayAll(b);\n\t\tSystem.out.println("]");\n\t\tSystem.out.println("list of Clerk: [");\n\t\tdisplayAll(c);\n\t\tSystem.out.println("]");\n\t\t\t\t\n\t\trentalSystem.clerkobj=new Clerk[1];\t\t\n\t\t//step 2: initialize the clerk object with pobj[0] and check\n\t\t//rentalSystem.clerkobj[0]=pobj.get(0); //compiler error due to type mismatch\n\t\t//step 3: type cast\n\t\t//rentalSystem.clerkobj[0]=(Clerk)pobj.get(0); //no compiler error or runtime error\n\t\t\n\t\t//run the code and check to see the output\n\t\t//Vehicle is available, initiating contract..\n\t\t//Reservation released\n\t\t//Vehicle key handedover\n\t\t\n\t\t//step 4: initialize the clerk object with pobj[1] and check\n\t\t//rentalSystem.clerkobj[0]=pobj.get(1); //compiler error due to type mismatch\n\t\t//step 5: type cast to Clerk\n\t\t//rentalSystem.clerkobj[0]=(Clerk)pobj.get(1); //no compiler error\n\t\t\n\t\t//run the code and check \n\t\t//the following runtime error appears\n\t\t//Exception in thread "main" java.lang.ClassCastException: class Customer cannot be cast to class Clerk (Customer and Clerk are in unnamed module of loader \'app\')\n\t\t//at TestDriver.main(TestDriver.java:23)\n\t\t\n\t\t//Step 6: resolve using try-catch block and instanceof method\t\n\t\ttry\n\t\t{\n\t\t\trentalSystem.clerkobj[0]=(Clerk)pobj.get(1);\n\t\t}\n\t\tcatch(ClassCastException e)\n\t\t{\n\t\t\tif(pobj.get(1) instanceof Clerk)\n\t\t\t\trentalSystem.clerkobj[0] =(Clerk) pobj.get(1);\n\t\t}\n\t\t\n\t\t\n\t\trentalSystem.cobj= new Customer[3];\n\t\trentalSystem.cobj[0]=(Customer) pobj.get(1);\n\t\trentalSystem.cobj[1]=(Customer) pobj.get(2);\n\t\trentalSystem.cobj[2]=(Customer) pobj.get(3);\n\t\trentalSystem.cobj[0].setCity("Coimbatore");\n\t\trentalSystem.cobj[1].setCity("Coimbatore");\n\t\trentalSystem.cobj[2].setCity("Chennai");\n\t\t\n\t\trentalSystem.vobj = new Vehicle[1];\n\t\trentalSystem.vobj[0]=new Vehicle(1234);\n\t\t\n\t\trentalSystem.robj=new Reservation[1];\n\t\trentalSystem.robj[0]= new Reservation(rentalSystem.cobj[0],rentalSystem.vobj[0]);\n\t\tSimpleDateFormat sdformat = new SimpleDateFormat("yyyy-MM-dd");\n\t    Date d = sdformat.parse("2022-02-29");\n\t\trentalSystem.robj[0].setBookingDate(d);\n\t\trentalSystem.robj[0].setContractStatus("Reservation not released");\n\t\t\n\t\t//run this code and check the following error appears\n\t\t//Exception in thread "main" java.lang.NullPointerException: Cannot invoke "Clerk.requestVehicle(Reservation)" because "cl" is null\n\t\t//at RentalSystem.visitOffice(RentalSystem.java:18)\n\t\t//at TestDriver.main(TestDriver.java:62)\n\t\t\n\t\t//Step 7: resolve using a try-catch block to handle the NullPointerException\n\t\ttry\n\t\t{\n\t\t\trentalSystem.visitOffice(rentalSystem.robj[0]);\n\t\t}\n\t\tcatch(NullPointerException e)\n\t\t{\n\t\t\tSystem.out.println("wait for clerk to be assigned");\n\t\t}\t\t\n\t}\t\n\t\n\tpublic static <T extends Person> int countPersonWithEmail(ArrayList<T> alist)\n\t{\n\t\tint count=0;\n\t\tfor(T a: alist)\n\t\t{\n\t\t\tif(a.getEmail()!=null)\n\t\t\t\tcount++;\n\t\t}\n\t\treturn count;\n\t}\t\n\t\n\tpublic static <T extends Person> int countPersonWithPhone(ArrayList<T> alist)\n\t{\n\t\tint count=0;\n\t\tfor(T a: alist)\n\t\t{\n\t\t\tif(a.getPhone()!=0L && a.getPhone()!=999999999L)\n\t\t\t\tcount++;\n\t\t}\n\t\treturn count;\n\t}\t\n\t\n\tpublic static int countCustomer(ArrayList<? super Customer> alist)\n\t{\n\t\tint count=0;\n\t\tfor(Object a: alist)\n\t\t{\n\t\t\tif(a instanceof Customer)\n\t\t\t\tcount++;\n\t\t}\n\t\treturn count;\n\t}\t\n\t\n\tpublic static int countClerk(ArrayList<? super Clerk> alist)\n\t{\n\t\tint count=0;\n\t\tfor(Object a: alist)\n\t\t{\n\t\t\tif(a instanceof Clerk)\n\t\t\t\tcount++;\n\t\t}\n\t\treturn count;\n\t}\t\n\t\n\tpublic static <T extends Person> void displayAll(ArrayList<T> alist)\n\t{\n\t\tfor(Object a: alist)\n\t\t{\n\t\t\tSystem.out.println(a.toString());\n\t\t}\n\t}\t\n\t\n\tpublic static <T extends Person> ArrayList<T> addEmailList(ArrayList<T> alist)\n\t{\n\t\tArrayList<T> newList = new ArrayList<>();\n\t\tfor(T a:alist)\n\t\t\tnewList.add(a.addEmail());\n\t\treturn newList;\n\t}\n\n\t\n}\n\n            ',-1))),It=Lt((()=>(0,o._)("br",null,null,-1))),Ot=Lt((()=>(0,o._)("p",{id:"comment"},"//Write a method 'addEmailList'. Return a generic that extends Person",-1))),Rt=Lt((()=>(0,o._)("br",null,null,-1))),Ut=Lt((()=>(0,o._)("br",null,null,-1))),Ft=Lt((()=>(0,o._)("pre",null,'import java.util.Scanner;\nimport java.util.ArrayList;\nimport java.text.ParseException;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\nimport java.lang.*;\n\npublic class TestDriver {\n\t\n\tpublic static void main(String[] args) throws ParseException {\n\t\t// TODO Auto-generated method stub\n\t\t\n\t\tRentalSystem rentalSystem = new RentalSystem();\n\t\t\n\t\t//step:1 create a person object and initialize with a customer and clerk object\n\t\tArrayList<Person> pobj= new ArrayList<>();\n\t\tpobj.add(new Clerk("EFG", "efg@gmail.com"));\n\t\tpobj.add(new Customer("ABC", "abc@gmail.com"));\n\t\tpobj.add(new Customer("DEF", 8654678976L));\n\t\tpobj.add(new Customer("GHI", "ghi@gmail.com", 1234567890L));\n\t\tSystem.out.println("list of Person: [");\n\t\tdisplayAll(pobj);\n\t\tSystem.out.println("]");\n\t\t\n\t\tArrayList<Customer> pobj1= new ArrayList<>();\n\t\tpobj1.add(new Customer("ABC", "abc@gmail.com"));\n\t\tpobj1.add(new Customer("DEF", 8654678976L));\n\t\tpobj1.add(new Customer("GHI", "ghi@gmail.com", 1234567890L));\n\t\tSystem.out.println("list of Customer: [");\n\t\tdisplayAll(pobj1);\n\t\tSystem.out.println("]");\n\t\t\n\t\tArrayList<Clerk> pobj2= new ArrayList<>();\n\t\tpobj2.add(new Clerk("ABC1", "abc1@gmail.com"));\n\t\tpobj2.add(new Clerk("DEF1", 8654678976L));\n\t\tpobj2.add(new Clerk("GHI1", "ghi1@gmail.com", 1234567890L));\n\t\tSystem.out.println("list of Clerk: [");\n\t\tdisplayAll(pobj2);\n\t\tSystem.out.println("]");\n\t\t\n\t\tSystem.out.println("Count of persons with Email : " +countPersonWithEmail(pobj));\n\t\tSystem.out.println("Count of persons with Phone : " +countPersonWithPhone(pobj));\n\t\tSystem.out.println("Count of Customer with Email : " +countPersonWithEmail(pobj1));\n\t\tSystem.out.println("Count of Customer with Phone : " +countPersonWithPhone(pobj1));\n\t\tSystem.out.println("Count of Clerk with Email : " +countPersonWithEmail(pobj2));\n\t\tSystem.out.println("Count of Clerk with Phone : " +countPersonWithPhone(pobj2));\n\t\t\n\t\tSystem.out.println("Count of Customers in the list : " +countCustomer(pobj));\n\t\tSystem.out.println("Count of Customers in the list : " +countCustomer(pobj1));\n\t\t//System.out.println("Count of Customers in the list : " +countCustomer(pobj2));//compiler error\n\t\t\n\t\tSystem.out.println("Count of Clerks in the list : " +countClerk(pobj));\n\t\t//System.out.println("Count of Clerks in the list : " +countClerk(pobj1)); //compiler error\n\t\tSystem.out.println("Count of Clerks in the list : " +countClerk(pobj2));\n\t\t\n\t\tArrayList<Person> a = addEmailList(pobj);\n\t\tArrayList<Customer> b = addEmailList(pobj1);\n\t\tArrayList<Clerk> c = addEmailList(pobj2);\n\t\t\n\t\tSystem.out.println("list of Person: [");\n\t\tdisplayAll(a);\n\t\tSystem.out.println("]");\n\t\tSystem.out.println("list of Customer: [");\n\t\tdisplayAll(b);\n\t\tSystem.out.println("]");\n\t\tSystem.out.println("list of Clerk: [");\n\t\tdisplayAll(c);\n\t\tSystem.out.println("]");\n\t\t\t\t\n\t\trentalSystem.clerkobj=new Clerk[1];\t\t\n\t\t//step 2: initialize the clerk object with pobj[0] and check\n\t\t//rentalSystem.clerkobj[0]=pobj.get(0); //compiler error due to type mismatch\n\t\t//step 3: type cast\n\t\t//rentalSystem.clerkobj[0]=(Clerk)pobj.get(0); //no compiler error or runtime error\n\t\t\n\t\t//run the code and check to see the output\n\t\t//Vehicle is available, initiating contract..\n\t\t//Reservation released\n\t\t//Vehicle key handedover\n\t\t\n\t\t//step 4: initialize the clerk object with pobj[1] and check\n\t\t//rentalSystem.clerkobj[0]=pobj.get(1); //compiler error due to type mismatch\n\t\t//step 5: type cast to Clerk\n\t\t//rentalSystem.clerkobj[0]=(Clerk)pobj.get(1); //no compiler error\n\t\t\n\t\t//run the code and check \n\t\t//the following runtime error appears\n\t\t//Exception in thread "main" java.lang.ClassCastException: class Customer cannot be cast to class Clerk (Customer and Clerk are in unnamed module of loader \'app\')\n\t\t//at TestDriver.main(TestDriver.java:23)\n\t\t\n\t\t//Step 6: resolve using try-catch block and instanceof method\t\n\t\ttry\n\t\t{\n\t\t\trentalSystem.clerkobj[0]=(Clerk)pobj.get(1);\n\t\t}\n\t\tcatch(ClassCastException e)\n\t\t{\n\t\t\tif(pobj.get(1) instanceof Clerk)\n\t\t\t\trentalSystem.clerkobj[0] =(Clerk) pobj.get(1);\n\t\t}\n\t\t\n\t\t\n\t\trentalSystem.cobj= new Customer[3];\n\t\trentalSystem.cobj[0]=(Customer) pobj.get(1);\n\t\trentalSystem.cobj[1]=(Customer) pobj.get(2);\n\t\trentalSystem.cobj[2]=(Customer) pobj.get(3);\n\t\trentalSystem.cobj[0].setCity("Coimbatore");\n\t\trentalSystem.cobj[1].setCity("Coimbatore");\n\t\trentalSystem.cobj[2].setCity("Chennai");\n\t\t\n\t\trentalSystem.vobj = new Vehicle[1];\n\t\trentalSystem.vobj[0]=new Vehicle(1234);\n\t\t\n\t\trentalSystem.robj=new Reservation[1];\n\t\trentalSystem.robj[0]= new Reservation(rentalSystem.cobj[0],rentalSystem.vobj[0]);\n\t\tSimpleDateFormat sdformat = new SimpleDateFormat("yyyy-MM-dd");\n\t    Date d = sdformat.parse("2022-02-29");\n\t\trentalSystem.robj[0].setBookingDate(d);\n\t\trentalSystem.robj[0].setContractStatus("Reservation not released");\n\t\t\n\t\t//run this code and check the following error appears\n\t\t//Exception in thread "main" java.lang.NullPointerException: Cannot invoke "Clerk.requestVehicle(Reservation)" because "cl" is null\n\t\t//at RentalSystem.visitOffice(RentalSystem.java:18)\n\t\t//at TestDriver.main(TestDriver.java:62)\n\t\t\n\t\t//Step 7: resolve using a try-catch block to handle the NullPointerException\n\t\ttry\n\t\t{\n\t\t\trentalSystem.visitOffice(rentalSystem.robj[0]);\n\t\t}\n\t\tcatch(NullPointerException e)\n\t\t{\n\t\t\tSystem.out.println("wait for clerk to be assigned");\n\t\t}\t\t\n\t}\t\n\t\n\tpublic static <T extends Person> int countPersonWithEmail(ArrayList<T> alist)\n\t{\n\t\tint count=0;\n\t\tfor(T a: alist)\n\t\t{\n\t\t\tif(a.getEmail()!=null)\n\t\t\t\tcount++;\n\t\t}\n\t\treturn count;\n\t}\t\n\t\n\tpublic static <T extends Person> int countPersonWithPhone(ArrayList<T> alist)\n\t{\n\t\tint count=0;\n\t\tfor(T a: alist)\n\t\t{\n\t\t\tif(a.getPhone()!=0L && a.getPhone()!=999999999L)\n\t\t\t\tcount++;\n\t\t}\n\t\treturn count;\n\t}\t\n\t\n\tpublic static int countCustomer(ArrayList<? super Customer> alist)\n\t{\n\t\tint count=0;\n\t\tfor(Object a: alist)\n\t\t{\n\t\t\tif(a instanceof Customer)\n\t\t\t\tcount++;\n\t\t}\n\t\treturn count;\n\t}\t\n\t\n\tpublic static int countClerk(ArrayList<? super Clerk> alist)\n\t{\n\t\tint count=0;\n\t\tfor(Object a: alist)\n\t\t{\n\t\t\tif(a instanceof Clerk)\n\t\t\t\tcount++;\n\t\t}\n\t\treturn count;\n\t}\t\n\t\n\tpublic static <T extends Person> void displayAll(ArrayList<T> alist)\n\t{\n\t\tfor(Object a: alist)\n\t\t{\n\t\t\tSystem.out.println(a.toString());\n\t\t}\n\t}\t\n\t\n\tpublic static <T extends Person> ArrayList<T> addEmailList(ArrayList<T> alist)\n\t{\n\t\tArrayList<T> newList = new ArrayList<>();\n\t\tfor(T a:alist)\n\t\t\tnewList.add(a.addEmail());\n\t\treturn newList;\n\t}\n\n\t\n}\n\npublic static <T extends Person> ArrayList<T> addEmailList(ArrayList<T> alist)\n\t{\n            ',-1))),Vt=Lt((()=>(0,o._)("p",{id:"comment"},"//Delcare an array list that can store generics of type 'T'",-1))),Wt=Lt((()=>(0,o._)("br",null,null,-1))),Bt=Lt((()=>(0,o._)("br",null,null,-1))),Ht=Lt((()=>(0,o._)("pre",null,'import java.util.Scanner;\nimport java.util.ArrayList;\nimport java.text.ParseException;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\nimport java.lang.*;\n\npublic class TestDriver {\n\t\n\tpublic static void main(String[] args) throws ParseException {\n\t\t// TODO Auto-generated method stub\n\t\t\n\t\tRentalSystem rentalSystem = new RentalSystem();\n\t\t\n\t\t//step:1 create a person object and initialize with a customer and clerk object\n\t\tArrayList<Person> pobj= new ArrayList<>();\n\t\tpobj.add(new Clerk("EFG", "efg@gmail.com"));\n\t\tpobj.add(new Customer("ABC", "abc@gmail.com"));\n\t\tpobj.add(new Customer("DEF", 8654678976L));\n\t\tpobj.add(new Customer("GHI", "ghi@gmail.com", 1234567890L));\n\t\tSystem.out.println("list of Person: [");\n\t\tdisplayAll(pobj);\n\t\tSystem.out.println("]");\n\t\t\n\t\tArrayList<Customer> pobj1= new ArrayList<>();\n\t\tpobj1.add(new Customer("ABC", "abc@gmail.com"));\n\t\tpobj1.add(new Customer("DEF", 8654678976L));\n\t\tpobj1.add(new Customer("GHI", "ghi@gmail.com", 1234567890L));\n\t\tSystem.out.println("list of Customer: [");\n\t\tdisplayAll(pobj1);\n\t\tSystem.out.println("]");\n\t\t\n\t\tArrayList<Clerk> pobj2= new ArrayList<>();\n\t\tpobj2.add(new Clerk("ABC1", "abc1@gmail.com"));\n\t\tpobj2.add(new Clerk("DEF1", 8654678976L));\n\t\tpobj2.add(new Clerk("GHI1", "ghi1@gmail.com", 1234567890L));\n\t\tSystem.out.println("list of Clerk: [");\n\t\tdisplayAll(pobj2);\n\t\tSystem.out.println("]");\n\t\t\n\t\tSystem.out.println("Count of persons with Email : " +countPersonWithEmail(pobj));\n\t\tSystem.out.println("Count of persons with Phone : " +countPersonWithPhone(pobj));\n\t\tSystem.out.println("Count of Customer with Email : " +countPersonWithEmail(pobj1));\n\t\tSystem.out.println("Count of Customer with Phone : " +countPersonWithPhone(pobj1));\n\t\tSystem.out.println("Count of Clerk with Email : " +countPersonWithEmail(pobj2));\n\t\tSystem.out.println("Count of Clerk with Phone : " +countPersonWithPhone(pobj2));\n\t\t\n\t\tSystem.out.println("Count of Customers in the list : " +countCustomer(pobj));\n\t\tSystem.out.println("Count of Customers in the list : " +countCustomer(pobj1));\n\t\t//System.out.println("Count of Customers in the list : " +countCustomer(pobj2));//compiler error\n\t\t\n\t\tSystem.out.println("Count of Clerks in the list : " +countClerk(pobj));\n\t\t//System.out.println("Count of Clerks in the list : " +countClerk(pobj1)); //compiler error\n\t\tSystem.out.println("Count of Clerks in the list : " +countClerk(pobj2));\n\t\t\n\t\tArrayList<Person> a = addEmailList(pobj);\n\t\tArrayList<Customer> b = addEmailList(pobj1);\n\t\tArrayList<Clerk> c = addEmailList(pobj2);\n\t\t\n\t\tSystem.out.println("list of Person: [");\n\t\tdisplayAll(a);\n\t\tSystem.out.println("]");\n\t\tSystem.out.println("list of Customer: [");\n\t\tdisplayAll(b);\n\t\tSystem.out.println("]");\n\t\tSystem.out.println("list of Clerk: [");\n\t\tdisplayAll(c);\n\t\tSystem.out.println("]");\n\t\t\t\t\n\t\trentalSystem.clerkobj=new Clerk[1];\t\t\n\t\t//step 2: initialize the clerk object with pobj[0] and check\n\t\t//rentalSystem.clerkobj[0]=pobj.get(0); //compiler error due to type mismatch\n\t\t//step 3: type cast\n\t\t//rentalSystem.clerkobj[0]=(Clerk)pobj.get(0); //no compiler error or runtime error\n\t\t\n\t\t//run the code and check to see the output\n\t\t//Vehicle is available, initiating contract..\n\t\t//Reservation released\n\t\t//Vehicle key handedover\n\t\t\n\t\t//step 4: initialize the clerk object with pobj[1] and check\n\t\t//rentalSystem.clerkobj[0]=pobj.get(1); //compiler error due to type mismatch\n\t\t//step 5: type cast to Clerk\n\t\t//rentalSystem.clerkobj[0]=(Clerk)pobj.get(1); //no compiler error\n\t\t\n\t\t//run the code and check \n\t\t//the following runtime error appears\n\t\t//Exception in thread "main" java.lang.ClassCastException: class Customer cannot be cast to class Clerk (Customer and Clerk are in unnamed module of loader \'app\')\n\t\t//at TestDriver.main(TestDriver.java:23)\n\t\t\n\t\t//Step 6: resolve using try-catch block and instanceof method\t\n\t\ttry\n\t\t{\n\t\t\trentalSystem.clerkobj[0]=(Clerk)pobj.get(1);\n\t\t}\n\t\tcatch(ClassCastException e)\n\t\t{\n\t\t\tif(pobj.get(1) instanceof Clerk)\n\t\t\t\trentalSystem.clerkobj[0] =(Clerk) pobj.get(1);\n\t\t}\n\t\t\n\t\t\n\t\trentalSystem.cobj= new Customer[3];\n\t\trentalSystem.cobj[0]=(Customer) pobj.get(1);\n\t\trentalSystem.cobj[1]=(Customer) pobj.get(2);\n\t\trentalSystem.cobj[2]=(Customer) pobj.get(3);\n\t\trentalSystem.cobj[0].setCity("Coimbatore");\n\t\trentalSystem.cobj[1].setCity("Coimbatore");\n\t\trentalSystem.cobj[2].setCity("Chennai");\n\t\t\n\t\trentalSystem.vobj = new Vehicle[1];\n\t\trentalSystem.vobj[0]=new Vehicle(1234);\n\t\t\n\t\trentalSystem.robj=new Reservation[1];\n\t\trentalSystem.robj[0]= new Reservation(rentalSystem.cobj[0],rentalSystem.vobj[0]);\n\t\tSimpleDateFormat sdformat = new SimpleDateFormat("yyyy-MM-dd");\n\t    Date d = sdformat.parse("2022-02-29");\n\t\trentalSystem.robj[0].setBookingDate(d);\n\t\trentalSystem.robj[0].setContractStatus("Reservation not released");\n\t\t\n\t\t//run this code and check the following error appears\n\t\t//Exception in thread "main" java.lang.NullPointerException: Cannot invoke "Clerk.requestVehicle(Reservation)" because "cl" is null\n\t\t//at RentalSystem.visitOffice(RentalSystem.java:18)\n\t\t//at TestDriver.main(TestDriver.java:62)\n\t\t\n\t\t//Step 7: resolve using a try-catch block to handle the NullPointerException\n\t\ttry\n\t\t{\n\t\t\trentalSystem.visitOffice(rentalSystem.robj[0]);\n\t\t}\n\t\tcatch(NullPointerException e)\n\t\t{\n\t\t\tSystem.out.println("wait for clerk to be assigned");\n\t\t}\t\t\n\t}\t\n\t\n\tpublic static <T extends Person> int countPersonWithEmail(ArrayList<T> alist)\n\t{\n\t\tint count=0;\n\t\tfor(T a: alist)\n\t\t{\n\t\t\tif(a.getEmail()!=null)\n\t\t\t\tcount++;\n\t\t}\n\t\treturn count;\n\t}\t\n\t\n\tpublic static <T extends Person> int countPersonWithPhone(ArrayList<T> alist)\n\t{\n\t\tint count=0;\n\t\tfor(T a: alist)\n\t\t{\n\t\t\tif(a.getPhone()!=0L && a.getPhone()!=999999999L)\n\t\t\t\tcount++;\n\t\t}\n\t\treturn count;\n\t}\t\n\t\n\tpublic static int countCustomer(ArrayList<? super Customer> alist)\n\t{\n\t\tint count=0;\n\t\tfor(Object a: alist)\n\t\t{\n\t\t\tif(a instanceof Customer)\n\t\t\t\tcount++;\n\t\t}\n\t\treturn count;\n\t}\t\n\t\n\tpublic static int countClerk(ArrayList<? super Clerk> alist)\n\t{\n\t\tint count=0;\n\t\tfor(Object a: alist)\n\t\t{\n\t\t\tif(a instanceof Clerk)\n\t\t\t\tcount++;\n\t\t}\n\t\treturn count;\n\t}\t\n\t\n\tpublic static <T extends Person> void displayAll(ArrayList<T> alist)\n\t{\n\t\tfor(Object a: alist)\n\t\t{\n\t\t\tSystem.out.println(a.toString());\n\t\t}\n\t}\t\n\t\n\tpublic static <T extends Person> ArrayList<T> addEmailList(ArrayList<T> alist)\n\t{\n\t\tArrayList<T> newList = new ArrayList<>();\n\t\tfor(T a:alist)\n\t\t\tnewList.add(a.addEmail());\n\t\treturn newList;\n\t}\n\n\n    public static <T extends Person> ArrayList<T> addEmailList(ArrayList<T> alist)\n\t{\n        ArrayList<T> newList = new ArrayList<>();\n            ',-1))),zt=Lt((()=>(0,o._)("br",null,null,-1))),Mt=Lt((()=>(0,o._)("p",{id:"comment"},"//Write a for loop based on the generic 'T'",-1))),Gt=Lt((()=>(0,o._)("br",null,null,-1))),Zt=Lt((()=>(0,o._)("br",null,null,-1))),qt=Lt((()=>(0,o._)("pre",null,'\t\t\timport java.util.Scanner;\nimport java.util.ArrayList;\nimport java.text.ParseException;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\nimport java.lang.*;\n\npublic class TestDriver {\n\t\n\tpublic static void main(String[] args) throws ParseException {\n\t\t// TODO Auto-generated method stub\n\t\t\n\t\tRentalSystem rentalSystem = new RentalSystem();\n\t\t\n\t\t//step:1 create a person object and initialize with a customer and clerk object\n\t\tArrayList<Person> pobj= new ArrayList<>();\n\t\tpobj.add(new Clerk("EFG", "efg@gmail.com"));\n\t\tpobj.add(new Customer("ABC", "abc@gmail.com"));\n\t\tpobj.add(new Customer("DEF", 8654678976L));\n\t\tpobj.add(new Customer("GHI", "ghi@gmail.com", 1234567890L));\n\t\tSystem.out.println("list of Person: [");\n\t\tdisplayAll(pobj);\n\t\tSystem.out.println("]");\n\t\t\n\t\tArrayList<Customer> pobj1= new ArrayList<();\n\t\tpobj1.add(new Customer("ABC", "abc@gmail.com"));\n\t\tpobj1.add(new Customer("DEF", 8654678976L));\n\t\tpobj1.add(new Customer("GHI", "ghi@gmail.com", 1234567890L));\n\t\tSystem.out.println("list of Customer: [");\n\t\tdisplayAll(pobj1);\n\t\tSystem.out.println("]");\n\t\t\n\t\tArrayList<Clerk> pobj2= new ArrayList<>();\n\t\tpobj2.add(new Clerk("ABC1", "abc1@gmail.com"));\n\t\tpobj2.add(new Clerk("DEF1", 8654678976L));\n\t\tpobj2.add(new Clerk("GHI1", "ghi1@gmail.com", 1234567890L));\n\t\tSystem.out.println("list of Clerk: [");\n\t\tdisplayAll(pobj2);\n\t\tSystem.out.println("]");\n\t\t\n\t\tSystem.out.println("Count of persons with Email : " +countPersonWithEmail(pobj));\n\t\tSystem.out.println("Count of persons with Phone : " +countPersonWithPhone(pobj));\n\t\tSystem.out.println("Count of Customer with Email : " +countPersonWithEmail(pobj1));\n\t\tSystem.out.println("Count of Customer with Phone : " +countPersonWithPhone(pobj1));\n\t\tSystem.out.println("Count of Clerk with Email : " +countPersonWithEmail(pobj2));\n\t\tSystem.out.println("Count of Clerk with Phone : " +countPersonWithPhone(pobj2));\n\t\t\n\t\tSystem.out.println("Count of Customers in the list : " +countCustomer(pobj));\n\t\tSystem.out.println("Count of Customers in the list : " +countCustomer(pobj1));\n\t\t//System.out.println("Count of Customers in the list : " +countCustomer(pobj2));//compiler error\n\t\t\n\t\tSystem.out.println("Count of Clerks in the list : " +countClerk(pobj));\n\t\t//System.out.println("Count of Clerks in the list : " +countClerk(pobj1)); //compiler error\n\t\tSystem.out.println("Count of Clerks in the list : " +countClerk(pobj2));\n\t\t\n\t\tArrayList<Person> a = addEmailList(pobj);\n\t\tArrayList<Customer> b = addEmailList(pobj1);\n\t\tArrayList<Clerk> c = addEmailList(pobj2);\n\t\t\n\t\tSystem.out.println("list of Person: [");\n\t\tdisplayAll(a);\n\t\tSystem.out.println("]");\n\t\tSystem.out.println("list of Customer: [");\n\t\tdisplayAll(b);\n\t\tSystem.out.println("]");\n\t\tSystem.out.println("list of Clerk: [");\n\t\tdisplayAll(c);\n\t\tSystem.out.println("]");\n\t\t\t\t\n\t\trentalSystem.clerkobj=new Clerk[1];\t\t\n\t\t//step 2: initialize the clerk object with pobj[0] and check\n\t\t//rentalSystem.clerkobj[0]=pobj.get(0); //compiler error due to type mismatch\n\t\t//step 3: type cast\n\t\t//rentalSystem.clerkobj[0]=(Clerk)pobj.get(0); //no compiler error or runtime error\n\t\t\n\t\t//run the code and check to see the output\n\t\t//Vehicle is available, initiating contract..\n\t\t//Reservation released\n\t\t//Vehicle key handedover\n\t\t\n\t\t//step 4: initialize the clerk object with pobj[1] and check\n\t\t//rentalSystem.clerkobj[0]=pobj.get(1); //compiler error due to type mismatch\n\t\t//step 5: type cast to Clerk\n\t\t//rentalSystem.clerkobj[0]=(Clerk)pobj.get(1); //no compiler error\n\t\t\n\t\t//run the code and check \n\t\t//the following runtime error appears\n\t\t//Exception in thread "main" java.lang.ClassCastException: class Customer cannot be cast to class Clerk (Customer and Clerk are in unnamed module of loader \'app\')\n\t\t//at TestDriver.main(TestDriver.java:23)\n\t\t\n\t\t//Step 6: resolve using try-catch block and instanceof method\t\n\t\ttry\n\t\t{\n\t\t\trentalSystem.clerkobj[0]=(Clerk)pobj.get(1);\n\t\t}\n\t\tcatch(ClassCastException e)\n\t\t{\n\t\t\tif(pobj.get(1) instanceof Clerk)\n\t\t\t\trentalSystem.clerkobj[0] =(Clerk) pobj.get(1);\n\t\t}\n\t\t\n\t\t\n\t\trentalSystem.cobj= new Customer[3];\n\t\trentalSystem.cobj[0]=(Customer) pobj.get(1);\n\t\trentalSystem.cobj[1]=(Customer) pobj.get(2);\n\t\trentalSystem.cobj[2]=(Customer) pobj.get(3);\n\t\trentalSystem.cobj[0].setCity("Coimbatore");\n\t\trentalSystem.cobj[1].setCity("Coimbatore");\n\t\trentalSystem.cobj[2].setCity("Chennai");\n\t\t\n\t\trentalSystem.vobj = new Vehicle[1];\n\t\trentalSystem.vobj[0]=new Vehicle(1234);\n\t\t\n\t\trentalSystem.robj=new Reservation[1];\n\t\trentalSystem.robj[0]= new Reservation(rentalSystem.cobj[0],rentalSystem.vobj[0]);\n\t\tSimpleDateFormat sdformat = new SimpleDateFormat("yyyy-MM-dd");\n\t    Date d = sdformat.parse("2022-02-29");\n\t\trentalSystem.robj[0].setBookingDate(d);\n\t\trentalSystem.robj[0].setContractStatus("Reservation not released");\n\t\t\n\t\t//run this code and check the following error appears\n\t\t//Exception in thread "main" java.lang.NullPointerException: Cannot invoke "Clerk.requestVehicle(Reservation)" because "cl" is null\n\t\t//at RentalSystem.visitOffice(RentalSystem.java:18)\n\t\t//at TestDriver.main(TestDriver.java:62)\n\t\t\n\t\t//Step 7: resolve using a try-catch block to handle the NullPointerException\n\t\ttry\n\t\t{\n\t\t\trentalSystem.visitOffice(rentalSystem.robj[0]);\n\t\t}\n\t\tcatch(NullPointerException e)\n\t\t{\n\t\t\tSystem.out.println("wait for clerk to be assigned");\n\t\t}\t\t\n\t}\t\n\t\n\tpublic static <T extends Person> int countPersonWithEmail(ArrayList<T> alist)\n\t{\n\t\tint count=0;\n\t\tfor(T a: alist)\n\t\t{\n\t\t\tif(a.getEmail()!=null)\n\t\t\t\tcount++;\n\t\t}\n\t\treturn count;\n\t}\t\n\t\n\tpublic static <T extends Person> int countPersonWithPhone(ArrayList<T> alist)\n\t{\n\t\tint count=0;\n\t\tfor(T a: alist)\n\t\t{\n\t\t\tif(a.getPhone()!=0L && a.getPhone()!=999999999L)\n\t\t\t\tcount++;\n\t\t}\n\t\treturn count;\n\t}\t\n\t\n\tpublic static int countCustomer(ArrayList<? super Customer> alist)\n\t{\n\t\tint count=0;\n\t\tfor(Object a: alist)\n\t\t{\n\t\t\tif(a instanceof Customer)\n\t\t\t\tcount++;\n\t\t}\n\t\treturn count;\n\t}\t\n\t\n\tpublic static int countClerk(ArrayList<? super Clerk> alist)\n\t{\n\t\tint count=0;\n\t\tfor(Object a: alist)\n\t\t{\n\t\t\tif(a instanceof Clerk)\n\t\t\t\tcount++;\n\t\t}\n\t\treturn count;\n\t}\t\n\t\n\tpublic static <T extends Person> void displayAll(ArrayList<T> alist)\n\t{\n\t\tfor(Object a: alist)\n\t\t{\n\t\t\tSystem.out.println(a.toString());\n\t\t}\n\t}\t\n\t\n\tpublic static <T extends Person> ArrayList<T> addEmailList(ArrayList<T> alist)\n\t{\n\t\tArrayList<T> newList = new ArrayList<>();\n\t\tfor(T a:alist)\n\t\t\tnewList.add(a.addEmail());\n\t\treturn newList;\n\t}\n\t\n}\n',-1))),$t=[qt];function Kt(t,n,e,s,l,a){return(0,o.wg)(),(0,o.iD)("main",_t,[xt,(0,o._)("div",Et,[(0,o._)("div",Dt,[Tt,At,(0,o._)("div",{class:"codebox",id:"codebox",style:(0,r.j5)({display:l.display[0]})},[Nt,(0,o.Uk)("    public static <T "),(0,o.wy)((0,o._)("input",{spellcheck:"false",id:"one",maxlength:"7",style:{width:"90px"},"onUpdate:modelValue":n[0]||(n[0]=n=>t.one=n)},null,512),[[i.nr,t.one]]),(0,o.Uk)(" Person> "),(0,o.wy)((0,o._)("input",{spellcheck:"false",id:"two",maxlength:"9",style:{width:"100px"},"onUpdate:modelValue":n[1]||(n[1]=n=>t.two=n)},null,512),[[i.nr,t.two]]),(0,o.Uk)(" <T> addEmailList(ArrayList>T> alist) "),It,(0,o.Uk)("   { "),Ot,Rt,(0,o.Uk)(" } "),Ut,(0,o._)("button",{class:"button-9",id:"btn1",onClick:n[2]||(n[2]=t=>a.validate_one())},(0,r.zw)(l.button_value),1)],4),(0,o._)("div",{class:"codebox",id:"codebox",style:(0,r.j5)({display:l.display[1]})},[Ft,(0,o.Uk)("      ArrayList<"),(0,o.wy)((0,o._)("input",{spellcheck:"false",id:"three",maxlength:"1",style:{width:"40px"},"onUpdate:modelValue":n[3]||(n[3]=n=>t.three=n)},null,512),[[i.nr,t.three]]),(0,o.Uk)("> newList = new ArrayList<>(); "),Vt,Wt,(0,o.Uk)(" } "),Bt,(0,o._)("button",{class:"button-9",id:"btn1",onClick:n[4]||(n[4]=t=>a.validate_two())},(0,r.zw)(l.button_value),1)],4),(0,o._)("div",{class:"codebox",id:"codebox",style:(0,r.j5)({display:l.display[2]})},[Ht,(0,o.Uk)("      for("),(0,o.wy)((0,o._)("input",{spellcheck:"false",id:"four",maxlength:"1",style:{width:"40px"},"onUpdate:modelValue":n[5]||(n[5]=n=>t.four=n)},null,512),[[i.nr,t.four]]),(0,o.Uk)(" a:alist) "),zt,(0,o.Uk)("       newlist.add(a.addEmail()); "),Mt,Gt,(0,o.Uk)(" } "),Zt,(0,o._)("button",{class:"button-9",id:"btn1",onClick:n[6]||(n[6]=t=>a.validate_three())},(0,r.zw)(l.button_value),1)],4),(0,o._)("div",{class:"codebox",id:"codebox",style:(0,r.j5)({display:l.display[3]})},$t,4)])])])}var Yt={methods:{correct1(){var t=document.getElementById("snackbar");t.innerHTML="Correct",t.style.backgroundColor="green",t.className="show",setTimeout((function(){t.className=t.className.replace("show","")}),3e3)},incorrect(){var t=document.getElementById("snackbar");t.innerHTML="Inorrect. Try again",t.style.backgroundColor="red",t.className="show",setTimeout((function(){t.className=t.className.replace("show","")}),3e3)},validate_one(){console.log(this.one,this.two),"extends"==this.one&&"ArrayList"==this.two?(this.correct1(),this.display[0]="none",this.display[1]="block"):this.incorrect()},validate_two(){"T"==this.three?(this.correct1(),this.display[1]="none",this.display[2]="block"):this.incorrect()},validate_three(){"clerkobj"==this.five&&"Clerk"==this.six?(this.correct1(),this.display[2]="none",this.display[3]="block"):this.incorrect()},validate_four(){"Clerk"==this.seven&&"pobj"===this.eight&&"getPerson"==this.nine?(this.correct1(),this.display[3]="none",this.display[4]="block"):this.incorrect()},validate_five(){"cobj"==this.ten&&"Customer"==this.eleven?(this.correct1(),this.display[4]="none",this.display[5]="block"):this.incorrect()},validate_six(){"Customer"==this.twelve&&"pobj"==this.thirteen&&"getPerson"==this.fourteen?(this.correct1(),this.display[5]="none",this.display[6]="block"):this.incorrect()},validate_seven(){"setCity"==this.fifteen?(this.correct1(),this.display[6]="none",this.display[7]="block"):this.incorrect()},validate_eight(){"Vehicle"==this.sixteen?(this.correct1(),this.display[7]="none",this.display[8]="block"):this.incorrect()},validate_nine(){"Reservation"==this.seventeen?(this.correct1(),this.display[8]="none",this.display[9]="block"):this.incorrect()},validate_ten(){"setBookingDate"==this.eighteen&&"d"==this.nineteen?(this.correct1(),this.display[9]="none",this.display[10]="block"):this.incorrect()},validate_eleven(){"setContractStatus"==this.twenty?(this.correct1(),this.display[10]="none",this.display[11]="block"):this.incorrect()},validate_twelve(){"visitOffice"==this.twentyone&&"robj"===this.twentytwo?(this.correct1(),this.display[11]="none",this.display[12]="block",this.$emit("testdriver-complete",!0)):this.incorrect()}},data(){return{id:"container",class:"wrapper",button_value:"Next",button_text:"Incorrect. Try again",button_text_right:"Correct. Next",correct:!1,display:["block","none","none","none","none","none","none","none","none","none","none","none","none","none","none"]}}};const Jt=(0,N.Z)(Yt,[["render",Kt],["__scopeId","data-v-5464c083"]]);var Qt=Jt,Xt={components:{ThreeClerkComponent:O,OneClassComponent:R.Z,ThreeCustomerComponent:rt,ThreePersonComponent:vt,OneReservationComponent:it.Z,OneVehicleComponent:wt.Z,OneRentalSystemComponent:ft.Z,OneInstructionsComponent:Pt.Z,ThreeTestDriverComponent:Qt},data(){return{componentSelect:"OneInstructionsComponent",testDriveComplete:!1,personComplete:!1,customerComplete:!1,clerkComplete:!1}},methods:{testDriveCompleteFunc(t){this.testDriveComplete=!0,this.componentSelect="ThreePersonComponent"},personCompleteFunc(t){this.personComplete=!0,this.componentSelect="ThreeCustomerComponent"},customerCompleteFunc(t){this.customerComplete=!0,this.componentSelect="ThreeClerkComponent"},clerkCompleteFunc(t){this.clerkComplete=!0,this.componentSelect="OneVehicleComponent"}}};const tn=(0,N.Z)(Xt,[["render",p]]);var nn=tn}}]);
//# sourceMappingURL=583.174727b1.js.map