"use strict";(self["webpackChunkexp_10"]=self["webpackChunkexp_10"]||[]).push([[103],{1103:function(t,n,e){e.r(n),e.d(n,{default:function(){return en}});e(7658);var o=e(3396),r=e(7139),l=e(9242);const i={class:"app"},s={class:"buttons"},a={id:"buttons",class:"relative"};function p(t,n,e,p,m,u){return(0,o.wg)(),(0,o.iD)(o.HY,null,[(0,o._)("main",i,[(0,o._)("div",s,[(0,o._)("button",{onClick:n[0]||(n[0]=t=>m.componentSelect="OneInstructionsComponent"),style:(0,r.j5)("OneInstructionsComponent"===m.componentSelect?"background-color: #55acee":"")},"1. Instructions ",4),(0,o._)("button",{onClick:n[1]||(n[1]=t=>m.componentSelect="OnePersonComponent"),style:(0,r.j5)("OnePersonComponent"===m.componentSelect?"background-color: #55acee":"")},"2. Person ",4),(0,o._)("button",{onClick:n[2]||(n[2]=t=>m.componentSelect="OneClerkComponent"),style:(0,r.j5)("OneClerkComponent"===m.componentSelect?"background-color: #55acee":"")},"3. Clerk ",4),(0,o._)("button",{onClick:n[3]||(n[3]=t=>m.componentSelect="OneCustomerComponent"),style:(0,r.j5)("OneCustomerComponent"===m.componentSelect?"background-color: #55acee":"")},"4. Customer ",4),(0,o._)("button",{onClick:n[4]||(n[4]=t=>m.componentSelect="OneVehicleComponent"),style:(0,r.j5)("OneVehicleComponent"===m.componentSelect?"background-color: #55acee":"")},"5. Vehicle ",4),(0,o._)("button",{onClick:n[5]||(n[5]=t=>m.componentSelect="OneReservationComponent"),style:(0,r.j5)("OneReservationComponent"===m.componentSelect?"background-color: #55acee":"")},"6. Reservation ",4),(0,o._)("button",{onClick:n[6]||(n[6]=t=>m.componentSelect="OneRentalSystemComponent"),style:(0,r.j5)("OneRentalSystemComponent"===m.componentSelect?"background-color: #55acee":"")},"7. Rental System ",4),(0,o._)("button",{onClick:n[7]||(n[7]=t=>m.componentSelect="TwoTestDriverComponent"),style:(0,r.j5)("TwoTestDriverComponent"===m.componentSelect?"background-color: #55acee":"")},"8. Test Driver ",4),(0,o._)("button",{onClick:n[8]||(n[8]=t=>m.componentSelect="OneClassComponent"),style:(0,r.j5)("OneClassComponent"===m.componentSelect?"background-color: #55acee":"")},"9. Class Diagram ",4)]),((0,o.wg)(),(0,o.j4)(o.Ob,null,[((0,o.wg)(),(0,o.j4)((0,o.LL)(m.componentSelect),{onInstructionsRead:u.instructionsReadCallback,onTestDriver:u.testDriverCompleteCallback},null,40,["onInstructionsRead","onTestDriver"]))],1024))]),(0,o.wy)((0,o._)("footer",null,[(0,o._)("div",a,[(0,o._)("button",{class:"navitem",onClick:n[9]||(n[9]=n=>t.$router.push("/screen-three"))},"Next")])],512),[[l.F8,m.testDriverComplete]])],64)}var m=e(3488),u=e(7494),c=e(1392),b=e(5487),d=e(9093),C=e(6704),y=e(7910),j=e(6231);const h=t=>((0,o.dD)("data-v-6ad814cc"),t=t(),(0,o.Cn)(),t),k={class:"app"},S=h((()=>(0,o._)("div",{id:"snackbar"},"Some text some message..",-1))),w={class:"column",style:{position:"fixed",top:"22%",left:"65%",bottom:"10%"}},g={class:"column"},v={class:"codebox"},f=h((()=>(0,o._)("h5",null,"Test Driver: ",-1))),P={style:{"line-height":"125%"}},_={class:"row"},A={class:"column"},L=h((()=>(0,o._)("h1",{style:{padding:"25px","padding-bottom":"0px"}},"Enter your code here .",-1))),x=h((()=>(0,o._)("p",{style:{padding:"25px","padding-top":"0px"}},"Follow instructions provided in the comments",-1))),E=h((()=>(0,o._)("pre",null,"import java.util.Scanner;\nimport java.util.ArrayList;\nimport java.text.ParseException;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\nimport java.lang.*;\n\npublic class TestDriver {\n\t\n\tpublic static void main(String[] args) throws ParseException {\n\t\t\n\t\tRentalSystem rentalSystem = new RentalSystem();\n\n",-1))),D=h((()=>(0,o._)("p",{id:"comment"},"//Create an arraylist of type person",-1))),F=h((()=>(0,o._)("br",null,null,-1))),U=h((()=>(0,o._)("br",null,null,-1))),R=h((()=>(0,o._)("pre",null,"import java.util.Scanner;\nimport java.util.ArrayList;\nimport java.text.ParseException;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\nimport java.lang.*;\n\npublic class TestDriver {\n\t\n\tpublic static void main(String[] args) throws ParseException {\n\t\t\n\t\tRentalSystem rentalSystem = new RentalSystem();\n   \n               ArrayList<Person> pobj= new ArrayList<>();\n\n",-1))),W=h((()=>(0,o._)("p",{id:"comment"},"//Populate the ArrayList with an object of type Clerk",-1))),T=h((()=>(0,o._)("br",null,null,-1))),O=h((()=>(0,o._)("br",null,null,-1))),G=h((()=>(0,o._)("pre",null,'import java.util.Scanner;\nimport java.util.ArrayList;\nimport java.text.ParseException;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\nimport java.lang.*;\n\npublic class TestDriver {\n\t\n\tpublic static void main(String[] args) throws ParseException {\n\t\t\n\t\tRentalSystem rentalSystem = new RentalSystem();\n   \n               ArrayList<Person> pobj= new ArrayList<>();\n               pobj.add(new Clerk("EFG", "efg@gmail.com"));\n\n',-1))),I=h((()=>(0,o._)("p",{id:"comment"},"//Populate the ArrayList with an object of type Customer",-1))),B=h((()=>(0,o._)("br",null,null,-1))),H=h((()=>(0,o._)("br",null,null,-1))),z=h((()=>(0,o._)("pre",null,'import java.util.Scanner;\nimport java.util.ArrayList;\nimport java.text.ParseException;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\nimport java.lang.*;\n\npublic class TestDriver {\n\t\n\tpublic static void main(String[] args) throws ParseException {\n\t\t\n\t  RentalSystem rentalSystem = new RentalSystem();\n   \n         ArrayList<Person> pobj= new ArrayList<>();\n         pobj.add(new Clerk("EFG", "efg@gmail.com"));\n         pobj.add(new Customer("ABC", "abc@gmail.com"));\n         pobj.add(new Customer("DEF", 8654678976L));\n         pobj.add(new Customer("GHI", "ghi@gmail.com", 1234567890L));\n         System.out.println("list of Person: [");\n         displayAll(pobj);\n         System.out.println("]");\n',-1))),V=h((()=>(0,o._)("p",{id:"comment"},'//Create an arraylist of type Customer with object name "pobj1"',-1))),N=h((()=>(0,o._)("br",null,null,-1))),Z=h((()=>(0,o._)("br",null,null,-1))),M=h((()=>(0,o._)("pre",null,'import java.util.Scanner;\nimport java.util.ArrayList;\nimport java.text.ParseException;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\nimport java.lang.*;\n\npublic class TestDriver {\n\t\n\tpublic static void main(String[] args) throws ParseException {\n\t\t\n\t  RentalSystem rentalSystem = new RentalSystem();\n   \n         ArrayList<Person> pobj= new ArrayList<>();\n         pobj.add(new Clerk("EFG", "efg@gmail.com"));\n         pobj.add(new Customer("ABC", "abc@gmail.com"));\n         pobj.add(new Customer("DEF", 8654678976L));\n         pobj.add(new Customer("GHI", "ghi@gmail.com", 1234567890L));\n\n         ArrayList<Customer> pobj1= new ArrayList<>();\n         pobj1.add(new Customer("ABC", "abc@gmail.com"));\n         pobj1.add(new Customer("DEF", 8654678976L));\n         pobj1.add(new Customer("GHI", "ghi@gmail.com", 1234567890L));\n         System.out.println("list of Customer: [");\n         displayAll(pobj1);\n         System.out.println("]");\n\n         ArrayList<Clerk> pobj2= new ArrayList<>();\n         pobj2.add(new Clerk("ABC1", "abc1@gmail.com"));\n         pobj2.add(new Clerk("DEF1", 8654678976L));\n         pobj2.add(new Clerk("GHI1", "ghi1@gmail.com", 1234567890L));\n         System.out.println("list of Clerk: [");\n         displayAll(pobj2);\n         System.out.println("]");\n',-1))),q=h((()=>(0,o._)("p",{id:"comment"},"//Similarly Clerk type ArrayList is created and populated",-1))),$=h((()=>(0,o._)("br",null,null,-1))),Y=h((()=>(0,o._)("br",null,null,-1))),J=h((()=>(0,o._)("pre",null,'import java.util.Scanner;\nimport java.util.ArrayList;\nimport java.text.ParseException;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\nimport java.lang.*;\n\npublic class TestDriver {\n\t\n\tpublic static void main(String[] args) throws ParseException {\n\t\t// TODO Auto-generated method stub\n\t\t\n\t\tRentalSystem rentalSystem = new RentalSystem();\n\t\t\n\t\t//step:1 create a person object and initialize with a customer and clerk object\n\t\tArrayList<Person> pobj= new ArrayList<>();\n\t\tpobj.add(new Clerk("EFG", "efg@gmail.com"));\n\t\tpobj.add(new Customer("ABC", "abc@gmail.com"));\n\t\tpobj.add(new Customer("DEF", 8654678976L));\n\t\tpobj.add(new Customer("GHI", "ghi@gmail.com", 1234567890L));\n\t\tSystem.out.println("list of Person: [");\n\t\tdisplayAll(pobj);\n\t\tSystem.out.println("]");\n\t\t\n\t\tArrayList<Customer> pobj1= new ArrayList<>();\n\t\tpobj1.add(new Customer("ABC", "abc@gmail.com"));\n\t\tpobj1.add(new Customer("DEF", 8654678976L));\n\t\tpobj1.add(new Customer("GHI", "ghi@gmail.com", 1234567890L));\n\t\tSystem.out.println("list of Customer: [");\n\t\tdisplayAll(pobj1);\n\t\tSystem.out.println("]");\n\t\t\n\t\tArrayList<Clerk> pobj2= new ArrayList<>();\n\t\tpobj2.add(new Clerk("ABC1", "abc1@gmail.com"));\n\t\tpobj2.add(new Clerk("DEF1", 8654678976L));\n\t\tpobj2.add(new Clerk("GHI1", "ghi1@gmail.com", 1234567890L));\n\t\tSystem.out.println("list of Clerk: [");\n\t\tdisplayAll(pobj2);\n\t\tSystem.out.println("]");\n\t\t\n\t\tSystem.out.println("Count of persons with Email : " +countPersonWithEmail(pobj));\n\t\tSystem.out.println("Count of persons with Phone : " +countPersonWithPhone(pobj));\n\t\tSystem.out.println("Count of Customer with Email : " +countPersonWithEmail(pobj1));\n\t\tSystem.out.println("Count of Customer with Phone : " +countPersonWithPhone(pobj1));\n\t\tSystem.out.println("Count of Clerk with Email : " +countPersonWithEmail(pobj2));\n\t\tSystem.out.println("Count of Clerk with Phone : " +countPersonWithPhone(pobj2));\n\t\t\n\t\tSystem.out.println("Count of Customers in the list : " +countCustomer(pobj));\n\t\tSystem.out.println("Count of Customers in the list : " +countCustomer(pobj1));\n',-1))),K=h((()=>(0,o._)("b",{style:{"font-size":"small"}},'System.out.println("Count of Customers in the list : " +countCustomer(pobj2));',-1))),Q=h((()=>(0,o._)("div",{class:"outbox"},[(0,o._)("p",null,"ERROR"),(0,o._)("p",null,"Compiler Error.")],-1))),X=h((()=>(0,o._)("br",null,null,-1))),tt=h((()=>(0,o._)("br",null,null,-1))),nt=h((()=>(0,o._)("pre",null,'import java.util.Scanner;\nimport java.util.ArrayList;\nimport java.text.ParseException;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\nimport java.lang.*;\n\npublic class TestDriver {\n\t\n\tpublic static void main(String[] args) throws ParseException {\n\t\t// TODO Auto-generated method stub\n\t\t\n\t\tRentalSystem rentalSystem = new RentalSystem();\n\t\t\n\t\t//step:1 create a person object and initialize with a customer and clerk object\n\t\tArrayList<Person> pobj= new ArrayList<>();\n\t\tpobj.add(new Clerk("EFG", "efg@gmail.com"));\n\t\tpobj.add(new Customer("ABC", "abc@gmail.com"));\n\t\tpobj.add(new Customer("DEF", 8654678976L));\n\t\tpobj.add(new Customer("GHI", "ghi@gmail.com", 1234567890L));\n\t\tSystem.out.println("list of Person: [");\n\t\tdisplayAll(pobj);\n\t\tSystem.out.println("]");\n\t\t\n\t\tArrayList<Customer> pobj1= new ArrayList<>();\n\t\tpobj1.add(new Customer("ABC", "abc@gmail.com"));\n\t\tpobj1.add(new Customer("DEF", 8654678976L));\n\t\tpobj1.add(new Customer("GHI", "ghi@gmail.com", 1234567890L));\n\t\tSystem.out.println("list of Customer: [");\n\t\tdisplayAll(pobj1);\n\t\tSystem.out.println("]");\n\t\t\n\t\tArrayList<Clerk> pobj2= new ArrayList<>();\n\t\tpobj2.add(new Clerk("ABC1", "abc1@gmail.com"));\n\t\tpobj2.add(new Clerk("DEF1", 8654678976L));\n\t\tpobj2.add(new Clerk("GHI1", "ghi1@gmail.com", 1234567890L));\n\t\tSystem.out.println("list of Clerk: [");\n\t\tdisplayAll(pobj2);\n\t\tSystem.out.println("]");\n\t\t\n\t\tSystem.out.println("Count of persons with Email : " +countPersonWithEmail(pobj));\n\t\tSystem.out.println("Count of persons with Phone : " +countPersonWithPhone(pobj));\n\t\tSystem.out.println("Count of Customer with Email : " +countPersonWithEmail(pobj1));\n\t\tSystem.out.println("Count of Customer with Phone : " +countPersonWithPhone(pobj1));\n\t\tSystem.out.println("Count of Clerk with Email : " +countPersonWithEmail(pobj2));\n\t\tSystem.out.println("Count of Clerk with Phone : " +countPersonWithPhone(pobj2));\n\t\t\n\t\tSystem.out.println("Count of Customers in the list : " +countCustomer(pobj));\n\t\tSystem.out.println("Count of Customers in the list : " +countCustomer(pobj1));\n\t\t//System.out.println("Count of Customers in the list : " +countCustomer(pobj2));\n\t\tSystem.out.println("Count of Clerks in the list : " +countClerk(pobj));\n\n',-1))),et=h((()=>(0,o._)("b",{style:{"font-size":"small"}},'System.out.println("Count of Clerks in the list : " +countClerk(pobj1));',-1))),ot=h((()=>(0,o._)("div",{class:"outbox"},[(0,o._)("p",null,"ERROR"),(0,o._)("p",null,"Compiler Error.")],-1))),rt=h((()=>(0,o._)("pre",null,'                System.out.println("Count of Clerks in the list : " +countClerk(pobj2));\n   ',-1))),lt=h((()=>(0,o._)("br",null,null,-1))),it=h((()=>(0,o._)("pre",null,'import java.util.Scanner;\nimport java.util.ArrayList;\nimport java.text.ParseException;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\nimport java.lang.*;\n\npublic class TestDriver {\n\t\n\tpublic static void main(String[] args) throws ParseException {\n\t\t// TODO Auto-generated method stub\n\t\t\n\t\tRentalSystem rentalSystem = new RentalSystem();\n\t\t\n\t\t//step:1 create a person object and initialize with a customer and clerk object\n\t\tArrayList<Person> pobj= new ArrayList<>();\n\t\tpobj.add(new Clerk("EFG", "efg@gmail.com"));\n\t\tpobj.add(new Customer("ABC", "abc@gmail.com"));\n\t\tpobj.add(new Customer("DEF", 8654678976L));\n\t\tpobj.add(new Customer("GHI", "ghi@gmail.com", 1234567890L));\n\t\tSystem.out.println("list of Person: [");\n\t\tdisplayAll(pobj);\n\t\tSystem.out.println("]");\n\t\t\n\t\tArrayList<Customer> pobj1= new ArrayList<>();\n\t\tpobj1.add(new Customer("ABC", "abc@gmail.com"));\n\t\tpobj1.add(new Customer("DEF", 8654678976L));\n\t\tpobj1.add(new Customer("GHI", "ghi@gmail.com", 1234567890L));\n\t\tSystem.out.println("list of Customer: [");\n\t\tdisplayAll(pobj1);\n\t\tSystem.out.println("]");\n\t\t\n\t\tArrayList<Clerk> pobj2= new ArrayList<>();\n\t\tpobj2.add(new Clerk("ABC1", "abc1@gmail.com"));\n\t\tpobj2.add(new Clerk("DEF1", 8654678976L));\n\t\tpobj2.add(new Clerk("GHI1", "ghi1@gmail.com", 1234567890L));\n\t\tSystem.out.println("list of Clerk: [");\n\t\tdisplayAll(pobj2);\n\t\tSystem.out.println("]");\n\t\t\n\t\tSystem.out.println("Count of persons with Email : " +countPersonWithEmail(pobj));\n\t\tSystem.out.println("Count of persons with Phone : " +countPersonWithPhone(pobj));\n\t\tSystem.out.println("Count of Customer with Email : " +countPersonWithEmail(pobj1));\n\t\tSystem.out.println("Count of Customer with Phone : " +countPersonWithPhone(pobj1));\n\t\tSystem.out.println("Count of Clerk with Email : " +countPersonWithEmail(pobj2));\n\t\tSystem.out.println("Count of Clerk with Phone : " +countPersonWithPhone(pobj2));\n\t\t\n\t\tSystem.out.println("Count of Customers in the list : " +countCustomer(pobj));\n\t\tSystem.out.println("Count of Customers in the list : " +countCustomer(pobj1));\n\t\t//System.out.println("Count of Customers in the list : " +countCustomer(pobj2));//compiler error\n\t\t\n\t\tSystem.out.println("Count of Clerks in the list : " +countClerk(pobj));\n\t\t//System.out.println("Count of Clerks in the list : " +countClerk(pobj1)); //compiler error\n\t\tSystem.out.println("Count of Clerks in the list : " +countClerk(pobj2));\n\t\t\n\t\trentalSystem.clerkobj=new Clerk[1];\t\n',-1))),st=h((()=>(0,o._)("br",null,null,-1))),at=h((()=>(0,o._)("p",{id:"comment"},"//Initialize the clerk object with pobj[0] and check",-1))),pt=h((()=>(0,o._)("br",null,null,-1))),mt=h((()=>(0,o._)("br",null,null,-1))),ut=h((()=>(0,o._)("pre",null,'import java.util.Scanner;\nimport java.util.ArrayList;\nimport java.text.ParseException;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\nimport java.lang.*;\n\npublic class TestDriver {\n\t\n\tpublic static void main(String[] args) throws ParseException {\n\t\t// TODO Auto-generated method stub\n\t\t\n\t\tRentalSystem rentalSystem = new RentalSystem();\n\t\t\n\t\t//step:1 create a person object and initialize with a customer and clerk object\n\t\tArrayList<Person> pobj= new ArrayList<>();\n\t\tpobj.add(new Clerk("EFG", "efg@gmail.com"));\n\t\tpobj.add(new Customer("ABC", "abc@gmail.com"));\n\t\tpobj.add(new Customer("DEF", 8654678976L));\n\t\tpobj.add(new Customer("GHI", "ghi@gmail.com", 1234567890L));\n\t\tSystem.out.println("list of Person: [");\n\t\tdisplayAll(pobj);\n\t\tSystem.out.println("]");\n\t\t\n\t\tArrayList<Customer> pobj1= new ArrayList<>();\n\t\tpobj1.add(new Customer("ABC", "abc@gmail.com"));\n\t\tpobj1.add(new Customer("DEF", 8654678976L));\n\t\tpobj1.add(new Customer("GHI", "ghi@gmail.com", 1234567890L));\n\t\tSystem.out.println("list of Customer: [");\n\t\tdisplayAll(pobj1);\n\t\tSystem.out.println("]");\n\t\t\n\t\tArrayList<Clerk> pobj2= new ArrayList<>();\n\t\tpobj2.add(new Clerk("ABC1", "abc1@gmail.com"));\n\t\tpobj2.add(new Clerk("DEF1", 8654678976L));\n\t\tpobj2.add(new Clerk("GHI1", "ghi1@gmail.com", 1234567890L));\n\t\tSystem.out.println("list of Clerk: [");\n\t\tdisplayAll(pobj2);\n\t\tSystem.out.println("]");\n\t\t\n\t\tSystem.out.println("Count of persons with Email : " +countPersonWithEmail(pobj));\n\t\tSystem.out.println("Count of persons with Phone : " +countPersonWithPhone(pobj));\n\t\tSystem.out.println("Count of Customer with Email : " +countPersonWithEmail(pobj1));\n\t\tSystem.out.println("Count of Customer with Phone : " +countPersonWithPhone(pobj1));\n\t\tSystem.out.println("Count of Clerk with Email : " +countPersonWithEmail(pobj2));\n\t\tSystem.out.println("Count of Clerk with Phone : " +countPersonWithPhone(pobj2));\n\t\t\n\t\tSystem.out.println("Count of Customers in the list : " +countCustomer(pobj));\n\t\tSystem.out.println("Count of Customers in the list : " +countCustomer(pobj1));\n\t\t//System.out.println("Count of Customers in the list : " +countCustomer(pobj2));//compiler error\n\t\t\n\t\tSystem.out.println("Count of Clerks in the list : " +countClerk(pobj));\n\t\t//System.out.println("Count of Clerks in the list : " +countClerk(pobj1)); //compiler error\n\t\tSystem.out.println("Count of Clerks in the list : " +countClerk(pobj2));\n\t\t\n\t\trentalSystem.clerkobj=new Clerk[1];\n\t\trentalSystem.clerkobj[0]=pobj.get(0);\n',-1))),ct=h((()=>(0,o._)("br",null,null,-1))),bt=h((()=>(0,o._)("div",{class:"outbox"},[(0,o._)("p",null,"ERROR"),(0,o._)("p",null,"Type mismatch. An object of type Person cannot be saved in an array of type Clerk")],-1))),dt=h((()=>(0,o._)("pre",null,'import java.util.Scanner;\nimport java.util.ArrayList;\nimport java.text.ParseException;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\nimport java.lang.*;\n\npublic class TestDriver {\n\t\n\tpublic static void main(String[] args) throws ParseException {\n\t\t// TODO Auto-generated method stub\n\t\t\n\t\tRentalSystem rentalSystem = new RentalSystem();\n\t\t\n\t\t//step:1 create a person object and initialize with a customer and clerk object\n\t\tArrayList<Person> pobj= new ArrayList<>();\n\t\tpobj.add(new Clerk("EFG", "efg@gmail.com"));\n\t\tpobj.add(new Customer("ABC", "abc@gmail.com"));\n\t\tpobj.add(new Customer("DEF", 8654678976L));\n\t\tpobj.add(new Customer("GHI", "ghi@gmail.com", 1234567890L));\n\t\tSystem.out.println("list of Person: [");\n\t\tdisplayAll(pobj);\n\t\tSystem.out.println("]");\n\t\t\n\t\tArrayList<Customer> pobj1= new ArrayList<>();\n\t\tpobj1.add(new Customer("ABC", "abc@gmail.com"));\n\t\tpobj1.add(new Customer("DEF", 8654678976L));\n\t\tpobj1.add(new Customer("GHI", "ghi@gmail.com", 1234567890L));\n\t\tSystem.out.println("list of Customer: [");\n\t\tdisplayAll(pobj1);\n\t\tSystem.out.println("]");\n\t\t\n\t\tArrayList<Clerk> pobj2= new ArrayList<>();\n\t\tpobj2.add(new Clerk("ABC1", "abc1@gmail.com"));\n\t\tpobj2.add(new Clerk("DEF1", 8654678976L));\n\t\tpobj2.add(new Clerk("GHI1", "ghi1@gmail.com", 1234567890L));\n\t\tSystem.out.println("list of Clerk: [");\n\t\tdisplayAll(pobj2);\n\t\tSystem.out.println("]");\n\t\t\n\t\tSystem.out.println("Count of persons with Email : " +countPersonWithEmail(pobj));\n\t\tSystem.out.println("Count of persons with Phone : " +countPersonWithPhone(pobj));\n\t\tSystem.out.println("Count of Customer with Email : " +countPersonWithEmail(pobj1));\n\t\tSystem.out.println("Count of Customer with Phone : " +countPersonWithPhone(pobj1));\n\t\tSystem.out.println("Count of Clerk with Email : " +countPersonWithEmail(pobj2));\n\t\tSystem.out.println("Count of Clerk with Phone : " +countPersonWithPhone(pobj2));\n\t\t\n\t\tSystem.out.println("Count of Customers in the list : " +countCustomer(pobj));\n\t\tSystem.out.println("Count of Customers in the list : " +countCustomer(pobj1));\n\t\t//System.out.println("Count of Customers in the list : " +countCustomer(pobj2));//compiler error\n\t\t\n\t\tSystem.out.println("Count of Clerks in the list : " +countClerk(pobj));\n\t\t//System.out.println("Count of Clerks in the list : " +countClerk(pobj1)); //compiler error\n\t\tSystem.out.println("Count of Clerks in the list : " +countClerk(pobj2));\n\t\t\n\t\trentalSystem.clerkobj=new Clerk[1];\t\t\n\t\t//rentalSystem.clerkobj[0]=pobj.get(0); //compiler error due to type mismatch\n',-1))),Ct=h((()=>(0,o._)("br",null,null,-1))),yt=h((()=>(0,o._)("p",{id:"comment"},"//Perform the same operation using typecasting to avoid errors",-1))),jt=h((()=>(0,o._)("br",null,null,-1))),ht=h((()=>(0,o._)("br",null,null,-1))),kt=h((()=>(0,o._)("pre",null,'import java.util.Scanner;\nimport java.util.ArrayList;\nimport java.text.ParseException;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\nimport java.lang.*;\n\npublic class TestDriver {\n\t\n\tpublic static void main(String[] args) throws ParseException {\n\t\t// TODO Auto-generated method stub\n\t\t\n\t\tRentalSystem rentalSystem = new RentalSystem();\n\t\t\n\t\t//step:1 create a person object and initialize with a customer and clerk object\n\t\tArrayList<Person> pobj= new ArrayList<>();\n\t\tpobj.add(new Clerk("EFG", "efg@gmail.com"));\n\t\tpobj.add(new Customer("ABC", "abc@gmail.com"));\n\t\tpobj.add(new Customer("DEF", 8654678976L));\n\t\tpobj.add(new Customer("GHI", "ghi@gmail.com", 1234567890L));\n\t\tSystem.out.println("list of Person: [");\n\t\tdisplayAll(pobj);\n\t\tSystem.out.println("]");\n\t\t\n\t\tArrayList<Customer> pobj1= new ArrayList<>();\n\t\tpobj1.add(new Customer("ABC", "abc@gmail.com"));\n\t\tpobj1.add(new Customer("DEF", 8654678976L));\n\t\tpobj1.add(new Customer("GHI", "ghi@gmail.com", 1234567890L));\n\t\tSystem.out.println("list of Customer: [");\n\t\tdisplayAll(pobj1);\n\t\tSystem.out.println("]");\n\t\t\n\t\tArrayList<Clerk> pobj2= new ArrayList<>();\n\t\tpobj2.add(new Clerk("ABC1", "abc1@gmail.com"));\n\t\tpobj2.add(new Clerk("DEF1", 8654678976L));\n\t\tpobj2.add(new Clerk("GHI1", "ghi1@gmail.com", 1234567890L));\n\t\tSystem.out.println("list of Clerk: [");\n\t\tdisplayAll(pobj2);\n\t\tSystem.out.println("]");\n\t\t\n\t\tSystem.out.println("Count of persons with Email : " +countPersonWithEmail(pobj));\n\t\tSystem.out.println("Count of persons with Phone : " +countPersonWithPhone(pobj));\n\t\tSystem.out.println("Count of Customer with Email : " +countPersonWithEmail(pobj1));\n\t\tSystem.out.println("Count of Customer with Phone : " +countPersonWithPhone(pobj1));\n\t\tSystem.out.println("Count of Clerk with Email : " +countPersonWithEmail(pobj2));\n\t\tSystem.out.println("Count of Clerk with Phone : " +countPersonWithPhone(pobj2));\n\t\t\n\t\tSystem.out.println("Count of Customers in the list : " +countCustomer(pobj));\n\t\tSystem.out.println("Count of Customers in the list : " +countCustomer(pobj1));\n\t\t//System.out.println("Count of Customers in the list : " +countCustomer(pobj2));//compiler error\n\t\t\n\t\tSystem.out.println("Count of Clerks in the list : " +countClerk(pobj));\n\t\t//System.out.println("Count of Clerks in the list : " +countClerk(pobj1)); //compiler error\n\t\tSystem.out.println("Count of Clerks in the list : " +countClerk(pobj2));\n    \n\t\trentalSystem.clerkobj=new Clerk[1];\t\t\n\t\t//rentalSystem.clerkobj[0]=pobj.get(0); //compiler error due to type mismatch\n\t\trentalSystem.clerkobj[0]=(Clerk)pobj.get(0);\n\t\t\n',-1))),St=h((()=>(0,o._)("br",null,null,-1))),wt=(0,o.uE)('<div class="outbox no-error" data-v-6ad814cc><p data-v-6ad814cc>OUTPUT</p><p style="color:#fff;" data-v-6ad814cc>Vehicle is available, initiating contract..</p><p style="color:#fff;" data-v-6ad814cc>Reservation released</p><p style="color:#fff;" data-v-6ad814cc>Vehicle key handedover</p><br data-v-6ad814cc><p style="color:#fff;" data-v-6ad814cc>Process finished with exit code 0</p></div>',1),gt=h((()=>(0,o._)("br",null,null,-1))),vt=h((()=>(0,o._)("pre",null,'import java.util.Scanner;\nimport java.util.ArrayList;\nimport java.text.ParseException;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\nimport java.lang.*;\n\npublic class TestDriver {\n\t\n\tpublic static void main(String[] args) throws ParseException {\n\t\t// TODO Auto-generated method stub\n\t\t\n\t\tRentalSystem rentalSystem = new RentalSystem();\n\t\t\n\t\t//step:1 create a person object and initialize with a customer and clerk object\n\t\tArrayList<Person> pobj= new ArrayList<>();\n\t\tpobj.add(new Clerk("EFG", "efg@gmail.com"));\n\t\tpobj.add(new Customer("ABC", "abc@gmail.com"));\n\t\tpobj.add(new Customer("DEF", 8654678976L));\n\t\tpobj.add(new Customer("GHI", "ghi@gmail.com", 1234567890L));\n\t\tSystem.out.println("list of Person: [");\n\t\tdisplayAll(pobj);\n\t\tSystem.out.println("]");\n\t\t\n\t\tArrayList<Customer> pobj1= new ArrayList<>();\n\t\tpobj1.add(new Customer("ABC", "abc@gmail.com"));\n\t\tpobj1.add(new Customer("DEF", 8654678976L));\n\t\tpobj1.add(new Customer("GHI", "ghi@gmail.com", 1234567890L));\n\t\tSystem.out.println("list of Customer: [");\n\t\tdisplayAll(pobj1);\n\t\tSystem.out.println("]");\n\t\t\n\t\tArrayList<Clerk> pobj2= new ArrayList<>();\n\t\tpobj2.add(new Clerk("ABC1", "abc1@gmail.com"));\n\t\tpobj2.add(new Clerk("DEF1", 8654678976L));\n\t\tpobj2.add(new Clerk("GHI1", "ghi1@gmail.com", 1234567890L));\n\t\tSystem.out.println("list of Clerk: [");\n\t\tdisplayAll(pobj2);\n\t\tSystem.out.println("]");\n\t\t\n\t\tSystem.out.println("Count of persons with Email : " +countPersonWithEmail(pobj));\n\t\tSystem.out.println("Count of persons with Phone : " +countPersonWithPhone(pobj));\n\t\tSystem.out.println("Count of Customer with Email : " +countPersonWithEmail(pobj1));\n\t\tSystem.out.println("Count of Customer with Phone : " +countPersonWithPhone(pobj1));\n\t\tSystem.out.println("Count of Clerk with Email : " +countPersonWithEmail(pobj2));\n\t\tSystem.out.println("Count of Clerk with Phone : " +countPersonWithPhone(pobj2));\n\t\t\n\t\tSystem.out.println("Count of Customers in the list : " +countCustomer(pobj));\n\t\tSystem.out.println("Count of Customers in the list : " +countCustomer(pobj1));\n\t\t//System.out.println("Count of Customers in the list : " +countCustomer(pobj2));//compiler error\n\t\t\n\t\tSystem.out.println("Count of Clerks in the list : " +countClerk(pobj));\n\t\t//System.out.println("Count of Clerks in the list : " +countClerk(pobj1)); //compiler error\n\t\tSystem.out.println("Count of Clerks in the list : " +countClerk(pobj2));\n    \n\t\trentalSystem.clerkobj=new Clerk[1];\t\t\n\t\t//rentalSystem.clerkobj[0]=pobj.get(0); //compiler error due to type mismatch\n\t\t//rentalSystem.clerkobj[0]=(Clerk)pobj.get(0); //no compiler error or runtime error\n\t\t\n\t\t//rentalSystem.clerkobj[0]=pobj.get(1); //compiler error due to type mismatch\n',-1))),ft=h((()=>(0,o._)("br",null,null,-1))),Pt=h((()=>(0,o._)("p",{id:"comment"},"//Write code to run the last line using typecasting to avoid errors",-1))),_t=h((()=>(0,o._)("br",null,null,-1))),At=h((()=>(0,o._)("br",null,null,-1))),Lt=h((()=>(0,o._)("pre",null,'import java.util.Scanner;\nimport java.util.ArrayList;\nimport java.text.ParseException;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\nimport java.lang.*;\n\npublic class TestDriver {\n\t\n\tpublic static void main(String[] args) throws ParseException {\n\t\t// TODO Auto-generated method stub\n\t\t\n\t\tRentalSystem rentalSystem = new RentalSystem();\n\t\t\n\t\t//step:1 create a person object and initialize with a customer and clerk object\n\t\tArrayList<Person> pobj= new ArrayList<>();\n\t\tpobj.add(new Clerk("EFG", "efg@gmail.com"));\n\t\tpobj.add(new Customer("ABC", "abc@gmail.com"));\n\t\tpobj.add(new Customer("DEF", 8654678976L));\n\t\tpobj.add(new Customer("GHI", "ghi@gmail.com", 1234567890L));\n\t\tSystem.out.println("list of Person: [");\n\t\tdisplayAll(pobj);\n\t\tSystem.out.println("]");\n\t\t\n\t\tArrayList<Customer> pobj1= new ArrayList<>();\n\t\tpobj1.add(new Customer("ABC", "abc@gmail.com"));\n\t\tpobj1.add(new Customer("DEF", 8654678976L));\n\t\tpobj1.add(new Customer("GHI", "ghi@gmail.com", 1234567890L));\n\t\tSystem.out.println("list of Customer: [");\n\t\tdisplayAll(pobj1);\n\t\tSystem.out.println("]");\n\t\t\n\t\tArrayList<Clerk> pobj2= new ArrayList<>();\n\t\tpobj2.add(new Clerk("ABC1", "abc1@gmail.com"));\n\t\tpobj2.add(new Clerk("DEF1", 8654678976L));\n\t\tpobj2.add(new Clerk("GHI1", "ghi1@gmail.com", 1234567890L));\n\t\tSystem.out.println("list of Clerk: [");\n\t\tdisplayAll(pobj2);\n\t\tSystem.out.println("]");\n\t\t\n\t\tSystem.out.println("Count of persons with Email : " +countPersonWithEmail(pobj));\n\t\tSystem.out.println("Count of persons with Phone : " +countPersonWithPhone(pobj));\n\t\tSystem.out.println("Count of Customer with Email : " +countPersonWithEmail(pobj1));\n\t\tSystem.out.println("Count of Customer with Phone : " +countPersonWithPhone(pobj1));\n\t\tSystem.out.println("Count of Clerk with Email : " +countPersonWithEmail(pobj2));\n\t\tSystem.out.println("Count of Clerk with Phone : " +countPersonWithPhone(pobj2));\n\t\t\n\t\tSystem.out.println("Count of Customers in the list : " +countCustomer(pobj));\n\t\tSystem.out.println("Count of Customers in the list : " +countCustomer(pobj1));\n\t\t//System.out.println("Count of Customers in the list : " +countCustomer(pobj2));//compiler error\n\t\t\n\t\tSystem.out.println("Count of Clerks in the list : " +countClerk(pobj));\n\t\t//System.out.println("Count of Clerks in the list : " +countClerk(pobj1)); //compiler error\n\t\tSystem.out.println("Count of Clerks in the list : " +countClerk(pobj2));\n    \n\t\trentalSystem.clerkobj=new Clerk[1];\t\t\n\t\t//rentalSystem.clerkobj[0]=pobj.get(0); //compiler error due to type mismatch\n\t\trentalSystem.clerkobj[0]=(Clerk)pobj.get(0); //no compiler error or runtime error\n\t\t\n\t\t//rentalSystem.clerkobj[0]=pobj.get(1); //compiler error due to type mismatch\n\t\trentalSystem.clerkobj[0]=(Clerk)pobj.get(1); //no compiler error\n\n',-1))),xt=h((()=>(0,o._)("div",{class:"outbox"},[(0,o._)("p",null,"ERROR"),(0,o._)("p",null,[(0,o.Uk)("Runtime error "),(0,o._)("br"),(0,o.Uk)("Exception in thread \"main\" java.lang.ClassCastException: class Customer cannot be cast to class Clerk (Customer and Clerk are in unnamed module of loader 'app') at TestDriver.main(TestDriver.java:23)")])],-1))),Et=h((()=>(0,o._)("pre",null,'import java.util.Scanner;\nimport java.util.ArrayList;\nimport java.text.ParseException;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\nimport java.lang.*;\n\npublic class TestDriver {\n\t\n\tpublic static void main(String[] args) throws ParseException {\n\t\t// TODO Auto-generated method stub\n\t\t\n\t\tRentalSystem rentalSystem = new RentalSystem();\n\t\t\n\t\t//step:1 create a person object and initialize with a customer and clerk object\n\t\tArrayList<Person> pobj= new ArrayList<>();\n\t\tpobj.add(new Clerk("EFG", "efg@gmail.com"));\n\t\tpobj.add(new Customer("ABC", "abc@gmail.com"));\n\t\tpobj.add(new Customer("DEF", 8654678976L));\n\t\tpobj.add(new Customer("GHI", "ghi@gmail.com", 1234567890L));\n\t\tSystem.out.println("list of Person: [");\n\t\tdisplayAll(pobj);\n\t\tSystem.out.println("]");\n\t\t\n\t\tArrayList<Customer> pobj1= new ArrayList<>();\n\t\tpobj1.add(new Customer("ABC", "abc@gmail.com"));\n\t\tpobj1.add(new Customer("DEF", 8654678976L));\n\t\tpobj1.add(new Customer("GHI", "ghi@gmail.com", 1234567890L));\n\t\tSystem.out.println("list of Customer: [");\n\t\tdisplayAll(pobj1);\n\t\tSystem.out.println("]");\n\t\t\n\t\tArrayList<Clerk> pobj2= new ArrayList<>();\n\t\tpobj2.add(new Clerk("ABC1", "abc1@gmail.com"));\n\t\tpobj2.add(new Clerk("DEF1", 8654678976L));\n\t\tpobj2.add(new Clerk("GHI1", "ghi1@gmail.com", 1234567890L));\n\t\tSystem.out.println("list of Clerk: [");\n\t\tdisplayAll(pobj2);\n\t\tSystem.out.println("]");\n\t\t\n\t\tSystem.out.println("Count of persons with Email : " +countPersonWithEmail(pobj));\n\t\tSystem.out.println("Count of persons with Phone : " +countPersonWithPhone(pobj));\n\t\tSystem.out.println("Count of Customer with Email : " +countPersonWithEmail(pobj1));\n\t\tSystem.out.println("Count of Customer with Phone : " +countPersonWithPhone(pobj1));\n\t\tSystem.out.println("Count of Clerk with Email : " +countPersonWithEmail(pobj2));\n\t\tSystem.out.println("Count of Clerk with Phone : " +countPersonWithPhone(pobj2));\n\t\t\n\t\tSystem.out.println("Count of Customers in the list : " +countCustomer(pobj));\n\t\tSystem.out.println("Count of Customers in the list : " +countCustomer(pobj1));\n\t\t//System.out.println("Count of Customers in the list : " +countCustomer(pobj2));//compiler error\n\t\t\n\t\tSystem.out.println("Count of Clerks in the list : " +countClerk(pobj));\n\t\t//System.out.println("Count of Clerks in the list : " +countClerk(pobj1)); //compiler error\n\t\tSystem.out.println("Count of Clerks in the list : " +countClerk(pobj2));\n    \n\t\trentalSystem.clerkobj=new Clerk[1];\t\t\n\t\t//rentalSystem.clerkobj[0]=pobj.get(0); //compiler error due to type mismatch\n\t\trentalSystem.clerkobj[0]=(Clerk)pobj.get(0); //no compiler error or runtime error\n\t\t\n\t\t//rentalSystem.clerkobj[0]=pobj.get(1); //compiler error due to type mismatch\n\t\trentalSystem.clerkobj[0]=(Clerk)pobj.get(1); //no compiler error\n\n    try\n\t\t{\n\t\t\trentalSystem.clerkobj[0]=(Clerk)pobj.get(1);\n\t\t}\n',-1))),Dt=h((()=>(0,o._)("br",null,null,-1))),Ft=h((()=>(0,o._)("br",null,null,-1))),Ut=h((()=>(0,o._)("br",null,null,-1))),Rt=h((()=>(0,o._)("br",null,null,-1))),Wt=h((()=>(0,o._)("br",null,null,-1))),Tt=h((()=>(0,o._)("p",{id:"comment"},"//Resolve using try-catch block with exception that deals with class casting and instanceof method ",-1))),Ot=h((()=>(0,o._)("br",null,null,-1))),Gt=h((()=>(0,o._)("br",null,null,-1))),It=h((()=>(0,o._)("pre",null,'import java.util.Scanner;\nimport java.util.ArrayList;\nimport java.text.ParseException;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\nimport java.lang.*;\n\npublic class TestDriver {\n\t\n\tpublic static void main(String[] args) throws ParseException {\n\t\t// TODO Auto-generated method stub\n\t\t\n\t\tRentalSystem rentalSystem = new RentalSystem();\n\t\t\n\t\t//step:1 create a person object and initialize with a customer and clerk object\n\t\tArrayList<Person> pobj= new ArrayList<>();\n\t\tpobj.add(new Clerk("EFG", "efg@gmail.com"));\n\t\tpobj.add(new Customer("ABC", "abc@gmail.com"));\n\t\tpobj.add(new Customer("DEF", 8654678976L));\n\t\tpobj.add(new Customer("GHI", "ghi@gmail.com", 1234567890L));\n\t\tSystem.out.println("list of Person: [");\n\t\tdisplayAll(pobj);\n\t\tSystem.out.println("]");\n\t\t\n\t\tArrayList<Customer> pobj1= new ArrayList<>();\n\t\tpobj1.add(new Customer("ABC", "abc@gmail.com"));\n\t\tpobj1.add(new Customer("DEF", 8654678976L));\n\t\tpobj1.add(new Customer("GHI", "ghi@gmail.com", 1234567890L));\n\t\tSystem.out.println("list of Customer: [");\n\t\tdisplayAll(pobj1);\n\t\tSystem.out.println("]");\n\t\t\n\t\tArrayList<Clerk> pobj2= new ArrayList<>();\n\t\tpobj2.add(new Clerk("ABC1", "abc1@gmail.com"));\n\t\tpobj2.add(new Clerk("DEF1", 8654678976L));\n\t\tpobj2.add(new Clerk("GHI1", "ghi1@gmail.com", 1234567890L));\n\t\tSystem.out.println("list of Clerk: [");\n\t\tdisplayAll(pobj2);\n\t\tSystem.out.println("]");\n\t\t\n\t\tSystem.out.println("Count of persons with Email : " +countPersonWithEmail(pobj));\n\t\tSystem.out.println("Count of persons with Phone : " +countPersonWithPhone(pobj));\n\t\tSystem.out.println("Count of Customer with Email : " +countPersonWithEmail(pobj1));\n\t\tSystem.out.println("Count of Customer with Phone : " +countPersonWithPhone(pobj1));\n\t\tSystem.out.println("Count of Clerk with Email : " +countPersonWithEmail(pobj2));\n\t\tSystem.out.println("Count of Clerk with Phone : " +countPersonWithPhone(pobj2));\n\t\t\n\t\tSystem.out.println("Count of Customers in the list : " +countCustomer(pobj));\n\t\tSystem.out.println("Count of Customers in the list : " +countCustomer(pobj1));\n\t\t//System.out.println("Count of Customers in the list : " +countCustomer(pobj2));//compiler error\n\t\t\n\t\tSystem.out.println("Count of Clerks in the list : " +countClerk(pobj));\n\t\t//System.out.println("Count of Clerks in the list : " +countClerk(pobj1)); //compiler error\n\t\tSystem.out.println("Count of Clerks in the list : " +countClerk(pobj2));\n    \n\t\trentalSystem.clerkobj=new Clerk[1];\t\t\n\t\t//rentalSystem.clerkobj[0]=pobj.get(0); //compiler error due to type mismatch\n\t\t//rentalSystem.clerkobj[0]=(Clerk)pobj.get(0); //no compiler error or runtime error\n\t\t\n\t\t//rentalSystem.clerkobj[0]=pobj.get(1); //compiler error due to type mismatch\n    //rentalSystem.clerkobj[0]=(Clerk)pobj.get(1); //no compiler error\n    //run the code and check \n\t\t//the following runtime error appears\n\t\t//Exception in thread "main" java.lang.ClassCastException: class Customer cannot be cast to class Clerk\n    // (Customer and Clerk are in unnamed module of loader \'app\')\n\t\t//at TestDriver.main(TestDriver.java:23)\n\n\n    try\n\t\t{\n\t\t\trentalSystem.clerkobj[0]=(Clerk)pobj.get(1);\n\t\t}\n\t\tcatch(ClassCastException e)\n\t\t{\n\t\t\tif(pobj.get(1) instanceof Clerk)\n\t\t\t\trentalSystem.clerkobj[0] =(Clerk) pobj.get(1);\n\t\t}\n\t\t\n\t\t\n\t\trentalSystem.cobj= new Customer[3];\n\t\trentalSystem.cobj[0]=(Customer) pobj.get(1);\n\t\trentalSystem.cobj[1]=(Customer) pobj.get(2);\n\t\trentalSystem.cobj[2]=(Customer) pobj.get(3);\n\t\trentalSystem.cobj[0].setCity("Coimbatore");\n\t\trentalSystem.cobj[1].setCity("Coimbatore");\n\t\trentalSystem.cobj[2].setCity("Chennai");\n\t\t\n\t\trentalSystem.vobj = new Vehicle[1];\n\t\trentalSystem.vobj[0]=new Vehicle(1234);\n\t\t\n\t\trentalSystem.robj=new Reservation[1];\n\t\trentalSystem.robj[0]= new Reservation(rentalSystem.cobj[0],rentalSystem.vobj[0]);\n\t\tSimpleDateFormat sdformat = new SimpleDateFormat("yyyy-MM-dd");\n\t    Date d = sdformat.parse("2022-02-29");\n\t\trentalSystem.robj[0].setBookingDate(d);\n\t\trentalSystem.robj[0].setContractStatus("Reservation not released");\n\t\t\n\t\t//run this code and check the following error appears\n\t\t//Exception in thread "main" java.lang.NullPointerException: Cannot invoke "Clerk.requestVehicle(Reservation)" \n    //because "cl" is null\n\t\t//at RentalSystem.visitOffice(RentalSystem.java:18)\n\t\t//at TestDriver.main(TestDriver.java:62)\n    \n            try\n\t\t{\n\t\t\trentalSystem.visitOffice(rentalSystem.robj[0]);\n\t\t}\n',-1))),Bt=h((()=>(0,o._)("br",null,null,-1))),Ht=h((()=>(0,o._)("br",null,null,-1))),zt=h((()=>(0,o._)("br",null,null,-1))),Vt=h((()=>(0,o._)("br",null,null,-1))),Nt=h((()=>(0,o._)("p",{id:"comment"},"//Resolve using a try-catch block to handle the NullPointerException ",-1))),Zt=h((()=>(0,o._)("br",null,null,-1))),Mt=h((()=>(0,o._)("br",null,null,-1))),qt=h((()=>(0,o._)("pre",null,'import java.util.Scanner;\nimport java.util.ArrayList;\nimport java.text.ParseException;\nimport java.text.SimpleDateFormat;\nimport java.util.Date;\nimport java.lang.*;\n\npublic class TestDriver {\n\t\n\tpublic static void main(String[] args) throws ParseException {\n\t\t// TODO Auto-generated method stub\n\t\t\n\t\tRentalSystem rentalSystem = new RentalSystem();\n\t\t\n\t\t//step:1 create a person object and initialize with a customer and clerk object\n\t\tArrayList<Person> pobj= new ArrayList<>();\n\t\tpobj.add(new Clerk("EFG", "efg@gmail.com"));\n\t\tpobj.add(new Customer("ABC", "abc@gmail.com"));\n\t\tpobj.add(new Customer("DEF", 8654678976L));\n\t\tpobj.add(new Customer("GHI", "ghi@gmail.com", 1234567890L));\n\t\tSystem.out.println("list of Person: [");\n\t\tdisplayAll(pobj);\n\t\tSystem.out.println("]");\n\t\t\n\t\tArrayList<Customer> pobj1= new ArrayList<>();\n\t\tpobj1.add(new Customer("ABC", "abc@gmail.com"));\n\t\tpobj1.add(new Customer("DEF", 8654678976L));\n\t\tpobj1.add(new Customer("GHI", "ghi@gmail.com", 1234567890L));\n\t\tSystem.out.println("list of Customer: [");\n\t\tdisplayAll(pobj1);\n\t\tSystem.out.println("]");\n\t\t\n\t\tArrayList<Clerk> pobj2= new ArrayList<>();\n\t\tpobj2.add(new Clerk("ABC1", "abc1@gmail.com"));\n\t\tpobj2.add(new Clerk("DEF1", 8654678976L));\n\t\tpobj2.add(new Clerk("GHI1", "ghi1@gmail.com", 1234567890L));\n\t\tSystem.out.println("list of Clerk: [");\n\t\tdisplayAll(pobj2);\n\t\tSystem.out.println("]");\n\t\t\n\t\tSystem.out.println("Count of persons with Email : " +countPersonWithEmail(pobj));\n\t\tSystem.out.println("Count of persons with Phone : " +countPersonWithPhone(pobj));\n\t\tSystem.out.println("Count of Customer with Email : " +countPersonWithEmail(pobj1));\n\t\tSystem.out.println("Count of Customer with Phone : " +countPersonWithPhone(pobj1));\n\t\tSystem.out.println("Count of Clerk with Email : " +countPersonWithEmail(pobj2));\n\t\tSystem.out.println("Count of Clerk with Phone : " +countPersonWithPhone(pobj2));\n\t\t\n\t\tSystem.out.println("Count of Customers in the list : " +countCustomer(pobj));\n\t\tSystem.out.println("Count of Customers in the list : " +countCustomer(pobj1));\n\t\t//System.out.println("Count of Customers in the list : " +countCustomer(pobj2));//compiler error\n\t\t\n\t\tSystem.out.println("Count of Clerks in the list : " +countClerk(pobj));\n\t\t//System.out.println("Count of Clerks in the list : " +countClerk(pobj1)); //compiler error\n\t\tSystem.out.println("Count of Clerks in the list : " +countClerk(pobj2));\n\t\t\n\t\trentalSystem.clerkobj=new Clerk[1];\t\t\n\t\t//step 2: initialize the clerk object with pobj[0] and check\n\t\t//rentalSystem.clerkobj[0]=pobj.get(0); //compiler error due to type mismatch\n\t\t//step 3: type cast\n\t\t//rentalSystem.clerkobj[0]=(Clerk)pobj.get(0); //no compiler error or runtime error\n\t\t\n\t\t//run the code and check to see the output\n\t\t//Vehicle is available, initiating contract..\n\t\t//Reservation released\n\t\t//Vehicle key handedover\n\t\t\n\t\t//step 4: initialize the clerk object with pobj[1] and check\n\t\t//rentalSystem.clerkobj[0]=pobj.get(1); //compiler error due to type mismatch\n\t\t//step 5: type cast to Clerk\n\t\t//rentalSystem.clerkobj[0]=(Clerk)pobj.get(1); //no compiler error\n\t\t\n\t\t//run the code and check \n\t\t//the following runtime error appears\n\t\t//Exception in thread "main" java.lang.ClassCastException: \n    //class Customer cannot be cast to class Clerk (Customer and Clerk are in unnamed module of loader \'app\')\n\t\t//at TestDriver.main(TestDriver.java:23)\n\t\t\n\t\t//Step 6: resolve using try-catch block and instanceof method\t\n\t\ttry\n\t\t{\n\t\t\trentalSystem.clerkobj[0]=(Clerk)pobj.get(1);\n\t\t}\n\t\tcatch(ClassCastException e)\n\t\t{\n\t\t\tif(pobj.get(1) instanceof Clerk)\n\t\t\t\trentalSystem.clerkobj[0] =(Clerk) pobj.get(1);\n\t\t}\n\t\t\n\t\t\n\t\trentalSystem.cobj= new Customer[3];\n\t\trentalSystem.cobj[0]=(Customer) pobj.get(1);\n\t\trentalSystem.cobj[1]=(Customer) pobj.get(2);\n\t\trentalSystem.cobj[2]=(Customer) pobj.get(3);\n\t\trentalSystem.cobj[0].setCity("Coimbatore");\n\t\trentalSystem.cobj[1].setCity("Coimbatore");\n\t\trentalSystem.cobj[2].setCity("Chennai");\n\t\t\n\t\trentalSystem.vobj = new Vehicle[1];\n\t\trentalSystem.vobj[0]=new Vehicle(1234);\n\t\t\n\t\trentalSystem.robj=new Reservation[1];\n\t\trentalSystem.robj[0]= new Reservation(rentalSystem.cobj[0],rentalSystem.vobj[0]);\n\t\tSimpleDateFormat sdformat = new SimpleDateFormat("yyyy-MM-dd");\n\t    Date d = sdformat.parse("2022-02-29");\n\t\trentalSystem.robj[0].setBookingDate(d);\n\t\trentalSystem.robj[0].setContractStatus("Reservation not released");\n\t\t\n\t\t//run this code and check the following error appears\n\t\t//Exception in thread "main" java.lang.NullPointerException: \n    //Cannot invoke "Clerk.requestVehicle(Reservation)" because "cl" is null\n\t\t//at RentalSystem.visitOffice(RentalSystem.java:18)\n\t\t//at TestDriver.main(TestDriver.java:62)\n\t\t\n\t\t//Step 7: resolve using a try-catch block to handle the NullPointerException\n\t\ttry\n\t\t{\n\t\t\trentalSystem.visitOffice(rentalSystem.robj[0]);\n\t\t}\n\t\tcatch(NullPointerException e)\n\t\t{\n\t\t\tSystem.out.println("wait for clerk to be assigned");\n\t\t}\t\t\n\t}\t\n\t\n\tpublic static <T extends Person> int countPersonWithEmail(ArrayList<T> alist)\n\t{\n\t\tint count=0;\n\t\tfor(T a: alist)\n\t\t{\n\t\t\tif(a.getEmail()!=null)\n\t\t\t\tcount++;\n\t\t}\n\t\treturn count;\n\t}\t\n\t\n\tpublic static <T extends Person> int countPersonWithPhone(ArrayList<T> alist)\n\t{\n\t\tint count=0;\n\t\tfor(T a: alist)\n\t\t{\n\t\t\tif(a.getPhone()!=0L && a.getPhone()!=999999999L)\n\t\t\t\tcount++;\n\t\t}\n\t\treturn count;\n\t}\t\n\t\n\tpublic static int countCustomer(ArrayList<? super Customer> alist)\n\t{\n\t\tint count=0;\n\t\tfor(Object a: alist)\n\t\t{\n\t\t\tif(a instanceof Customer)\n\t\t\t\tcount++;\n\t\t}\n\t\treturn count;\n\t}\t\n\t\n\tpublic static int countClerk(ArrayList<? super Clerk> alist)\n\t{\n\t\tint count=0;\n\t\tfor(Object a: alist)\n\t\t{\n\t\t\tif(a instanceof Clerk)\n\t\t\t\tcount++;\n\t\t}\n\t\treturn count;\n\t}\t\n\t\n\tpublic static <T extends Person> void displayAll(ArrayList<T> alist)\n\t{\n\t\tfor(Object a: alist)\n\t\t{\n\t\t\tSystem.out.println(a.toString());\n\t\t}\n\t}\t\t\n}\n\n',-1))),$t=[qt];function Yt(t,n,e,i,s,a){return(0,o.wg)(),(0,o.iD)("main",k,[S,(0,o._)("div",w,[(0,o._)("div",g,[(0,o._)("div",v,[f,(0,o._)("ul",P,[(0,o._)("li",{class:(0,r.C_)({completed:s.valid[0]})},"Create a person object and initialize with a customer and clerk object. ",2)])])])]),(0,o._)("div",_,[(0,o._)("div",A,[L,x,(0,o._)("div",{class:"codebox",id:"codebox",style:(0,r.j5)({display:s.display[0]})},[E,(0,o.Uk)("    ArrayList<"),(0,o.wy)((0,o._)("input",{spellcheck:"false",id:"one","onUpdate:modelValue":n[0]||(n[0]=n=>t.one=n),maxlength:"6",style:{width:"80px"}},null,512),[[l.nr,t.one]]),(0,o.Uk)("> pobj = new "),(0,o.wy)((0,o._)("input",{spellcheck:"false",id:"two","onUpdate:modelValue":n[1]||(n[1]=n=>t.two=n),maxlength:"9",style:{width:"100px"}},null,512),[[l.nr,t.two]]),(0,o.Uk)(" <>(); "),D,F,(0,o.Uk)(" } "),U,(0,o._)("button",{class:"button-9",id:"btn1",onClick:n[2]||(n[2]=t=>a.validate_one())},(0,r.zw)(s.button_value),1)],4),(0,o._)("div",{class:"codebox",id:"codebox",style:(0,r.j5)({display:s.display[1]})},[R,(0,o.Uk)("    pobj."),(0,o.wy)((0,o._)("input",{spellcheck:"false",id:"three","onUpdate:modelValue":n[3]||(n[3]=n=>t.three=n),maxlength:"3",style:{width:"50px"}},null,512),[[l.nr,t.three]]),(0,o.Uk)("(new "),(0,o.wy)((0,o._)("input",{spellcheck:"false",id:"four","onUpdate:modelValue":n[4]||(n[4]=n=>t.four=n),maxlength:"5",style:{width:"80px"}},null,512),[[l.nr,t.four]]),(0,o.Uk)('("EFG", "efg@gmail.com")); '),W,T,(0,o.Uk)(" } "),O,(0,o._)("button",{class:"button-9",id:"btn1",onClick:n[5]||(n[5]=t=>a.validate_two())},(0,r.zw)(s.button_value),1)],4),(0,o._)("div",{class:"codebox",id:"codebox",style:(0,r.j5)({display:s.display[2]})},[G,(0,o.Uk)("    pobj."),(0,o.wy)((0,o._)("input",{spellcheck:"false",id:"five","onUpdate:modelValue":n[6]||(n[6]=n=>t.five=n),maxlength:"3",style:{width:"50px"}},null,512),[[l.nr,t.five]]),(0,o.Uk)("(new "),(0,o.wy)((0,o._)("input",{spellcheck:"false",id:"six","onUpdate:modelValue":n[7]||(n[7]=n=>t.six=n),maxlength:"8",style:{width:"100px"}},null,512),[[l.nr,t.six]]),(0,o.Uk)('("ABC", "abc@gmail.com")); '),I,B,(0,o.Uk)(" } "),H,(0,o._)("button",{class:"button-9",id:"btn1",onClick:n[8]||(n[8]=t=>a.validate_three())},(0,r.zw)(s.button_value),1)],4),(0,o._)("div",{class:"codebox",id:"codebox",style:(0,r.j5)({display:s.display[3]})},[z,(0,o.Uk)("    ArrayList<"),(0,o.wy)((0,o._)("input",{spellcheck:"false",id:"seven","onUpdate:modelValue":n[9]||(n[9]=n=>t.a=n),maxlength:"8",style:{width:"90px"}},null,512),[[l.nr,t.a]]),(0,o.Uk)("> pobj1 = new "),(0,o.wy)((0,o._)("input",{spellcheck:"false",id:"two","onUpdate:modelValue":n[10]||(n[10]=n=>t.b=n),maxlength:"9",style:{width:"100px"}},null,512),[[l.nr,t.b]]),(0,o.Uk)(" <>(); "),V,N,(0,o.Uk)(" } "),Z,(0,o._)("button",{class:"button-9",id:"btn1",onClick:n[11]||(n[11]=t=>a.validate_four())},(0,r.zw)(s.button_value),1)],4),(0,o._)("div",{class:"codebox",id:"codebox",style:(0,r.j5)({display:s.display[4]})},[M,q,$,(0,o.Uk)(" } "),Y,(0,o._)("button",{class:"button-9",id:"btn1",onClick:n[12]||(n[12]=t=>a.validate_free())},(0,r.zw)(s.button_value),1)],4),(0,o._)("div",{class:"codebox",id:"codebox",style:(0,r.j5)({display:s.display[5]})},[J,(0,o.Uk)("       "),K,Q,X,(0,o.Uk)(" } "),tt,(0,o._)("button",{class:"button-9",id:"btn1",onClick:n[13]||(n[13]=t=>a.validate_free2())},(0,r.zw)(s.button_value),1)],4),(0,o._)("div",{class:"codebox",id:"codebox",style:(0,r.j5)({display:s.display[6]})},[nt,(0,o.Uk)("        "),et,ot,(0,o.Uk)("    "),rt,(0,o.Uk)(" } "),lt,(0,o._)("button",{class:"button-9",id:"btn1",onClick:n[14]||(n[14]=t=>a.validate_free3())},(0,r.zw)(s.button_value),1)],4),(0,o._)("div",{class:"codebox",id:"codebox",style:(0,r.j5)({display:s.display[7]})},[it,st,(0,o.Uk)("      rentalSystem.clerkobj[0]= "),(0,o.wy)((0,o._)("input",{spellcheck:"false",maxlength:"4","onUpdate:modelValue":n[15]||(n[15]=n=>t.seven=n),style:{width:"50px"}},null,512),[[l.nr,t.seven]]),(0,o.Uk)(".get( "),(0,o.wy)((0,o._)("input",{spellcheck:"false",maxlength:"1","onUpdate:modelValue":n[16]||(n[16]=n=>t.eight=n),style:{width:"15px",padding:"2px"}},null,512),[[l.nr,t.eight]]),(0,o.Uk)(" ); "),at,pt,(0,o.Uk)(" } "),mt,(0,o._)("button",{class:"button-9",id:"btn1",onClick:n[17]||(n[17]=t=>a.validate_five())},(0,r.zw)(s.button_value),1)],4),(0,o._)("div",{class:"codebox",id:"codebox",style:(0,r.j5)({display:s.display[8]})},[ut,(0,o.Uk)(" } "),ct,bt,(0,o._)("button",{class:"button-9",id:"btn1",onClick:n[18]||(n[18]=t=>a.validate_free4())},(0,r.zw)(s.button_value),1)],4),(0,o._)("div",{class:"codebox",id:"codebox",style:(0,r.j5)({display:s.display[9]})},[dt,Ct,(0,o.Uk)("       rentalSystem.clerkobj[0]=("),(0,o.wy)((0,o._)("input",{spellcheck:"false",maxlength:"5","onUpdate:modelValue":n[19]||(n[19]=n=>t.nine=n),style:{width:"60px"}},null,512),[[l.nr,t.nine]]),(0,o.Uk)(") "),(0,o.wy)((0,o._)("input",{spellcheck:"false",maxlength:"4","onUpdate:modelValue":n[20]||(n[20]=n=>t.ten=n),style:{width:"50px"}},null,512),[[l.nr,t.ten]]),(0,o.Uk)(".get(0); "),yt,jt,(0,o.Uk)(" } "),ht,(0,o._)("button",{class:"button-9",id:"btn1",onClick:n[21]||(n[21]=t=>a.validate_six())},(0,r.zw)(s.button_value),1)],4),(0,o._)("div",{class:"codebox",id:"codebox",style:(0,r.j5)({display:s.display[10]})},[kt,St,(0,o.Uk)("       "),wt,(0,o.Uk)(" } "),gt,(0,o._)("button",{class:"button-9",id:"btn1",onClick:n[22]||(n[22]=t=>a.validate_free5())},(0,r.zw)(s.button_value),1)],4),(0,o._)("div",{class:"codebox",id:"codebox",style:(0,r.j5)({display:s.display[11]})},[vt,ft,(0,o.Uk)("       rentalSystem.clerkobj[0]=("),(0,o.wy)((0,o._)("input",{spellcheck:"false",maxlength:"5","onUpdate:modelValue":n[23]||(n[23]=n=>t.eleven=n),style:{width:"60px"}},null,512),[[l.nr,t.eleven]]),(0,o.Uk)(") "),(0,o.wy)((0,o._)("input",{spellcheck:"false",maxlength:"4","onUpdate:modelValue":n[24]||(n[24]=n=>t.twelve=n),style:{width:"50px"}},null,512),[[l.nr,t.twelve]]),(0,o.Uk)(".get( "),(0,o.wy)((0,o._)("input",{spellcheck:"false",maxlength:"1","onUpdate:modelValue":n[25]||(n[25]=n=>t.thirteen=n),style:{width:"15px",padding:"2px"}},null,512),[[l.nr,t.thirteen]]),(0,o.Uk)("); "),Pt,_t,(0,o.Uk)(" } "),At,(0,o._)("button",{class:"button-9",id:"btn1",onClick:n[26]||(n[26]=t=>a.validate_seven())},(0,r.zw)(s.button_value),1)],4),(0,o._)("div",{class:"codebox",id:"codebox",style:(0,r.j5)({display:s.display[12]})},[Lt,xt,(0,o._)("button",{class:"button-9",id:"btn1",onClick:n[27]||(n[27]=t=>a.validate_free6())},(0,r.zw)(s.button_value),1)],4),(0,o._)("div",{class:"codebox",id:"codebox",style:(0,r.j5)({display:s.display[13]})},[Et,Dt,(0,o.Uk)("       catch("),(0,o.wy)((0,o._)("input",{spellcheck:"false",maxlength:"18","onUpdate:modelValue":n[28]||(n[28]=n=>t.fourteen=n),style:{width:"145px"}},null,512),[[l.nr,t.fourteen]]),(0,o.Uk)(" e) "),Ft,(0,o.Uk)("      { "),Ut,(0,o.Uk)("        if(pobj.get(1) "),(0,o.wy)((0,o._)("input",{spellcheck:"false",maxlength:"10","onUpdate:modelValue":n[29]||(n[29]=n=>t.fifteen=n),style:{width:"90px"}},null,512),[[l.nr,t.fifteen]]),(0,o.Uk)(" Clerk) "),Rt,(0,o.Uk)("           rentalSystem.clerkobj[0] =(Clerk) pobj.get(1); "),Wt,(0,o.Uk)("      } "),Tt,Ot,(0,o.Uk)(" } "),Gt,(0,o._)("button",{class:"button-9",id:"btn1",onClick:n[30]||(n[30]=t=>a.validate_eight())},(0,r.zw)(s.button_value),1)],4),(0,o._)("div",{class:"codebox",id:"codebox",style:(0,r.j5)({display:s.display[14]})},[It,Bt,(0,o.Uk)("       catch("),(0,o.wy)((0,o._)("input",{spellcheck:"false",maxlength:"20","onUpdate:modelValue":n[31]||(n[31]=n=>t.sixteen=n),style:{width:"150px"}},null,512),[[l.nr,t.sixteen]]),(0,o.Uk)(" e) "),Ht,(0,o.Uk)("      { "),zt,(0,o.Uk)('        System.out.println("wait for clerk to be assigned"); '),Vt,(0,o.Uk)("      } "),Nt,Zt,(0,o.Uk)(" } "),Mt,(0,o._)("button",{class:"button-9",id:"btn1",onClick:n[32]||(n[32]=t=>a.validate_nine())},(0,r.zw)(s.button_value),1)],4),(0,o._)("div",{class:"codebox",id:"codebox",style:(0,r.j5)({display:s.display[15]})},$t,4)])])])}var Jt={methods:{correct1(){var t=document.getElementById("snackbar");t.innerHTML="Correct",t.style.backgroundColor="green",t.className="show",setTimeout((function(){t.className=t.className.replace("show","")}),3e3)},incorrect(){var t=document.getElementById("snackbar");t.innerHTML="Incorrect. Try again",t.style.backgroundColor="red",t.className="show",setTimeout((function(){t.className=t.className.replace("show","")}),3e3)},validate_one(){console.log(this.one,this.two),"Person"==this.one&&"ArrayList"==this.two?(this.correct1(),this.display[0]="none",this.display[1]="block"):this.incorrect()},validate_two(){"add"==this.three&&"Clerk"==this.four?(this.correct1(),this.display[1]="none",this.display[2]="block"):this.incorrect()},validate_three(){"add"==this.five&&"Customer"==this.six?(this.correct1(),this.display[2]="none",this.display[3]="block"):this.incorrect()},validate_four(){"Customer"==this.a&&"ArrayList"==this.b?(this.correct1(),this.display[3]="none",this.display[4]="block"):this.incorrect()},validate_free(){this.correct1(),this.display[4]="none",this.display[5]="block"},validate_free2(){this.correct1(),this.display[5]="none",this.display[6]="block"},validate_free3(){this.correct1(),this.display[6]="none",this.display[7]="block"},validate_five(){"pobj"==this.seven&&"0"==this.eight?(this.correct1(),this.display[7]="none",this.display[8]="block"):this.incorrect()},validate_free4(){this.correct1(),this.display[8]="none",this.display[9]="block"},validate_six(){"Clerk"==this.nine&&"pobj"==this.ten?(this.correct1(),this.display[9]="none",this.display[10]="block"):this.incorrect()},validate_free5(){this.correct1(),this.display[10]="none",this.display[11]="block"},validate_seven(){"Clerk"==this.eleven&&"pobj"==this.twelve&&"1"==this.thirteen?(this.correct1(),this.display[11]="none",this.display[12]="block"):this.incorrect()},validate_free6(){this.correct1(),this.display[12]="none",this.display[13]="block"},validate_eight(){"ClassCastException"==this.fourteen&&"instanceof"==this.fifteen?(this.correct1(),this.display[13]="none",this.display[14]="block"):this.incorrect()},validate_nine(){"NullPointerException"==this.sixteen?(this.correct1(),this.display[14]="none",this.display[15]="block",this.$emit("testDriver",!0)):this.incorrect()}},data(){return{id:"container",class:"wrapper",button_value:"Next",button_text:"Incorrect. Try again",button_text_right:"Correct. Next",correct:!1,valid:[!1,!1,!1,!1,!1,!1,!1],display:["block","none","none","none","none","none","none","none","none","none","none","none","none","none","none","none","none","none","none","none","none"]}}},Kt=e(89);const Qt=(0,Kt.Z)(Jt,[["render",Yt],["__scopeId","data-v-6ad814cc"]]);var Xt=Qt,tn={components:{OneClerkComponent:m.Z,OneClassComponent:u.Z,OneCustomerComponent:c.Z,OnePersonComponent:d.Z,OneReservationComponent:b.Z,OneVehicleComponent:C.Z,OneRentalSystemComponent:y.Z,OneInstructionsComponent:j.Z,TwoTestDriverComponent:Xt},data(){return{componentSelect:"OneInstructionsComponent",testDriverComplete:!1}},methods:{instructionsReadCallback(t){console.log(t),this.componentSelect="TwoTestDriverComponent"},testDriverCompleteCallback(t){this.testDriverComplete=!0,this.componentSelect="OneClassComponent"}}};const nn=(0,Kt.Z)(tn,[["render",p]]);var en=nn}}]);
//# sourceMappingURL=103.61957056.js.map