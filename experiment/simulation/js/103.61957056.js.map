{"version":3,"file":"js/103.61957056.js","mappings":"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","sources":["webpack://exp-10/./src/views/SecondView.vue","webpack://exp-10/./src/components/TwoTestDriverComponent.vue","webpack://exp-10/./src/components/TwoTestDriverComponent.vue?66c8","webpack://exp-10/./src/views/SecondView.vue?7c89"],"sourcesContent":["<!--Designed & Developed by:\r\n   Nirmal K (@cyberwizard1001)⁶\r\n   Nitin Ravi (@nitinravi)\r\n   Ritwik M (@ritwik-m) &\r\n   Nalinadevi K (@knaldev)\r\nfor the Ministry of Education (MOE) virtual-labs project, Govt. Of India -->\r\n\r\n<script>\r\nimport OneClerkComponent from \"@/components/OneClerkComponent.vue\";\r\nimport OneClassComponent from \"../components/OneDiagramComponent.vue\";\r\nimport OneCustomerComponent from \"../components/OneCustomerComponent.vue\";\r\nimport OneReservationComponent from \"../components/OneReservationComponent.vue\";\r\nimport OnePersonComponent from \"../components/OnePersonComponent.vue\";\r\nimport OneVehicleComponent from \"../components/OneVehicleComponent.vue\";\r\nimport OneRentalSystemComponent from \"@/components/OneRentalSystemComponent.vue\";\r\nimport OneInstructionsComponent from \"../components/OneInstructionsComponent.vue\";\r\nimport TwoTestDriverComponent from \"@/components/TwoTestDriverComponent.vue\";\r\n\r\nexport default {\r\n  components: {\r\n    OneClerkComponent,\r\n    OneClassComponent,\r\n    OneCustomerComponent,\r\n    OnePersonComponent,\r\n    OneReservationComponent,\r\n    OneVehicleComponent,\r\n    OneRentalSystemComponent,\r\n    OneInstructionsComponent,\r\n    TwoTestDriverComponent,\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      componentSelect: \"OneInstructionsComponent\",\r\n      testDriverComplete: false\r\n    };\r\n  },\r\n  methods: {\r\n    instructionsReadCallback(value) {\r\n      console.log(value);\r\n      this.componentSelect = 'TwoTestDriverComponent'\r\n    },\r\n    testDriverCompleteCallback(value) {\r\n      this.testDriverComplete = true\r\n      this.componentSelect = 'OneClassComponent'\r\n    }\r\n  },\r\n}\r\n</script>\r\n\r\n<template>\r\n  <main class=\"app\">\r\n    <div class=\"buttons\">\r\n      <button @click=\"componentSelect = 'OneInstructionsComponent'\"\r\n              :style=\"componentSelect === 'OneInstructionsComponent' ? 'background-color: #55acee' : ''\">1. Instructions\r\n      </button>\r\n      <button @click=\"componentSelect = 'OnePersonComponent'\"\r\n              :style=\"componentSelect === 'OnePersonComponent' ? 'background-color: #55acee' : ''\">2. Person\r\n      </button>\r\n      <button @click=\"componentSelect = 'OneClerkComponent'\"\r\n              :style=\"componentSelect === 'OneClerkComponent' ? 'background-color: #55acee' : ''\">3. Clerk\r\n      </button>\r\n      <button @click=\"componentSelect = 'OneCustomerComponent'\"\r\n              :style=\"componentSelect === 'OneCustomerComponent' ? 'background-color: #55acee' : ''\">4. Customer\r\n      </button>\r\n      <button @click=\"componentSelect = 'OneVehicleComponent'\"\r\n              :style=\"componentSelect === 'OneVehicleComponent' ? 'background-color: #55acee' : ''\">5. Vehicle\r\n      </button>\r\n      <button @click=\"componentSelect = 'OneReservationComponent'\"\r\n              :style=\"componentSelect === 'OneReservationComponent' ? 'background-color: #55acee' : ''\">6. Reservation\r\n      </button>\r\n      <button @click=\"componentSelect = 'OneRentalSystemComponent'\"\r\n              :style=\"componentSelect === 'OneRentalSystemComponent' ? 'background-color: #55acee' : ''\">7. Rental System\r\n      </button>\r\n      <button @click=\"componentSelect = 'TwoTestDriverComponent'\"\r\n              :style=\"componentSelect === 'TwoTestDriverComponent' ? 'background-color: #55acee' : ''\">8. Test Driver\r\n      </button>\r\n      <button @click=\"componentSelect = 'OneClassComponent'\"\r\n              :style=\"componentSelect === 'OneClassComponent' ? 'background-color: #55acee' : ''\">9. Class Diagram\r\n      </button>\r\n\r\n    </div>\r\n\r\n    <KeepAlive>\r\n      <component\r\n          @instructions-read=\"instructionsReadCallback\"\r\n          @test-driver=\"testDriverCompleteCallback\"\r\n          v-bind:is=\"componentSelect\"\r\n      />\r\n    </KeepAlive>\r\n  </main>\r\n  <footer v-show=\"testDriverComplete\">\r\n    <div id=\"buttons\" class=\"relative\">\r\n      <button class=\"navitem\" @click=\"$router.push('/screen-three')\">Next</button>\r\n    </div>\r\n  </footer>\r\n</template>\r\n\r\n<style>\r\n.app {\r\n  background-color: #f9fafe;\r\n  min-height: 1024px;\r\n}\r\n\r\nbutton {\r\n  margin-top: 30px;\r\n  border: none;\r\n  padding: 20px;\r\n  margin-left: 5px;\r\n  background-color: #2c3e50;\r\n  color: white;\r\n  width: 500px;\r\n}\r\n\r\nbutton:first-of-type {\r\n  margin-left: 30px;\r\n}\r\n\r\n.buttons {\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: nowrap;\r\n  justify-content: center;\r\n  margin-top: 0;\r\n}\r\n</style>\r\n ","<!--Designed & Developed by:\r\n  Nirmal K (@cyberwizard1001)⁶\r\n  Nitin Ravi (@nitinravi)\r\n  Ritwik M (@ritwik-m) &\r\n  Nalinadevi K (@knaldev)\r\nfor the Ministry of Education (MOE) virtual-labs project, Govt. Of India -->\r\n\r\n<script>\r\nexport default {\r\n  methods: {\r\n    correct1() {\r\n      var x = document.getElementById(\"snackbar\");\r\n      x.innerHTML = \"Correct\";\r\n      x.style.backgroundColor = \"green\";\r\n      x.className = \"show\";\r\n      setTimeout(function () {\r\n        x.className = x.className.replace(\"show\", \"\");\r\n      }, 3000)\r\n    },\r\n    incorrect() {\r\n      var x = document.getElementById(\"snackbar\");\r\n      x.innerHTML = \"Incorrect. Try again\";\r\n      x.style.backgroundColor = \"red\";\r\n      x.className = \"show\";\r\n      setTimeout(function () {\r\n        x.className = x.className.replace(\"show\", \"\");\r\n      }, 3000)\r\n    },\r\n    validate_one() {\r\n      console.log(this.one, this.two);\r\n      if (this.one == \"Person\" && this.two == \"ArrayList\") {\r\n        this.correct1();\r\n        this.display[0] = \"none\";\r\n        this.display[1] = \"block\";\r\n      } else {\r\n        this.incorrect();\r\n      }\r\n    },\r\n\r\n    validate_two() {\r\n      if (this.three == \"add\" && this.four == \"Clerk\") {\r\n        this.correct1();\r\n        this.display[1] = \"none\";\r\n        this.display[2] = \"block\";\r\n      } else {\r\n        this.incorrect();\r\n      }\r\n    },\r\n\r\n    validate_three() {\r\n      if (this.five == \"add\" && this.six == \"Customer\") {\r\n        this.correct1();\r\n        this.display[2] = \"none\";\r\n        this.display[3] = \"block\";\r\n      } else {\r\n        this.incorrect();\r\n      }\r\n    },\r\n    validate_four() {\r\n      if (this.a == \"Customer\" && this.b == \"ArrayList\") {\r\n        this.correct1();\r\n        this.display[3] = \"none\";\r\n        this.display[4] = \"block\";\r\n\r\n      } else {\r\n        this.incorrect();\r\n      }\r\n\r\n    },\r\n    validate_free() {\r\n      if (1 == 1) {\r\n        this.correct1();\r\n        this.display[4] = \"none\";\r\n        this.display[5] = \"block\";\r\n\r\n      } else {\r\n        this.incorrect();\r\n      }\r\n\r\n    },\r\n    validate_free2() {\r\n      if (1 == 1) {\r\n        this.correct1();\r\n        this.display[5] = \"none\";\r\n        this.display[6] = \"block\";\r\n\r\n      } else {\r\n        this.incorrect();\r\n      }\r\n\r\n    },\r\n    validate_free3() {\r\n      if (1 == 1) {\r\n        this.correct1();\r\n        this.display[6] = \"none\";\r\n        this.display[7] = \"block\";\r\n\r\n      } else {\r\n        this.incorrect();\r\n      }\r\n\r\n    },\r\n    validate_five() {\r\n      if (this.seven == \"pobj\" && this.eight == \"0\") {\r\n        this.correct1();\r\n        this.display[7] = \"none\";\r\n        this.display[8] = \"block\";\r\n\r\n      } else {\r\n        this.incorrect();\r\n      }\r\n\r\n    },\r\n    validate_free4() {\r\n      if (1 == 1) {\r\n        this.correct1();\r\n        this.display[8] = \"none\";\r\n        this.display[9] = \"block\";\r\n\r\n      } else {\r\n        this.incorrect();\r\n      }\r\n\r\n    },\r\n    validate_six() {\r\n      if (this.nine == \"Clerk\" && this.ten == \"pobj\") {\r\n        this.correct1();\r\n        this.display[9] = \"none\";\r\n        this.display[10] = \"block\";\r\n\r\n      } else {\r\n        this.incorrect();\r\n      }\r\n\r\n    },\r\n    validate_free5() {\r\n      if (1 == 1) {\r\n        this.correct1();\r\n        this.display[10] = \"none\";\r\n        this.display[11] = \"block\";\r\n\r\n      } else {\r\n        this.incorrect();\r\n      }\r\n\r\n    },\r\n    validate_seven() {\r\n      if (this.eleven == \"Clerk\" && this.twelve == \"pobj\" && this.thirteen == \"1\") {\r\n        this.correct1();\r\n        this.display[11] = \"none\";\r\n        this.display[12] = \"block\";\r\n\r\n      } else {\r\n        this.incorrect();\r\n      }\r\n    },\r\n    validate_free6() {\r\n      if (1 == 1) {\r\n        this.correct1();\r\n        this.display[12] = \"none\";\r\n        this.display[13] = \"block\";\r\n\r\n      } else {\r\n        this.incorrect();\r\n      }\r\n\r\n    },\r\n    validate_eight() {\r\n      if (this.fourteen == \"ClassCastException\" && this.fifteen == \"instanceof\") {\r\n        this.correct1();\r\n        this.display[13] = \"none\";\r\n        this.display[14] = \"block\";\r\n\r\n      } else {\r\n        this.incorrect();\r\n      }\r\n    },\r\n\r\n    validate_nine() {\r\n      if (this.sixteen == \"NullPointerException\") {\r\n        this.correct1();\r\n        this.display[14] = \"none\";\r\n        this.display[15] = \"block\";\r\n        this.$emit('testDriver', true);\r\n      } else {\r\n        this.incorrect();\r\n      }\r\n    },\r\n  },\r\n\r\n\r\n  data() {\r\n    return {\r\n      id: 'container',\r\n      class: 'wrapper',\r\n      button_value: 'Next',\r\n      button_text: \"Incorrect. Try again\",\r\n      button_text_right: \"Correct. Next\",\r\n      correct: false,\r\n      valid: [false, false, false, false, false, false, false],\r\n      display: [\"block\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\", \"none\",\"none\", \"none\", \"none\", \"none\", \"none\", \"none\"]\r\n    }\r\n  }\r\n\r\n}\r\n\r\n</script>\r\n<template>\r\n  <main class=\"app\">\r\n    <div id=\"snackbar\">Some text some message..</div>\r\n\r\n    <div class=\"column\" style=\"position:fixed; top: 22%; left: 65%; bottom: 10%\">\r\n      <div class=\"column\">\r\n        <div class=\"codebox\">\r\n          <h5>Test Driver: </h5>\r\n          <ul style=\"line-height: 125%;\">\r\n            <li :class=\"{ completed: valid[0] }\">Create a person object and initialize with a customer and clerk object.\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n\r\n      <div class=\"column\">\r\n        <h1 style=\"padding: 25px; padding-bottom: 0px;\">Enter your code here .</h1>\r\n        <p style=\"padding: 25px; padding-top: 0px\">Follow instructions provided in the comments</p>\r\n\r\n        <div class=\"codebox\" id=\"codebox\" :style=\"{ display: display[0] }\">\r\n          <pre>\r\nimport java.util.Scanner;\r\nimport java.util.ArrayList;\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.Date;\r\nimport java.lang.*;\r\n\r\npublic class TestDriver {\r\n\t\r\n\tpublic static void main(String[] args) throws ParseException {\r\n\t\t\r\n\t\tRentalSystem rentalSystem = new RentalSystem();\r\n\r\n</pre>\r\n          &emsp;&emsp;&emsp;ArrayList&lt;<input spellcheck=\"false\" id=\"one\" v-model=\"one\" maxlength=\"6\"\r\n                                                style=\"width: 80px\">&gt; pobj = new <input spellcheck=\"false\" id=\"two\"\r\n                                                                                           v-model=\"two\" maxlength=\"9\"\r\n                                                                                           style=\"width: 100px\"> &lt;&gt;();\r\n          <p id=\"comment\">//Create an arraylist of type person</p><br>\r\n          } <br>\r\n          <button class=\"button-9\" id=\"btn1\" @click=\"validate_one()\"> {{ button_value }}</button>\r\n        </div>\r\n\r\n        <div class=\"codebox\" id=\"codebox\" :style=\"{ display: display[1] }\">\r\n          <pre>\r\nimport java.util.Scanner;\r\nimport java.util.ArrayList;\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.Date;\r\nimport java.lang.*;\r\n\r\npublic class TestDriver {\r\n\t\r\n\tpublic static void main(String[] args) throws ParseException {\r\n\t\t\r\n\t\tRentalSystem rentalSystem = new RentalSystem();\r\n   \r\n               ArrayList&lt;Person&gt; pobj= new ArrayList&lt;&gt;();\r\n\r\n</pre>\r\n          &emsp;&emsp;&emsp;pobj.<input spellcheck=\"false\" id=\"three\" v-model=\"three\" maxlength=\"3\"\r\n                                        style=\"width: 50px\">(new <input spellcheck=\"false\" id=\"four\" v-model=\"four\"\r\n                                                                        maxlength=\"5\"\r\n                                                                        style=\"width: 80px\">(\"EFG\", \"efg@gmail.com\"));\r\n          <p id=\"comment\">//Populate the ArrayList with an object of type Clerk</p><br>\r\n          } <br>\r\n          <button class=\"button-9\" id=\"btn1\" @click=\"validate_two()\"> {{ button_value }}</button>\r\n        </div>\r\n\r\n        <div class=\"codebox\" id=\"codebox\" :style=\"{ display: display[2] }\">\r\n          <pre>\r\nimport java.util.Scanner;\r\nimport java.util.ArrayList;\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.Date;\r\nimport java.lang.*;\r\n\r\npublic class TestDriver {\r\n\t\r\n\tpublic static void main(String[] args) throws ParseException {\r\n\t\t\r\n\t\tRentalSystem rentalSystem = new RentalSystem();\r\n   \r\n               ArrayList&lt;Person&gt; pobj= new ArrayList&lt;&gt;();\r\n               pobj.add(new Clerk(\"EFG\", \"efg@gmail.com\"));\r\n\r\n</pre>\r\n          &emsp;&emsp;&emsp;pobj.<input spellcheck=\"false\" id=\"five\" v-model=\"five\" maxlength=\"3\"\r\n                                        style=\"width: 50px\">(new <input spellcheck=\"false\" id=\"six\" v-model=\"six\"\r\n                                                                        maxlength=\"8\"\r\n                                                                        style=\"width: 100px\">(\"ABC\", \"abc@gmail.com\"));\r\n          <p id=\"comment\">//Populate the ArrayList with an object of type Customer</p><br>\r\n          } <br>\r\n          <button class=\"button-9\" id=\"btn1\" @click=\"validate_three()\"> {{ button_value }}</button>\r\n        </div>\r\n\r\n        <div class=\"codebox\" id=\"codebox\" :style=\"{ display: display[3] }\">\r\n          <pre>\r\nimport java.util.Scanner;\r\nimport java.util.ArrayList;\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.Date;\r\nimport java.lang.*;\r\n\r\npublic class TestDriver {\r\n\t\r\n\tpublic static void main(String[] args) throws ParseException {\r\n\t\t\r\n\t  RentalSystem rentalSystem = new RentalSystem();\r\n   \r\n         ArrayList&lt;Person&gt; pobj= new ArrayList&lt;&gt;();\r\n         pobj.add(new Clerk(\"EFG\", \"efg@gmail.com\"));\r\n         pobj.add(new Customer(\"ABC\", \"abc@gmail.com\"));\r\n         pobj.add(new Customer(\"DEF\", 8654678976L));\r\n         pobj.add(new Customer(\"GHI\", \"ghi@gmail.com\", 1234567890L));\r\n         System.out.println(\"list of Person: [\");\r\n         displayAll(pobj);\r\n         System.out.println(\"]\");\r\n</pre>\r\n          &emsp;&emsp;&emsp;ArrayList&lt;<input spellcheck=\"false\" id=\"seven\" v-model=\"a\" maxlength=\"8\"\r\n                                                style=\"width: 90px\">&gt; pobj1 = new <input spellcheck=\"false\" id=\"two\"\r\n                                                                                            v-model=\"b\" maxlength=\"9\"\r\n                                                                                            style=\"width: 100px\"> &lt;&gt;();\r\n          <p id=\"comment\">//Create an arraylist of type Customer with object name \"pobj1\"</p><br>\r\n          } <br>\r\n          <button class=\"button-9\" id=\"btn1\" @click=\"validate_four()\"> {{ button_value }}</button>\r\n        </div>\r\n\r\n        <div class=\"codebox\" id=\"codebox\" :style=\"{ display: display[4] }\">\r\n          <pre>\r\nimport java.util.Scanner;\r\nimport java.util.ArrayList;\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.Date;\r\nimport java.lang.*;\r\n\r\npublic class TestDriver {\r\n\t\r\n\tpublic static void main(String[] args) throws ParseException {\r\n\t\t\r\n\t  RentalSystem rentalSystem = new RentalSystem();\r\n   \r\n         ArrayList&lt;Person&gt; pobj= new ArrayList&lt;&gt;();\r\n         pobj.add(new Clerk(\"EFG\", \"efg@gmail.com\"));\r\n         pobj.add(new Customer(\"ABC\", \"abc@gmail.com\"));\r\n         pobj.add(new Customer(\"DEF\", 8654678976L));\r\n         pobj.add(new Customer(\"GHI\", \"ghi@gmail.com\", 1234567890L));\r\n\r\n         ArrayList&lt;Customer&gt; pobj1= new ArrayList&lt;&gt;();\r\n         pobj1.add(new Customer(\"ABC\", \"abc@gmail.com\"));\r\n         pobj1.add(new Customer(\"DEF\", 8654678976L));\r\n         pobj1.add(new Customer(\"GHI\", \"ghi@gmail.com\", 1234567890L));\r\n         System.out.println(\"list of Customer: [\");\r\n         displayAll(pobj1);\r\n         System.out.println(\"]\");\r\n\r\n         ArrayList&lt;Clerk&gt; pobj2= new ArrayList&lt;&gt;();\r\n         pobj2.add(new Clerk(\"ABC1\", \"abc1@gmail.com\"));\r\n         pobj2.add(new Clerk(\"DEF1\", 8654678976L));\r\n         pobj2.add(new Clerk(\"GHI1\", \"ghi1@gmail.com\", 1234567890L));\r\n         System.out.println(\"list of Clerk: [\");\r\n         displayAll(pobj2);\r\n         System.out.println(\"]\");\r\n</pre>\r\n          <p id=\"comment\">//Similarly Clerk type ArrayList is created and populated</p><br>\r\n          } <br>\r\n          <button class=\"button-9\" id=\"btn1\" @click=\"validate_free()\"> {{ button_value }}</button>\r\n        </div>\r\n\r\n        <div class=\"codebox\" id=\"codebox\" :style=\"{ display: display[5] }\">\r\n          <pre>\r\nimport java.util.Scanner;\r\nimport java.util.ArrayList;\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.Date;\r\nimport java.lang.*;\r\n\r\npublic class TestDriver {\r\n\t\r\n\tpublic static void main(String[] args) throws ParseException {\r\n\t\t// TODO Auto-generated method stub\r\n\t\t\r\n\t\tRentalSystem rentalSystem = new RentalSystem();\r\n\t\t\r\n\t\t//step:1 create a person object and initialize with a customer and clerk object\r\n\t\tArrayList&lt;Person&gt; pobj= new ArrayList&lt;&gt;();\r\n\t\tpobj.add(new Clerk(\"EFG\", \"efg@gmail.com\"));\r\n\t\tpobj.add(new Customer(\"ABC\", \"abc@gmail.com\"));\r\n\t\tpobj.add(new Customer(\"DEF\", 8654678976L));\r\n\t\tpobj.add(new Customer(\"GHI\", \"ghi@gmail.com\", 1234567890L));\r\n\t\tSystem.out.println(\"list of Person: [\");\r\n\t\tdisplayAll(pobj);\r\n\t\tSystem.out.println(\"]\");\r\n\t\t\r\n\t\tArrayList&lt;Customer&gt; pobj1= new ArrayList&lt;&gt;();\r\n\t\tpobj1.add(new Customer(\"ABC\", \"abc@gmail.com\"));\r\n\t\tpobj1.add(new Customer(\"DEF\", 8654678976L));\r\n\t\tpobj1.add(new Customer(\"GHI\", \"ghi@gmail.com\", 1234567890L));\r\n\t\tSystem.out.println(\"list of Customer: [\");\r\n\t\tdisplayAll(pobj1);\r\n\t\tSystem.out.println(\"]\");\r\n\t\t\r\n\t\tArrayList&lt;Clerk&gt; pobj2= new ArrayList&lt;&gt;();\r\n\t\tpobj2.add(new Clerk(\"ABC1\", \"abc1@gmail.com\"));\r\n\t\tpobj2.add(new Clerk(\"DEF1\", 8654678976L));\r\n\t\tpobj2.add(new Clerk(\"GHI1\", \"ghi1@gmail.com\", 1234567890L));\r\n\t\tSystem.out.println(\"list of Clerk: [\");\r\n\t\tdisplayAll(pobj2);\r\n\t\tSystem.out.println(\"]\");\r\n\t\t\r\n\t\tSystem.out.println(\"Count of persons with Email : \" +countPersonWithEmail(pobj));\r\n\t\tSystem.out.println(\"Count of persons with Phone : \" +countPersonWithPhone(pobj));\r\n\t\tSystem.out.println(\"Count of Customer with Email : \" +countPersonWithEmail(pobj1));\r\n\t\tSystem.out.println(\"Count of Customer with Phone : \" +countPersonWithPhone(pobj1));\r\n\t\tSystem.out.println(\"Count of Clerk with Email : \" +countPersonWithEmail(pobj2));\r\n\t\tSystem.out.println(\"Count of Clerk with Phone : \" +countPersonWithPhone(pobj2));\r\n\t\t\r\n\t\tSystem.out.println(\"Count of Customers in the list : \" +countCustomer(pobj));\r\n\t\tSystem.out.println(\"Count of Customers in the list : \" +countCustomer(pobj1));\r\n</pre>\r\n          &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;<b style=\"font-size: small;\">System.out.println(\"Count of Customers in\r\n          the list : \" +countCustomer(pobj2));</b>\r\n          <div class=\"outbox\">\r\n            <p>ERROR</p>\r\n            <p>Compiler Error.</p>\r\n          </div>\r\n          <br>\r\n          } <br>\r\n          <button class=\"button-9\" id=\"btn1\" @click=\"validate_free2()\"> {{ button_value }}</button>\r\n        </div>\r\n\r\n        <div class=\"codebox\" id=\"codebox\" :style=\"{ display: display[6] }\">\r\n          <pre>\r\nimport java.util.Scanner;\r\nimport java.util.ArrayList;\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.Date;\r\nimport java.lang.*;\r\n\r\npublic class TestDriver {\r\n\t\r\n\tpublic static void main(String[] args) throws ParseException {\r\n\t\t// TODO Auto-generated method stub\r\n\t\t\r\n\t\tRentalSystem rentalSystem = new RentalSystem();\r\n\t\t\r\n\t\t//step:1 create a person object and initialize with a customer and clerk object\r\n\t\tArrayList&lt;Person&gt; pobj= new ArrayList&lt;&gt;();\r\n\t\tpobj.add(new Clerk(\"EFG\", \"efg@gmail.com\"));\r\n\t\tpobj.add(new Customer(\"ABC\", \"abc@gmail.com\"));\r\n\t\tpobj.add(new Customer(\"DEF\", 8654678976L));\r\n\t\tpobj.add(new Customer(\"GHI\", \"ghi@gmail.com\", 1234567890L));\r\n\t\tSystem.out.println(\"list of Person: [\");\r\n\t\tdisplayAll(pobj);\r\n\t\tSystem.out.println(\"]\");\r\n\t\t\r\n\t\tArrayList&lt;Customer&gt; pobj1= new ArrayList&lt;&gt;();\r\n\t\tpobj1.add(new Customer(\"ABC\", \"abc@gmail.com\"));\r\n\t\tpobj1.add(new Customer(\"DEF\", 8654678976L));\r\n\t\tpobj1.add(new Customer(\"GHI\", \"ghi@gmail.com\", 1234567890L));\r\n\t\tSystem.out.println(\"list of Customer: [\");\r\n\t\tdisplayAll(pobj1);\r\n\t\tSystem.out.println(\"]\");\r\n\t\t\r\n\t\tArrayList&lt;Clerk&gt; pobj2= new ArrayList&lt;&gt;();\r\n\t\tpobj2.add(new Clerk(\"ABC1\", \"abc1@gmail.com\"));\r\n\t\tpobj2.add(new Clerk(\"DEF1\", 8654678976L));\r\n\t\tpobj2.add(new Clerk(\"GHI1\", \"ghi1@gmail.com\", 1234567890L));\r\n\t\tSystem.out.println(\"list of Clerk: [\");\r\n\t\tdisplayAll(pobj2);\r\n\t\tSystem.out.println(\"]\");\r\n\t\t\r\n\t\tSystem.out.println(\"Count of persons with Email : \" +countPersonWithEmail(pobj));\r\n\t\tSystem.out.println(\"Count of persons with Phone : \" +countPersonWithPhone(pobj));\r\n\t\tSystem.out.println(\"Count of Customer with Email : \" +countPersonWithEmail(pobj1));\r\n\t\tSystem.out.println(\"Count of Customer with Phone : \" +countPersonWithPhone(pobj1));\r\n\t\tSystem.out.println(\"Count of Clerk with Email : \" +countPersonWithEmail(pobj2));\r\n\t\tSystem.out.println(\"Count of Clerk with Phone : \" +countPersonWithPhone(pobj2));\r\n\t\t\r\n\t\tSystem.out.println(\"Count of Customers in the list : \" +countCustomer(pobj));\r\n\t\tSystem.out.println(\"Count of Customers in the list : \" +countCustomer(pobj1));\r\n\t\t//System.out.println(\"Count of Customers in the list : \" +countCustomer(pobj2));\r\n\t\tSystem.out.println(\"Count of Clerks in the list : \" +countClerk(pobj));\r\n\r\n</pre>\r\n          &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;<b style=\"font-size: small;\">System.out.println(\"Count of Clerks in\r\n          the\r\n          list : \" +countClerk(pobj1));</b>\r\n          <div class=\"outbox\">\r\n            <p>ERROR</p>\r\n            <p>Compiler Error.</p>\r\n          </div>\r\n          &emsp;&emsp;&emsp;<pre>\r\n                System.out.println(\"Count of Clerks in the list : \" +countClerk(pobj2));\r\n   </pre>\r\n          } <br>\r\n          <button class=\"button-9\" id=\"btn1\" @click=\"validate_free3()\"> {{ button_value }}</button>\r\n        </div>\r\n\r\n        <div class=\"codebox\" id=\"codebox\" :style=\"{ display: display[7] }\">\r\n          <pre>\r\nimport java.util.Scanner;\r\nimport java.util.ArrayList;\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.Date;\r\nimport java.lang.*;\r\n\r\npublic class TestDriver {\r\n\t\r\n\tpublic static void main(String[] args) throws ParseException {\r\n\t\t// TODO Auto-generated method stub\r\n\t\t\r\n\t\tRentalSystem rentalSystem = new RentalSystem();\r\n\t\t\r\n\t\t//step:1 create a person object and initialize with a customer and clerk object\r\n\t\tArrayList&lt;Person&gt; pobj= new ArrayList&lt;&gt;();\r\n\t\tpobj.add(new Clerk(\"EFG\", \"efg@gmail.com\"));\r\n\t\tpobj.add(new Customer(\"ABC\", \"abc@gmail.com\"));\r\n\t\tpobj.add(new Customer(\"DEF\", 8654678976L));\r\n\t\tpobj.add(new Customer(\"GHI\", \"ghi@gmail.com\", 1234567890L));\r\n\t\tSystem.out.println(\"list of Person: [\");\r\n\t\tdisplayAll(pobj);\r\n\t\tSystem.out.println(\"]\");\r\n\t\t\r\n\t\tArrayList&lt;Customer&gt; pobj1= new ArrayList&lt;&gt;();\r\n\t\tpobj1.add(new Customer(\"ABC\", \"abc@gmail.com\"));\r\n\t\tpobj1.add(new Customer(\"DEF\", 8654678976L));\r\n\t\tpobj1.add(new Customer(\"GHI\", \"ghi@gmail.com\", 1234567890L));\r\n\t\tSystem.out.println(\"list of Customer: [\");\r\n\t\tdisplayAll(pobj1);\r\n\t\tSystem.out.println(\"]\");\r\n\t\t\r\n\t\tArrayList&lt;Clerk&gt; pobj2= new ArrayList&lt;&gt;();\r\n\t\tpobj2.add(new Clerk(\"ABC1\", \"abc1@gmail.com\"));\r\n\t\tpobj2.add(new Clerk(\"DEF1\", 8654678976L));\r\n\t\tpobj2.add(new Clerk(\"GHI1\", \"ghi1@gmail.com\", 1234567890L));\r\n\t\tSystem.out.println(\"list of Clerk: [\");\r\n\t\tdisplayAll(pobj2);\r\n\t\tSystem.out.println(\"]\");\r\n\t\t\r\n\t\tSystem.out.println(\"Count of persons with Email : \" +countPersonWithEmail(pobj));\r\n\t\tSystem.out.println(\"Count of persons with Phone : \" +countPersonWithPhone(pobj));\r\n\t\tSystem.out.println(\"Count of Customer with Email : \" +countPersonWithEmail(pobj1));\r\n\t\tSystem.out.println(\"Count of Customer with Phone : \" +countPersonWithPhone(pobj1));\r\n\t\tSystem.out.println(\"Count of Clerk with Email : \" +countPersonWithEmail(pobj2));\r\n\t\tSystem.out.println(\"Count of Clerk with Phone : \" +countPersonWithPhone(pobj2));\r\n\t\t\r\n\t\tSystem.out.println(\"Count of Customers in the list : \" +countCustomer(pobj));\r\n\t\tSystem.out.println(\"Count of Customers in the list : \" +countCustomer(pobj1));\r\n\t\t//System.out.println(\"Count of Customers in the list : \" +countCustomer(pobj2));//compiler error\r\n\t\t\r\n\t\tSystem.out.println(\"Count of Clerks in the list : \" +countClerk(pobj));\r\n\t\t//System.out.println(\"Count of Clerks in the list : \" +countClerk(pobj1)); //compiler error\r\n\t\tSystem.out.println(\"Count of Clerks in the list : \" +countClerk(pobj2));\r\n\t\t\r\n\t\trentalSystem.clerkobj=new Clerk[1];\t\r\n</pre>\r\n          <br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;rentalSystem.clerkobj[0]=\r\n          <input spellcheck=\"false\" maxlength=\"4\" v-model=\"seven\" style=\"width: 50px;\">.get(\r\n          <input spellcheck=\"false\" maxlength=\"1\" v-model=\"eight\" style=\"width: 15px; padding: 2px;\">\r\n          );\r\n          <p id=\"comment\">//Initialize the clerk object with pobj[0] and check</p><br>\r\n          } <br>\r\n          <button class=\"button-9\" id=\"btn1\" @click=\"validate_five()\"> {{ button_value }}</button>\r\n        </div>\r\n\r\n        <div class=\"codebox\" id=\"codebox\" :style=\"{ display: display[8] }\">\r\n          <pre>\r\nimport java.util.Scanner;\r\nimport java.util.ArrayList;\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.Date;\r\nimport java.lang.*;\r\n\r\npublic class TestDriver {\r\n\t\r\n\tpublic static void main(String[] args) throws ParseException {\r\n\t\t// TODO Auto-generated method stub\r\n\t\t\r\n\t\tRentalSystem rentalSystem = new RentalSystem();\r\n\t\t\r\n\t\t//step:1 create a person object and initialize with a customer and clerk object\r\n\t\tArrayList&lt;Person&gt; pobj= new ArrayList&lt;&gt;();\r\n\t\tpobj.add(new Clerk(\"EFG\", \"efg@gmail.com\"));\r\n\t\tpobj.add(new Customer(\"ABC\", \"abc@gmail.com\"));\r\n\t\tpobj.add(new Customer(\"DEF\", 8654678976L));\r\n\t\tpobj.add(new Customer(\"GHI\", \"ghi@gmail.com\", 1234567890L));\r\n\t\tSystem.out.println(\"list of Person: [\");\r\n\t\tdisplayAll(pobj);\r\n\t\tSystem.out.println(\"]\");\r\n\t\t\r\n\t\tArrayList&lt;Customer&gt; pobj1= new ArrayList&lt;&gt;();\r\n\t\tpobj1.add(new Customer(\"ABC\", \"abc@gmail.com\"));\r\n\t\tpobj1.add(new Customer(\"DEF\", 8654678976L));\r\n\t\tpobj1.add(new Customer(\"GHI\", \"ghi@gmail.com\", 1234567890L));\r\n\t\tSystem.out.println(\"list of Customer: [\");\r\n\t\tdisplayAll(pobj1);\r\n\t\tSystem.out.println(\"]\");\r\n\t\t\r\n\t\tArrayList&lt;Clerk&gt; pobj2= new ArrayList&lt;&gt;();\r\n\t\tpobj2.add(new Clerk(\"ABC1\", \"abc1@gmail.com\"));\r\n\t\tpobj2.add(new Clerk(\"DEF1\", 8654678976L));\r\n\t\tpobj2.add(new Clerk(\"GHI1\", \"ghi1@gmail.com\", 1234567890L));\r\n\t\tSystem.out.println(\"list of Clerk: [\");\r\n\t\tdisplayAll(pobj2);\r\n\t\tSystem.out.println(\"]\");\r\n\t\t\r\n\t\tSystem.out.println(\"Count of persons with Email : \" +countPersonWithEmail(pobj));\r\n\t\tSystem.out.println(\"Count of persons with Phone : \" +countPersonWithPhone(pobj));\r\n\t\tSystem.out.println(\"Count of Customer with Email : \" +countPersonWithEmail(pobj1));\r\n\t\tSystem.out.println(\"Count of Customer with Phone : \" +countPersonWithPhone(pobj1));\r\n\t\tSystem.out.println(\"Count of Clerk with Email : \" +countPersonWithEmail(pobj2));\r\n\t\tSystem.out.println(\"Count of Clerk with Phone : \" +countPersonWithPhone(pobj2));\r\n\t\t\r\n\t\tSystem.out.println(\"Count of Customers in the list : \" +countCustomer(pobj));\r\n\t\tSystem.out.println(\"Count of Customers in the list : \" +countCustomer(pobj1));\r\n\t\t//System.out.println(\"Count of Customers in the list : \" +countCustomer(pobj2));//compiler error\r\n\t\t\r\n\t\tSystem.out.println(\"Count of Clerks in the list : \" +countClerk(pobj));\r\n\t\t//System.out.println(\"Count of Clerks in the list : \" +countClerk(pobj1)); //compiler error\r\n\t\tSystem.out.println(\"Count of Clerks in the list : \" +countClerk(pobj2));\r\n\t\t\r\n\t\trentalSystem.clerkobj=new Clerk[1];\r\n\t\trentalSystem.clerkobj[0]=pobj.get(0);\r\n</pre>\r\n\r\n          } <br>\r\n          <div class=\"outbox\">\r\n            <p>ERROR</p>\r\n            <p>Type mismatch. An object of type Person cannot be saved in an array of type Clerk</p>\r\n          </div>\r\n          <button class=\"button-9\" id=\"btn1\" @click=\"validate_free4()\"> {{ button_value }}</button>\r\n        </div>\r\n\r\n        <div class=\"codebox\" id=\"codebox\" :style=\"{ display: display[9] }\">\r\n          <pre>\r\nimport java.util.Scanner;\r\nimport java.util.ArrayList;\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.Date;\r\nimport java.lang.*;\r\n\r\npublic class TestDriver {\r\n\t\r\n\tpublic static void main(String[] args) throws ParseException {\r\n\t\t// TODO Auto-generated method stub\r\n\t\t\r\n\t\tRentalSystem rentalSystem = new RentalSystem();\r\n\t\t\r\n\t\t//step:1 create a person object and initialize with a customer and clerk object\r\n\t\tArrayList&lt;Person&gt; pobj= new ArrayList&lt;&gt;();\r\n\t\tpobj.add(new Clerk(\"EFG\", \"efg@gmail.com\"));\r\n\t\tpobj.add(new Customer(\"ABC\", \"abc@gmail.com\"));\r\n\t\tpobj.add(new Customer(\"DEF\", 8654678976L));\r\n\t\tpobj.add(new Customer(\"GHI\", \"ghi@gmail.com\", 1234567890L));\r\n\t\tSystem.out.println(\"list of Person: [\");\r\n\t\tdisplayAll(pobj);\r\n\t\tSystem.out.println(\"]\");\r\n\t\t\r\n\t\tArrayList&lt;Customer&gt; pobj1= new ArrayList&lt;&gt;();\r\n\t\tpobj1.add(new Customer(\"ABC\", \"abc@gmail.com\"));\r\n\t\tpobj1.add(new Customer(\"DEF\", 8654678976L));\r\n\t\tpobj1.add(new Customer(\"GHI\", \"ghi@gmail.com\", 1234567890L));\r\n\t\tSystem.out.println(\"list of Customer: [\");\r\n\t\tdisplayAll(pobj1);\r\n\t\tSystem.out.println(\"]\");\r\n\t\t\r\n\t\tArrayList&lt;Clerk&gt; pobj2= new ArrayList&lt;&gt;();\r\n\t\tpobj2.add(new Clerk(\"ABC1\", \"abc1@gmail.com\"));\r\n\t\tpobj2.add(new Clerk(\"DEF1\", 8654678976L));\r\n\t\tpobj2.add(new Clerk(\"GHI1\", \"ghi1@gmail.com\", 1234567890L));\r\n\t\tSystem.out.println(\"list of Clerk: [\");\r\n\t\tdisplayAll(pobj2);\r\n\t\tSystem.out.println(\"]\");\r\n\t\t\r\n\t\tSystem.out.println(\"Count of persons with Email : \" +countPersonWithEmail(pobj));\r\n\t\tSystem.out.println(\"Count of persons with Phone : \" +countPersonWithPhone(pobj));\r\n\t\tSystem.out.println(\"Count of Customer with Email : \" +countPersonWithEmail(pobj1));\r\n\t\tSystem.out.println(\"Count of Customer with Phone : \" +countPersonWithPhone(pobj1));\r\n\t\tSystem.out.println(\"Count of Clerk with Email : \" +countPersonWithEmail(pobj2));\r\n\t\tSystem.out.println(\"Count of Clerk with Phone : \" +countPersonWithPhone(pobj2));\r\n\t\t\r\n\t\tSystem.out.println(\"Count of Customers in the list : \" +countCustomer(pobj));\r\n\t\tSystem.out.println(\"Count of Customers in the list : \" +countCustomer(pobj1));\r\n\t\t//System.out.println(\"Count of Customers in the list : \" +countCustomer(pobj2));//compiler error\r\n\t\t\r\n\t\tSystem.out.println(\"Count of Clerks in the list : \" +countClerk(pobj));\r\n\t\t//System.out.println(\"Count of Clerks in the list : \" +countClerk(pobj1)); //compiler error\r\n\t\tSystem.out.println(\"Count of Clerks in the list : \" +countClerk(pobj2));\r\n\t\t\r\n\t\trentalSystem.clerkobj=new Clerk[1];\t\t\r\n\t\t//rentalSystem.clerkobj[0]=pobj.get(0); //compiler error due to type mismatch\r\n</pre>\r\n          <br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;\r\n          rentalSystem.clerkobj[0]=(<input spellcheck=\"false\" maxlength=\"5\" v-model=\"nine\" style=\"width: 60px;\">)\r\n          <input spellcheck=\"false\" maxlength=\"4\" v-model=\"ten\" style=\"width: 50px;\">.get(0);\r\n          <p id=\"comment\">//Perform the same operation using typecasting to avoid errors</p><br>\r\n          } <br>\r\n          <button class=\"button-9\" id=\"btn1\" @click=\"validate_six()\"> {{ button_value }}</button>\r\n        </div>\r\n\r\n        <div class=\"codebox\" id=\"codebox\" :style=\"{ display: display[10] }\">\r\n          <pre>\r\nimport java.util.Scanner;\r\nimport java.util.ArrayList;\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.Date;\r\nimport java.lang.*;\r\n\r\npublic class TestDriver {\r\n\t\r\n\tpublic static void main(String[] args) throws ParseException {\r\n\t\t// TODO Auto-generated method stub\r\n\t\t\r\n\t\tRentalSystem rentalSystem = new RentalSystem();\r\n\t\t\r\n\t\t//step:1 create a person object and initialize with a customer and clerk object\r\n\t\tArrayList&lt;Person&gt; pobj= new ArrayList&lt;&gt;();\r\n\t\tpobj.add(new Clerk(\"EFG\", \"efg@gmail.com\"));\r\n\t\tpobj.add(new Customer(\"ABC\", \"abc@gmail.com\"));\r\n\t\tpobj.add(new Customer(\"DEF\", 8654678976L));\r\n\t\tpobj.add(new Customer(\"GHI\", \"ghi@gmail.com\", 1234567890L));\r\n\t\tSystem.out.println(\"list of Person: [\");\r\n\t\tdisplayAll(pobj);\r\n\t\tSystem.out.println(\"]\");\r\n\t\t\r\n\t\tArrayList&lt;Customer&gt; pobj1= new ArrayList&lt;&gt;();\r\n\t\tpobj1.add(new Customer(\"ABC\", \"abc@gmail.com\"));\r\n\t\tpobj1.add(new Customer(\"DEF\", 8654678976L));\r\n\t\tpobj1.add(new Customer(\"GHI\", \"ghi@gmail.com\", 1234567890L));\r\n\t\tSystem.out.println(\"list of Customer: [\");\r\n\t\tdisplayAll(pobj1);\r\n\t\tSystem.out.println(\"]\");\r\n\t\t\r\n\t\tArrayList&lt;Clerk&gt; pobj2= new ArrayList&lt;&gt;();\r\n\t\tpobj2.add(new Clerk(\"ABC1\", \"abc1@gmail.com\"));\r\n\t\tpobj2.add(new Clerk(\"DEF1\", 8654678976L));\r\n\t\tpobj2.add(new Clerk(\"GHI1\", \"ghi1@gmail.com\", 1234567890L));\r\n\t\tSystem.out.println(\"list of Clerk: [\");\r\n\t\tdisplayAll(pobj2);\r\n\t\tSystem.out.println(\"]\");\r\n\t\t\r\n\t\tSystem.out.println(\"Count of persons with Email : \" +countPersonWithEmail(pobj));\r\n\t\tSystem.out.println(\"Count of persons with Phone : \" +countPersonWithPhone(pobj));\r\n\t\tSystem.out.println(\"Count of Customer with Email : \" +countPersonWithEmail(pobj1));\r\n\t\tSystem.out.println(\"Count of Customer with Phone : \" +countPersonWithPhone(pobj1));\r\n\t\tSystem.out.println(\"Count of Clerk with Email : \" +countPersonWithEmail(pobj2));\r\n\t\tSystem.out.println(\"Count of Clerk with Phone : \" +countPersonWithPhone(pobj2));\r\n\t\t\r\n\t\tSystem.out.println(\"Count of Customers in the list : \" +countCustomer(pobj));\r\n\t\tSystem.out.println(\"Count of Customers in the list : \" +countCustomer(pobj1));\r\n\t\t//System.out.println(\"Count of Customers in the list : \" +countCustomer(pobj2));//compiler error\r\n\t\t\r\n\t\tSystem.out.println(\"Count of Clerks in the list : \" +countClerk(pobj));\r\n\t\t//System.out.println(\"Count of Clerks in the list : \" +countClerk(pobj1)); //compiler error\r\n\t\tSystem.out.println(\"Count of Clerks in the list : \" +countClerk(pobj2));\r\n    \r\n\t\trentalSystem.clerkobj=new Clerk[1];\t\t\r\n\t\t//rentalSystem.clerkobj[0]=pobj.get(0); //compiler error due to type mismatch\r\n\t\trentalSystem.clerkobj[0]=(Clerk)pobj.get(0);\r\n\t\t\r\n</pre>\r\n          <br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;\r\n          <div class=\"outbox no-error\">\r\n            <p>OUTPUT</p>\r\n            <p style=\"color: #fff;\">Vehicle is available, initiating contract..</p>\r\n            <p style=\"color: #fff;\">Reservation released</p>\r\n            <p style=\"color: #fff;\">Vehicle key handedover</p><br>\r\n            <p style=\"color: #fff;\">Process finished with exit code 0</p>\r\n          </div>\r\n          } <br>\r\n          <button class=\"button-9\" id=\"btn1\" @click=\"validate_free5()\"> {{ button_value }}</button>\r\n        </div>\r\n\r\n        <div class=\"codebox\" id=\"codebox\" :style=\"{ display: display[11] }\">\r\n          <pre>\r\nimport java.util.Scanner;\r\nimport java.util.ArrayList;\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.Date;\r\nimport java.lang.*;\r\n\r\npublic class TestDriver {\r\n\t\r\n\tpublic static void main(String[] args) throws ParseException {\r\n\t\t// TODO Auto-generated method stub\r\n\t\t\r\n\t\tRentalSystem rentalSystem = new RentalSystem();\r\n\t\t\r\n\t\t//step:1 create a person object and initialize with a customer and clerk object\r\n\t\tArrayList&lt;Person&gt; pobj= new ArrayList&lt;&gt;();\r\n\t\tpobj.add(new Clerk(\"EFG\", \"efg@gmail.com\"));\r\n\t\tpobj.add(new Customer(\"ABC\", \"abc@gmail.com\"));\r\n\t\tpobj.add(new Customer(\"DEF\", 8654678976L));\r\n\t\tpobj.add(new Customer(\"GHI\", \"ghi@gmail.com\", 1234567890L));\r\n\t\tSystem.out.println(\"list of Person: [\");\r\n\t\tdisplayAll(pobj);\r\n\t\tSystem.out.println(\"]\");\r\n\t\t\r\n\t\tArrayList&lt;Customer&gt; pobj1= new ArrayList&lt;&gt;();\r\n\t\tpobj1.add(new Customer(\"ABC\", \"abc@gmail.com\"));\r\n\t\tpobj1.add(new Customer(\"DEF\", 8654678976L));\r\n\t\tpobj1.add(new Customer(\"GHI\", \"ghi@gmail.com\", 1234567890L));\r\n\t\tSystem.out.println(\"list of Customer: [\");\r\n\t\tdisplayAll(pobj1);\r\n\t\tSystem.out.println(\"]\");\r\n\t\t\r\n\t\tArrayList&lt;Clerk&gt; pobj2= new ArrayList&lt;&gt;();\r\n\t\tpobj2.add(new Clerk(\"ABC1\", \"abc1@gmail.com\"));\r\n\t\tpobj2.add(new Clerk(\"DEF1\", 8654678976L));\r\n\t\tpobj2.add(new Clerk(\"GHI1\", \"ghi1@gmail.com\", 1234567890L));\r\n\t\tSystem.out.println(\"list of Clerk: [\");\r\n\t\tdisplayAll(pobj2);\r\n\t\tSystem.out.println(\"]\");\r\n\t\t\r\n\t\tSystem.out.println(\"Count of persons with Email : \" +countPersonWithEmail(pobj));\r\n\t\tSystem.out.println(\"Count of persons with Phone : \" +countPersonWithPhone(pobj));\r\n\t\tSystem.out.println(\"Count of Customer with Email : \" +countPersonWithEmail(pobj1));\r\n\t\tSystem.out.println(\"Count of Customer with Phone : \" +countPersonWithPhone(pobj1));\r\n\t\tSystem.out.println(\"Count of Clerk with Email : \" +countPersonWithEmail(pobj2));\r\n\t\tSystem.out.println(\"Count of Clerk with Phone : \" +countPersonWithPhone(pobj2));\r\n\t\t\r\n\t\tSystem.out.println(\"Count of Customers in the list : \" +countCustomer(pobj));\r\n\t\tSystem.out.println(\"Count of Customers in the list : \" +countCustomer(pobj1));\r\n\t\t//System.out.println(\"Count of Customers in the list : \" +countCustomer(pobj2));//compiler error\r\n\t\t\r\n\t\tSystem.out.println(\"Count of Clerks in the list : \" +countClerk(pobj));\r\n\t\t//System.out.println(\"Count of Clerks in the list : \" +countClerk(pobj1)); //compiler error\r\n\t\tSystem.out.println(\"Count of Clerks in the list : \" +countClerk(pobj2));\r\n    \r\n\t\trentalSystem.clerkobj=new Clerk[1];\t\t\r\n\t\t//rentalSystem.clerkobj[0]=pobj.get(0); //compiler error due to type mismatch\r\n\t\t//rentalSystem.clerkobj[0]=(Clerk)pobj.get(0); //no compiler error or runtime error\r\n\t\t\r\n\t\t//rentalSystem.clerkobj[0]=pobj.get(1); //compiler error due to type mismatch\r\n</pre>\r\n          <br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;\r\n          rentalSystem.clerkobj[0]=(<input spellcheck=\"false\" maxlength=\"5\" v-model=\"eleven\" style=\"width: 60px;\">)\r\n          <input spellcheck=\"false\" maxlength=\"4\" v-model=\"twelve\" style=\"width: 50px;\">.get(\r\n          <input spellcheck=\"false\" maxlength=\"1\" v-model=\"thirteen\" style=\"width:15px; padding: 2px;\">);\r\n          <p id=\"comment\">//Write code to run the last line using typecasting to avoid errors</p><br>\r\n          } <br>\r\n          <button class=\"button-9\" id=\"btn1\" @click=\"validate_seven()\"> {{ button_value }}</button>\r\n        </div>\r\n\r\n        <div class=\"codebox\" id=\"codebox\" :style=\"{ display: display[12] }\">\r\n          <pre>\r\nimport java.util.Scanner;\r\nimport java.util.ArrayList;\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.Date;\r\nimport java.lang.*;\r\n\r\npublic class TestDriver {\r\n\t\r\n\tpublic static void main(String[] args) throws ParseException {\r\n\t\t// TODO Auto-generated method stub\r\n\t\t\r\n\t\tRentalSystem rentalSystem = new RentalSystem();\r\n\t\t\r\n\t\t//step:1 create a person object and initialize with a customer and clerk object\r\n\t\tArrayList&lt;Person&gt; pobj= new ArrayList&lt;&gt;();\r\n\t\tpobj.add(new Clerk(\"EFG\", \"efg@gmail.com\"));\r\n\t\tpobj.add(new Customer(\"ABC\", \"abc@gmail.com\"));\r\n\t\tpobj.add(new Customer(\"DEF\", 8654678976L));\r\n\t\tpobj.add(new Customer(\"GHI\", \"ghi@gmail.com\", 1234567890L));\r\n\t\tSystem.out.println(\"list of Person: [\");\r\n\t\tdisplayAll(pobj);\r\n\t\tSystem.out.println(\"]\");\r\n\t\t\r\n\t\tArrayList&lt;Customer&gt; pobj1= new ArrayList&lt;&gt;();\r\n\t\tpobj1.add(new Customer(\"ABC\", \"abc@gmail.com\"));\r\n\t\tpobj1.add(new Customer(\"DEF\", 8654678976L));\r\n\t\tpobj1.add(new Customer(\"GHI\", \"ghi@gmail.com\", 1234567890L));\r\n\t\tSystem.out.println(\"list of Customer: [\");\r\n\t\tdisplayAll(pobj1);\r\n\t\tSystem.out.println(\"]\");\r\n\t\t\r\n\t\tArrayList&lt;Clerk&gt; pobj2= new ArrayList&lt;&gt;();\r\n\t\tpobj2.add(new Clerk(\"ABC1\", \"abc1@gmail.com\"));\r\n\t\tpobj2.add(new Clerk(\"DEF1\", 8654678976L));\r\n\t\tpobj2.add(new Clerk(\"GHI1\", \"ghi1@gmail.com\", 1234567890L));\r\n\t\tSystem.out.println(\"list of Clerk: [\");\r\n\t\tdisplayAll(pobj2);\r\n\t\tSystem.out.println(\"]\");\r\n\t\t\r\n\t\tSystem.out.println(\"Count of persons with Email : \" +countPersonWithEmail(pobj));\r\n\t\tSystem.out.println(\"Count of persons with Phone : \" +countPersonWithPhone(pobj));\r\n\t\tSystem.out.println(\"Count of Customer with Email : \" +countPersonWithEmail(pobj1));\r\n\t\tSystem.out.println(\"Count of Customer with Phone : \" +countPersonWithPhone(pobj1));\r\n\t\tSystem.out.println(\"Count of Clerk with Email : \" +countPersonWithEmail(pobj2));\r\n\t\tSystem.out.println(\"Count of Clerk with Phone : \" +countPersonWithPhone(pobj2));\r\n\t\t\r\n\t\tSystem.out.println(\"Count of Customers in the list : \" +countCustomer(pobj));\r\n\t\tSystem.out.println(\"Count of Customers in the list : \" +countCustomer(pobj1));\r\n\t\t//System.out.println(\"Count of Customers in the list : \" +countCustomer(pobj2));//compiler error\r\n\t\t\r\n\t\tSystem.out.println(\"Count of Clerks in the list : \" +countClerk(pobj));\r\n\t\t//System.out.println(\"Count of Clerks in the list : \" +countClerk(pobj1)); //compiler error\r\n\t\tSystem.out.println(\"Count of Clerks in the list : \" +countClerk(pobj2));\r\n    \r\n\t\trentalSystem.clerkobj=new Clerk[1];\t\t\r\n\t\t//rentalSystem.clerkobj[0]=pobj.get(0); //compiler error due to type mismatch\r\n\t\trentalSystem.clerkobj[0]=(Clerk)pobj.get(0); //no compiler error or runtime error\r\n\t\t\r\n\t\t//rentalSystem.clerkobj[0]=pobj.get(1); //compiler error due to type mismatch\r\n\t\trentalSystem.clerkobj[0]=(Clerk)pobj.get(1); //no compiler error\r\n\r\n</pre>\r\n          <div class=\"outbox\">\r\n            <p>ERROR</p>\r\n            <p>Runtime error\r\n              <br>Exception in thread \"main\" java.lang.ClassCastException: class Customer cannot be cast to class Clerk\r\n              (Customer and Clerk are in unnamed module of loader 'app') at TestDriver.main(TestDriver.java:23)</p>\r\n          </div>\r\n          <button class=\"button-9\" id=\"btn1\" @click=\"validate_free6()\"> {{ button_value }}</button>\r\n        </div>\r\n\r\n        <div class=\"codebox\" id=\"codebox\" :style=\"{ display: display[13] }\">\r\n          <pre>\r\nimport java.util.Scanner;\r\nimport java.util.ArrayList;\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.Date;\r\nimport java.lang.*;\r\n\r\npublic class TestDriver {\r\n\t\r\n\tpublic static void main(String[] args) throws ParseException {\r\n\t\t// TODO Auto-generated method stub\r\n\t\t\r\n\t\tRentalSystem rentalSystem = new RentalSystem();\r\n\t\t\r\n\t\t//step:1 create a person object and initialize with a customer and clerk object\r\n\t\tArrayList&lt;Person&gt; pobj= new ArrayList&lt;&gt;();\r\n\t\tpobj.add(new Clerk(\"EFG\", \"efg@gmail.com\"));\r\n\t\tpobj.add(new Customer(\"ABC\", \"abc@gmail.com\"));\r\n\t\tpobj.add(new Customer(\"DEF\", 8654678976L));\r\n\t\tpobj.add(new Customer(\"GHI\", \"ghi@gmail.com\", 1234567890L));\r\n\t\tSystem.out.println(\"list of Person: [\");\r\n\t\tdisplayAll(pobj);\r\n\t\tSystem.out.println(\"]\");\r\n\t\t\r\n\t\tArrayList&lt;Customer&gt; pobj1= new ArrayList&lt;&gt;();\r\n\t\tpobj1.add(new Customer(\"ABC\", \"abc@gmail.com\"));\r\n\t\tpobj1.add(new Customer(\"DEF\", 8654678976L));\r\n\t\tpobj1.add(new Customer(\"GHI\", \"ghi@gmail.com\", 1234567890L));\r\n\t\tSystem.out.println(\"list of Customer: [\");\r\n\t\tdisplayAll(pobj1);\r\n\t\tSystem.out.println(\"]\");\r\n\t\t\r\n\t\tArrayList&lt;Clerk&gt; pobj2= new ArrayList&lt;&gt;();\r\n\t\tpobj2.add(new Clerk(\"ABC1\", \"abc1@gmail.com\"));\r\n\t\tpobj2.add(new Clerk(\"DEF1\", 8654678976L));\r\n\t\tpobj2.add(new Clerk(\"GHI1\", \"ghi1@gmail.com\", 1234567890L));\r\n\t\tSystem.out.println(\"list of Clerk: [\");\r\n\t\tdisplayAll(pobj2);\r\n\t\tSystem.out.println(\"]\");\r\n\t\t\r\n\t\tSystem.out.println(\"Count of persons with Email : \" +countPersonWithEmail(pobj));\r\n\t\tSystem.out.println(\"Count of persons with Phone : \" +countPersonWithPhone(pobj));\r\n\t\tSystem.out.println(\"Count of Customer with Email : \" +countPersonWithEmail(pobj1));\r\n\t\tSystem.out.println(\"Count of Customer with Phone : \" +countPersonWithPhone(pobj1));\r\n\t\tSystem.out.println(\"Count of Clerk with Email : \" +countPersonWithEmail(pobj2));\r\n\t\tSystem.out.println(\"Count of Clerk with Phone : \" +countPersonWithPhone(pobj2));\r\n\t\t\r\n\t\tSystem.out.println(\"Count of Customers in the list : \" +countCustomer(pobj));\r\n\t\tSystem.out.println(\"Count of Customers in the list : \" +countCustomer(pobj1));\r\n\t\t//System.out.println(\"Count of Customers in the list : \" +countCustomer(pobj2));//compiler error\r\n\t\t\r\n\t\tSystem.out.println(\"Count of Clerks in the list : \" +countClerk(pobj));\r\n\t\t//System.out.println(\"Count of Clerks in the list : \" +countClerk(pobj1)); //compiler error\r\n\t\tSystem.out.println(\"Count of Clerks in the list : \" +countClerk(pobj2));\r\n    \r\n\t\trentalSystem.clerkobj=new Clerk[1];\t\t\r\n\t\t//rentalSystem.clerkobj[0]=pobj.get(0); //compiler error due to type mismatch\r\n\t\trentalSystem.clerkobj[0]=(Clerk)pobj.get(0); //no compiler error or runtime error\r\n\t\t\r\n\t\t//rentalSystem.clerkobj[0]=pobj.get(1); //compiler error due to type mismatch\r\n\t\trentalSystem.clerkobj[0]=(Clerk)pobj.get(1); //no compiler error\r\n\r\n    try\r\n\t\t{\r\n\t\t\trentalSystem.clerkobj[0]=(Clerk)pobj.get(1);\r\n\t\t}\r\n</pre>\r\n          <br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;\r\n          catch(<input spellcheck=\"false\" maxlength=\"18\" v-model=\"fourteen\" style=\"width: 145px;\"> e)\r\n          <br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;{\r\n          <br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;if(pobj.get(1)\r\n\r\n          <input spellcheck=\"false\" maxlength=\"10\" v-model=\"fifteen\" style=\"width: 90px;\"> Clerk)\r\n          <br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;rentalSystem.clerkobj[0] =(Clerk)\r\n          pobj.get(1);\r\n          <br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;}\r\n          <p id=\"comment\">//Resolve using try-catch block with exception that deals with class casting and instanceof\r\n            method </p><br>\r\n          } <br>\r\n          <button class=\"button-9\" id=\"btn1\" @click=\"validate_eight()\"> {{ button_value }}</button>\r\n        </div>\r\n\r\n        <div class=\"codebox\" id=\"codebox\" :style=\"{ display: display[14] }\">\r\n          <pre>\r\nimport java.util.Scanner;\r\nimport java.util.ArrayList;\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.Date;\r\nimport java.lang.*;\r\n\r\npublic class TestDriver {\r\n\t\r\n\tpublic static void main(String[] args) throws ParseException {\r\n\t\t// TODO Auto-generated method stub\r\n\t\t\r\n\t\tRentalSystem rentalSystem = new RentalSystem();\r\n\t\t\r\n\t\t//step:1 create a person object and initialize with a customer and clerk object\r\n\t\tArrayList&lt;Person&gt; pobj= new ArrayList&lt;&gt;();\r\n\t\tpobj.add(new Clerk(\"EFG\", \"efg@gmail.com\"));\r\n\t\tpobj.add(new Customer(\"ABC\", \"abc@gmail.com\"));\r\n\t\tpobj.add(new Customer(\"DEF\", 8654678976L));\r\n\t\tpobj.add(new Customer(\"GHI\", \"ghi@gmail.com\", 1234567890L));\r\n\t\tSystem.out.println(\"list of Person: [\");\r\n\t\tdisplayAll(pobj);\r\n\t\tSystem.out.println(\"]\");\r\n\t\t\r\n\t\tArrayList&lt;Customer&gt; pobj1= new ArrayList&lt;&gt;();\r\n\t\tpobj1.add(new Customer(\"ABC\", \"abc@gmail.com\"));\r\n\t\tpobj1.add(new Customer(\"DEF\", 8654678976L));\r\n\t\tpobj1.add(new Customer(\"GHI\", \"ghi@gmail.com\", 1234567890L));\r\n\t\tSystem.out.println(\"list of Customer: [\");\r\n\t\tdisplayAll(pobj1);\r\n\t\tSystem.out.println(\"]\");\r\n\t\t\r\n\t\tArrayList&lt;Clerk&gt; pobj2= new ArrayList&lt;&gt;();\r\n\t\tpobj2.add(new Clerk(\"ABC1\", \"abc1@gmail.com\"));\r\n\t\tpobj2.add(new Clerk(\"DEF1\", 8654678976L));\r\n\t\tpobj2.add(new Clerk(\"GHI1\", \"ghi1@gmail.com\", 1234567890L));\r\n\t\tSystem.out.println(\"list of Clerk: [\");\r\n\t\tdisplayAll(pobj2);\r\n\t\tSystem.out.println(\"]\");\r\n\t\t\r\n\t\tSystem.out.println(\"Count of persons with Email : \" +countPersonWithEmail(pobj));\r\n\t\tSystem.out.println(\"Count of persons with Phone : \" +countPersonWithPhone(pobj));\r\n\t\tSystem.out.println(\"Count of Customer with Email : \" +countPersonWithEmail(pobj1));\r\n\t\tSystem.out.println(\"Count of Customer with Phone : \" +countPersonWithPhone(pobj1));\r\n\t\tSystem.out.println(\"Count of Clerk with Email : \" +countPersonWithEmail(pobj2));\r\n\t\tSystem.out.println(\"Count of Clerk with Phone : \" +countPersonWithPhone(pobj2));\r\n\t\t\r\n\t\tSystem.out.println(\"Count of Customers in the list : \" +countCustomer(pobj));\r\n\t\tSystem.out.println(\"Count of Customers in the list : \" +countCustomer(pobj1));\r\n\t\t//System.out.println(\"Count of Customers in the list : \" +countCustomer(pobj2));//compiler error\r\n\t\t\r\n\t\tSystem.out.println(\"Count of Clerks in the list : \" +countClerk(pobj));\r\n\t\t//System.out.println(\"Count of Clerks in the list : \" +countClerk(pobj1)); //compiler error\r\n\t\tSystem.out.println(\"Count of Clerks in the list : \" +countClerk(pobj2));\r\n    \r\n\t\trentalSystem.clerkobj=new Clerk[1];\t\t\r\n\t\t//rentalSystem.clerkobj[0]=pobj.get(0); //compiler error due to type mismatch\r\n\t\t//rentalSystem.clerkobj[0]=(Clerk)pobj.get(0); //no compiler error or runtime error\r\n\t\t\r\n\t\t//rentalSystem.clerkobj[0]=pobj.get(1); //compiler error due to type mismatch\r\n    //rentalSystem.clerkobj[0]=(Clerk)pobj.get(1); //no compiler error\r\n    //run the code and check \r\n\t\t//the following runtime error appears\r\n\t\t//Exception in thread \"main\" java.lang.ClassCastException: class Customer cannot be cast to class Clerk\r\n    // (Customer and Clerk are in unnamed module of loader 'app')\r\n\t\t//at TestDriver.main(TestDriver.java:23)\r\n\r\n\r\n    try\r\n\t\t{\r\n\t\t\trentalSystem.clerkobj[0]=(Clerk)pobj.get(1);\r\n\t\t}\r\n\t\tcatch(ClassCastException e)\r\n\t\t{\r\n\t\t\tif(pobj.get(1) instanceof Clerk)\r\n\t\t\t\trentalSystem.clerkobj[0] =(Clerk) pobj.get(1);\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\trentalSystem.cobj= new Customer[3];\r\n\t\trentalSystem.cobj[0]=(Customer) pobj.get(1);\r\n\t\trentalSystem.cobj[1]=(Customer) pobj.get(2);\r\n\t\trentalSystem.cobj[2]=(Customer) pobj.get(3);\r\n\t\trentalSystem.cobj[0].setCity(\"Coimbatore\");\r\n\t\trentalSystem.cobj[1].setCity(\"Coimbatore\");\r\n\t\trentalSystem.cobj[2].setCity(\"Chennai\");\r\n\t\t\r\n\t\trentalSystem.vobj = new Vehicle[1];\r\n\t\trentalSystem.vobj[0]=new Vehicle(1234);\r\n\t\t\r\n\t\trentalSystem.robj=new Reservation[1];\r\n\t\trentalSystem.robj[0]= new Reservation(rentalSystem.cobj[0],rentalSystem.vobj[0]);\r\n\t\tSimpleDateFormat sdformat = new SimpleDateFormat(\"yyyy-MM-dd\");\r\n\t    Date d = sdformat.parse(\"2022-02-29\");\r\n\t\trentalSystem.robj[0].setBookingDate(d);\r\n\t\trentalSystem.robj[0].setContractStatus(\"Reservation not released\");\r\n\t\t\r\n\t\t//run this code and check the following error appears\r\n\t\t//Exception in thread \"main\" java.lang.NullPointerException: Cannot invoke \"Clerk.requestVehicle(Reservation)\" \r\n    //because \"cl\" is null\r\n\t\t//at RentalSystem.visitOffice(RentalSystem.java:18)\r\n\t\t//at TestDriver.main(TestDriver.java:62)\r\n    \r\n            try\r\n\t\t{\r\n\t\t\trentalSystem.visitOffice(rentalSystem.robj[0]);\r\n\t\t}\r\n</pre>\r\n          <br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;\r\n          catch(<input spellcheck=\"false\" maxlength=\"20\" v-model=\"sixteen\" style=\"width: 150px;\"> e)\r\n          <br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;{\r\n          <br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;System.out.println(\"wait for clerk to be assigned\");\r\n          <br>&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;}\r\n          <p id=\"comment\">//Resolve using a try-catch block to handle the NullPointerException </p><br>\r\n          } <br>\r\n          <button class=\"button-9\" id=\"btn1\" @click=\"validate_nine()\"> {{ button_value }}</button>\r\n        </div>\r\n\r\n        <div class=\"codebox\" id=\"codebox\" :style=\"{ display: display[15] }\">\r\n          <pre>\r\nimport java.util.Scanner;\r\nimport java.util.ArrayList;\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.Date;\r\nimport java.lang.*;\r\n\r\npublic class TestDriver {\r\n\t\r\n\tpublic static void main(String[] args) throws ParseException {\r\n\t\t// TODO Auto-generated method stub\r\n\t\t\r\n\t\tRentalSystem rentalSystem = new RentalSystem();\r\n\t\t\r\n\t\t//step:1 create a person object and initialize with a customer and clerk object\r\n\t\tArrayList&lt;Person&gt; pobj= new ArrayList&lt;&gt;();\r\n\t\tpobj.add(new Clerk(\"EFG\", \"efg@gmail.com\"));\r\n\t\tpobj.add(new Customer(\"ABC\", \"abc@gmail.com\"));\r\n\t\tpobj.add(new Customer(\"DEF\", 8654678976L));\r\n\t\tpobj.add(new Customer(\"GHI\", \"ghi@gmail.com\", 1234567890L));\r\n\t\tSystem.out.println(\"list of Person: [\");\r\n\t\tdisplayAll(pobj);\r\n\t\tSystem.out.println(\"]\");\r\n\t\t\r\n\t\tArrayList&lt;Customer&gt; pobj1= new ArrayList&lt;&gt;();\r\n\t\tpobj1.add(new Customer(\"ABC\", \"abc@gmail.com\"));\r\n\t\tpobj1.add(new Customer(\"DEF\", 8654678976L));\r\n\t\tpobj1.add(new Customer(\"GHI\", \"ghi@gmail.com\", 1234567890L));\r\n\t\tSystem.out.println(\"list of Customer: [\");\r\n\t\tdisplayAll(pobj1);\r\n\t\tSystem.out.println(\"]\");\r\n\t\t\r\n\t\tArrayList&lt;Clerk&gt; pobj2= new ArrayList&lt;&gt;();\r\n\t\tpobj2.add(new Clerk(\"ABC1\", \"abc1@gmail.com\"));\r\n\t\tpobj2.add(new Clerk(\"DEF1\", 8654678976L));\r\n\t\tpobj2.add(new Clerk(\"GHI1\", \"ghi1@gmail.com\", 1234567890L));\r\n\t\tSystem.out.println(\"list of Clerk: [\");\r\n\t\tdisplayAll(pobj2);\r\n\t\tSystem.out.println(\"]\");\r\n\t\t\r\n\t\tSystem.out.println(\"Count of persons with Email : \" +countPersonWithEmail(pobj));\r\n\t\tSystem.out.println(\"Count of persons with Phone : \" +countPersonWithPhone(pobj));\r\n\t\tSystem.out.println(\"Count of Customer with Email : \" +countPersonWithEmail(pobj1));\r\n\t\tSystem.out.println(\"Count of Customer with Phone : \" +countPersonWithPhone(pobj1));\r\n\t\tSystem.out.println(\"Count of Clerk with Email : \" +countPersonWithEmail(pobj2));\r\n\t\tSystem.out.println(\"Count of Clerk with Phone : \" +countPersonWithPhone(pobj2));\r\n\t\t\r\n\t\tSystem.out.println(\"Count of Customers in the list : \" +countCustomer(pobj));\r\n\t\tSystem.out.println(\"Count of Customers in the list : \" +countCustomer(pobj1));\r\n\t\t//System.out.println(\"Count of Customers in the list : \" +countCustomer(pobj2));//compiler error\r\n\t\t\r\n\t\tSystem.out.println(\"Count of Clerks in the list : \" +countClerk(pobj));\r\n\t\t//System.out.println(\"Count of Clerks in the list : \" +countClerk(pobj1)); //compiler error\r\n\t\tSystem.out.println(\"Count of Clerks in the list : \" +countClerk(pobj2));\r\n\t\t\r\n\t\trentalSystem.clerkobj=new Clerk[1];\t\t\r\n\t\t//step 2: initialize the clerk object with pobj[0] and check\r\n\t\t//rentalSystem.clerkobj[0]=pobj.get(0); //compiler error due to type mismatch\r\n\t\t//step 3: type cast\r\n\t\t//rentalSystem.clerkobj[0]=(Clerk)pobj.get(0); //no compiler error or runtime error\r\n\t\t\r\n\t\t//run the code and check to see the output\r\n\t\t//Vehicle is available, initiating contract..\r\n\t\t//Reservation released\r\n\t\t//Vehicle key handedover\r\n\t\t\r\n\t\t//step 4: initialize the clerk object with pobj[1] and check\r\n\t\t//rentalSystem.clerkobj[0]=pobj.get(1); //compiler error due to type mismatch\r\n\t\t//step 5: type cast to Clerk\r\n\t\t//rentalSystem.clerkobj[0]=(Clerk)pobj.get(1); //no compiler error\r\n\t\t\r\n\t\t//run the code and check \r\n\t\t//the following runtime error appears\r\n\t\t//Exception in thread \"main\" java.lang.ClassCastException: \r\n    //class Customer cannot be cast to class Clerk (Customer and Clerk are in unnamed module of loader 'app')\r\n\t\t//at TestDriver.main(TestDriver.java:23)\r\n\t\t\r\n\t\t//Step 6: resolve using try-catch block and instanceof method\t\r\n\t\ttry\r\n\t\t{\r\n\t\t\trentalSystem.clerkobj[0]=(Clerk)pobj.get(1);\r\n\t\t}\r\n\t\tcatch(ClassCastException e)\r\n\t\t{\r\n\t\t\tif(pobj.get(1) instanceof Clerk)\r\n\t\t\t\trentalSystem.clerkobj[0] =(Clerk) pobj.get(1);\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\trentalSystem.cobj= new Customer[3];\r\n\t\trentalSystem.cobj[0]=(Customer) pobj.get(1);\r\n\t\trentalSystem.cobj[1]=(Customer) pobj.get(2);\r\n\t\trentalSystem.cobj[2]=(Customer) pobj.get(3);\r\n\t\trentalSystem.cobj[0].setCity(\"Coimbatore\");\r\n\t\trentalSystem.cobj[1].setCity(\"Coimbatore\");\r\n\t\trentalSystem.cobj[2].setCity(\"Chennai\");\r\n\t\t\r\n\t\trentalSystem.vobj = new Vehicle[1];\r\n\t\trentalSystem.vobj[0]=new Vehicle(1234);\r\n\t\t\r\n\t\trentalSystem.robj=new Reservation[1];\r\n\t\trentalSystem.robj[0]= new Reservation(rentalSystem.cobj[0],rentalSystem.vobj[0]);\r\n\t\tSimpleDateFormat sdformat = new SimpleDateFormat(\"yyyy-MM-dd\");\r\n\t    Date d = sdformat.parse(\"2022-02-29\");\r\n\t\trentalSystem.robj[0].setBookingDate(d);\r\n\t\trentalSystem.robj[0].setContractStatus(\"Reservation not released\");\r\n\t\t\r\n\t\t//run this code and check the following error appears\r\n\t\t//Exception in thread \"main\" java.lang.NullPointerException: \r\n    //Cannot invoke \"Clerk.requestVehicle(Reservation)\" because \"cl\" is null\r\n\t\t//at RentalSystem.visitOffice(RentalSystem.java:18)\r\n\t\t//at TestDriver.main(TestDriver.java:62)\r\n\t\t\r\n\t\t//Step 7: resolve using a try-catch block to handle the NullPointerException\r\n\t\ttry\r\n\t\t{\r\n\t\t\trentalSystem.visitOffice(rentalSystem.robj[0]);\r\n\t\t}\r\n\t\tcatch(NullPointerException e)\r\n\t\t{\r\n\t\t\tSystem.out.println(\"wait for clerk to be assigned\");\r\n\t\t}\t\t\r\n\t}\t\r\n\t\r\n\tpublic static &lt;T extends Person&gt; int countPersonWithEmail(ArrayList&lt;T&gt; alist)\r\n\t{\r\n\t\tint count=0;\r\n\t\tfor(T a: alist)\r\n\t\t{\r\n\t\t\tif(a.getEmail()!=null)\r\n\t\t\t\tcount++;\r\n\t\t}\r\n\t\treturn count;\r\n\t}\t\r\n\t\r\n\tpublic static &lt;T extends Person&gt; int countPersonWithPhone(ArrayList&lt;T&gt; alist)\r\n\t{\r\n\t\tint count=0;\r\n\t\tfor(T a: alist)\r\n\t\t{\r\n\t\t\tif(a.getPhone()!=0L && a.getPhone()!=999999999L)\r\n\t\t\t\tcount++;\r\n\t\t}\r\n\t\treturn count;\r\n\t}\t\r\n\t\r\n\tpublic static int countCustomer(ArrayList&lt;? super Customer&gt; alist)\r\n\t{\r\n\t\tint count=0;\r\n\t\tfor(Object a: alist)\r\n\t\t{\r\n\t\t\tif(a instanceof Customer)\r\n\t\t\t\tcount++;\r\n\t\t}\r\n\t\treturn count;\r\n\t}\t\r\n\t\r\n\tpublic static int countClerk(ArrayList&lt;? super Clerk&gt; alist)\r\n\t{\r\n\t\tint count=0;\r\n\t\tfor(Object a: alist)\r\n\t\t{\r\n\t\t\tif(a instanceof Clerk)\r\n\t\t\t\tcount++;\r\n\t\t}\r\n\t\treturn count;\r\n\t}\t\r\n\t\r\n\tpublic static &lt;T extends Person&gt; void displayAll(ArrayList&lt;T&gt; alist)\r\n\t{\r\n\t\tfor(Object a: alist)\r\n\t\t{\r\n\t\t\tSystem.out.println(a.toString());\r\n\t\t}\r\n\t}\t\t\r\n}\r\n\r\n</pre>\r\n        </div>\r\n\r\n\r\n      </div>\r\n    </div>\r\n  </main>\r\n</template>\r\n\r\n<style scoped>\r\n* {\r\n  box-sizing: border-box;\r\n  background-color: #F9FAFE;\r\n}\r\n\r\nh1,\r\nh2,\r\np {\r\n  font-family: sans-serif;\r\n  color: rgb(0, 3, 40);\r\n}\r\n\r\n.column {\r\n  float: left;\r\n  width: 50%;\r\n}\r\n\r\n/* Clear floats after the columns */\r\n.row:after {\r\n  content: \"\";\r\n  display: table;\r\n  clear: both;\r\n}\r\n\r\n.completed {\r\n  color: cadetblue;\r\n  text-decoration: line-through;\r\n}\r\n\r\n\r\nmark1 {\r\n  background-color: rgb(176, 230, 183);\r\n  box-shadow: 1px 6px 15px 2px rgb(160, 222, 159);\r\n  color: black;\r\n  border-radius: 10px;\r\n  padding-left: 12px;\r\n  padding-right: 12px;\r\n  padding-top: 6px;\r\n  padding-bottom: 6px;\r\n}\r\n\r\nmark0 {\r\n  box-shadow: 1px 6px 15px 2px rgb(249, 255, 191);\r\n  background-color: rgb(231, 238, 162);\r\n  color: black;\r\n  border-radius: 10px;\r\n  padding-left: 12px;\r\n  padding-right: 12px;\r\n  padding-top: 6px;\r\n  padding-bottom: 6px;\r\n}\r\n\r\n#comment {\r\n  margin-left: 15px;\r\n  font-style: italic;\r\n  color: gray;\r\n  font-size: small;\r\n}\r\n\r\n\r\n.codebox {\r\n  height: 80%;\r\n  width: fit-content;\r\n  min-width: 90%;\r\n  margin: 25px;\r\n  padding: 25px;\r\n  border-radius: 10px;\r\n  background-color: #F9FAFE;\r\n  box-shadow: 2px 3px 10px 2px #D7DFFF;\r\n}\r\n\r\ninput {\r\n  border: 1px solid #ccc;\r\n  padding: 10px;\r\n  border-radius: 4px;\r\n  font-size: 14px;\r\n  background-color: white;\r\n  color: black;\r\n}\r\n\r\n/* CSS */\r\n.button-9 {\r\n  appearance: button;\r\n  backface-visibility: hidden;\r\n  background-color: #405cf5;\r\n  border-radius: 6px;\r\n  border-width: 0;\r\n  box-shadow: rgba(50, 50, 93, .1) 0 0 0 1px inset, rgba(50, 50, 93, .1) 0 2px 5px 0, rgba(0, 0, 0, .07) 0 1px 1px 0;\r\n  box-sizing: border-box;\r\n  color: #fff;\r\n  cursor: pointer;\r\n  font-family: -apple-system, system-ui, \"Segoe UI\", Roboto, \"Helvetica Neue\", Ubuntu, sans-serif;\r\n  font-size: 100%;\r\n  height: 44px;\r\n  line-height: 1.15;\r\n  margin: 12px 0 0;\r\n  outline: none;\r\n  overflow: hidden;\r\n  padding: 0 25px;\r\n  position: relative;\r\n  text-align: center;\r\n  text-transform: none;\r\n  transform: translateZ(0);\r\n  transition: all .2s, box-shadow .08s ease-in;\r\n  user-select: none;\r\n  -webkit-user-select: none;\r\n  touch-action: manipulation;\r\n  width: 200px;\r\n}\r\n\r\n.button-9:disabled {\r\n  cursor: default;\r\n}\r\n\r\n.button-9:focus {\r\n  box-shadow: rgba(50, 50, 93, .1) 0 0 0 1px inset, rgba(50, 50, 93, .2) 0 6px 15px 0, rgba(0, 0, 0, .1) 0 2px 2px 0, rgba(50, 151, 211, .3) 0 0 0 4px;\r\n}\r\n\r\n#snackbar {\r\n  visibility: hidden;\r\n  min-width: 250px;\r\n  margin-left: -125px;\r\n  background-color: #333;\r\n  color: #fff;\r\n  text-align: center;\r\n  border-radius: 2px;\r\n  padding: 16px;\r\n  position: fixed;\r\n  z-index: 1;\r\n  left: 50%;\r\n  bottom: 30px;\r\n  font-size: 17px;\r\n}\r\n\r\n#snackbar.show {\r\n  visibility: visible;\r\n  -webkit-animation: fadein 0.5s, fadeout 0.5s 2.5s;\r\n  animation: fadein 0.5s, fadeout 0.5s 2.5s;\r\n}\r\n\r\n@-webkit-keyframes fadein {\r\n  from {\r\n    bottom: 0;\r\n    opacity: 0;\r\n  }\r\n\r\n  to {\r\n    bottom: 30px;\r\n    opacity: 1;\r\n  }\r\n}\r\n\r\n@keyframes fadein {\r\n  from {\r\n    bottom: 0;\r\n    opacity: 0;\r\n  }\r\n\r\n  to {\r\n    bottom: 30px;\r\n    opacity: 1;\r\n  }\r\n}\r\n\r\n@-webkit-keyframes fadeout {\r\n  from {\r\n    bottom: 30px;\r\n    opacity: 1;\r\n  }\r\n\r\n  to {\r\n    bottom: 0;\r\n    opacity: 0;\r\n  }\r\n}\r\n\r\n@keyframes fadeout {\r\n  from {\r\n    bottom: 30px;\r\n    opacity: 1;\r\n  }\r\n\r\n  to {\r\n    bottom: 0;\r\n    opacity: 0;\r\n  }\r\n}\r\n\r\n.outbox {\r\n  height: fit-content;\r\n  min-height: 10vh;\r\n  width: 90%;\r\n  margin: 25px;\r\n  padding: 25px;\r\n  border-radius: 10px;\r\n  background-color: #202020;\r\n  color: red;\r\n  font-size: medium;\r\n  font-family: monospace;\r\n  font-weight: bold;\r\n  box-shadow: 2px 3px 10px 2px #D7DFFF;\r\n}\r\n\r\n.no-error {\r\n  color: white;\r\n}\r\n\r\n.outbox p {\r\n  background-color: inherit;\r\n  color: inherit;\r\n  font-size: inherit;\r\n  font-family: inherit;\r\n  font-weight: inherit;\r\n}\r\n\r\n\r\n</style>\r\n","import { render } from \"./TwoTestDriverComponent.vue?vue&type=template&id=6ad814cc&scoped=true\"\nimport script from \"./TwoTestDriverComponent.vue?vue&type=script&lang=js\"\nexport * from \"./TwoTestDriverComponent.vue?vue&type=script&lang=js\"\n\nimport \"./TwoTestDriverComponent.vue?vue&type=style&index=0&id=6ad814cc&scoped=true&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\nirma\\\\Development\\\\virtuallab-oop\\\\exp-10\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-6ad814cc\"]])\n\nexport default __exports__","import { render } from \"./SecondView.vue?vue&type=template&id=359623a5\"\nimport script from \"./SecondView.vue?vue&type=script&lang=js\"\nexport * from \"./SecondView.vue?vue&type=script&lang=js\"\n\nimport \"./SecondView.vue?vue&type=style&index=0&id=359623a5&lang=css\"\n\nimport exportComponent from \"C:\\\\Users\\\\nirma\\\\Development\\\\virtuallab-oop\\\\exp-10\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["class","id","_createElementVNode","_hoisted_1","_hoisted_2","onClick","$data","style","_createBlock","_KeepAlive","_resolveDynamicComponent","onInstructionsRead","$options","onTestDriver","_hoisted_3","_ctx","push","_hoisted_83","_createElementBlock","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","completed","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","display","_hoisted_12","spellcheck","maxlength","_hoisted_16","_hoisted_20","_hoisted_24","_hoisted_28","_hoisted_29","_hoisted_32","_hoisted_34","_hoisted_35","_hoisted_37","_hoisted_39","_hoisted_42","_hoisted_43","_hoisted_47","_hoisted_49","_hoisted_50","_hoisted_51","_hoisted_55","_hoisted_56","_hoisted_59","_hoisted_60","_hoisted_64","_hoisted_65","_hoisted_66","_hoisted_67","_hoisted_75","_hoisted_76","methods","correct1","x","document","getElementById","innerHTML","backgroundColor","className","setTimeout","replace","incorrect","validate_one","console","log","this","one","two","validate_two","three","four","validate_three","five","six","validate_four","a","b","validate_free","validate_free2","validate_free3","validate_five","seven","eight","validate_free4","validate_six","nine","ten","validate_free5","validate_seven","eleven","twelve","thirteen","validate_free6","validate_eight","fourteen","fifteen","validate_nine","sixteen","$emit","data","button_value","button_text","button_text_right","correct","valid","__exports__","components","OneClerkComponent","OneClassComponent","OneCustomerComponent","OnePersonComponent","OneReservationComponent","OneVehicleComponent","OneRentalSystemComponent","OneInstructionsComponent","TwoTestDriverComponent","componentSelect","testDriverComplete","instructionsReadCallback","value","testDriverCompleteCallback","render"],"sourceRoot":""}